<?xml version='1.0'?>

<element name='tooltip'>
<documentation>http://www.xulplanet.com/tutorials/xultu/popups.html</documentation>
<reference>http://www.xulplanet.com/reference/elemref/ref_tooltip.html</reference>
  This element is used for the tooltip popups. For text only tooltips, this  element doesn't need to be used; instead you may just add a tooltiptext  attribute to an element.  

<attr name='crop'>
  If the label of the tooltip is too small to fit in its given space, the  text will be cropped on the side specified by the crop attribute.  An ellipsis will be used in place of the cropped text. If the box  direction is reversed, the cropping is reversed.
<value name='start'>
    The text will be cropped on its left side. 
</value>
<value name='end'>
    The text will be cropped on its right side.
</value>
<value name='left'>
     (Deprecated)  The text will be cropped on its left side.
</value>
<value name='right'>
     (Deprecated)  The text will be cropped on its right side.
</value>
<value name='center'>
    The text will be cropped on both sides.
</value>
<value name='none'>
    The text will be not be cropped using an ellipsis. However, the text will
    simply be cut off if it is too large. The side depends on the CSS text
    alignment.
</value>
</attr>
<attr name='default' type='boolean'>
  If true, the tooltip is used as the default popup for displaying tooltips in  the window.
</attr>
<attr name='label' type='string'>
  The label that will appear on the tooltip. If this is left out, no text appears.
</attr>
<attr name='noautohide' type='boolean'>
  If this attribute is set to false or omitted, the tooltip will automatically  disappear after a few seconds. If this attribute is set to true, this will  not happen and the tooltip will only hide when the user moves the mouse to  another element.
</attr>
<attr name='onpopuphidden' type='script code'>
  This event is sent to a popup after it has been hidden.
</attr>
<attr name='onpopuphiding' type='script code'>
  This event is sent to a popup when it is about to be hidden.
</attr>
<attr name='onpopupshowing' type='script code'>
  This event is sent to a popup just before it is popped open. This handler is  usually used to dynamically set the contents when the user requests to display it.  Returning false from this event handler prevents the popup from appearing.
</attr>
<attr name='onpopupshown' type='script code'>
  This is event is sent to a popup after it has been opened, much like the onload  event is sent to a window when it is opened.
</attr>
<attr name='position'>
  The position attribute determines where the popup appears relative to the element  the user clicked to invoke the popup. This allows you to place the menu on one side  on a button.
<value name='after_start'>
    The popup appears underneath the element with the popup's upper-left corner
    aligned with the lower-left corner of the element. The left edges of the
    element and the popup are aligned. This is typically used for drop-down menus.
</value>
<value name='after_end'>
    The popup appears underneath the element with the popup's upper-right corner
    aligned with the lower-right corner of the element. The right edges of the
    element and the popup are aligned.
</value>
<value name='before_start'>
    The popup appears above the element with the popup's lower-left corner
    aligned with the upper-left corner of the element. The left edges of the
    element and the popup are aligned.
</value>
<value name='before_end'>
    The popup appears above the element with the popup's lower-right corner
    aligned with the upper-right corner of the element. The right edges of the
    element and the popup are aligned.
</value>
<value name='end_after'>
    The popup appears to the right of the element with the popup's lower-left
    corner aligned with the lower-right corner of the element. The bottom edges
    of the element and the popup are aligned.
</value>
<value name='end_before'>
    The popup appears to the right of the element with the popup's upper-left
    corner aligned with the upper-right corner of the element. The top edges of
    the element and the popup are aligned.
</value>
<value name='start_after'>
    The popup appears to the left of the element with the popup's lower-right
    corner aligned with the lower-left corner of the element. The bottom edges
    of the element and the popup are aligned.
</value>
<value name='start_before'>
    The popup appears to the left of the element with the popup's upper-right
    corner aligned with the upper-left corner of the element. The top edges of
    the element and the popup are aligned.
</value>
<value name='overlap'>
    The popup appears over top of the element with the upper-left corners aligned.
</value>
<value name='at_pointer'>
    The popup appears at the same position as the mouse pointer.
</value>
<value name='after_pointer'>
    The popup appears at the same horizontal position as the mouse pointer, but
    vertically, it is placed just below the element.
</value>
</attr>
<method name='hidePopup'>
<prototype> hidePopup ( ) </prototype>
  
  Closes the tooltip window immediately.
</method>
<prop name='label'/>
<method name='moveTo'>
<prototype> moveTo ( x , y ) </prototype>
  
  Moves the popup to a new location.
</method>
<prop name='popupBoxObject' type='nsIPopupBoxObject'>
  This read-only property holds the nsIPopupBoxObject that implements the tooltip.  You wouldn't normally need to use this property as all of its functions are  available via the tooltip itself.
</prop>
<prop name='position'>
  The position attribute determines where the popup appears relative to the element  the user clicked to invoke the popup. This allows you to place the menu on one side  on a button.
<value name='after_start'>
    The popup appears underneath the element with the popup's upper-left corner
    aligned with the lower-left corner of the element. The left edges of the
    element and the popup are aligned. This is typically used for drop-down menus.
</value>
<value name='after_end'>
    The popup appears underneath the element with the popup's upper-right corner
    aligned with the lower-right corner of the element. The right edges of the
    element and the popup are aligned.
</value>
<value name='before_start'>
    The popup appears above the element with the popup's lower-left corner
    aligned with the upper-left corner of the element. The left edges of the
    element and the popup are aligned.
</value>
<value name='before_end'>
    The popup appears above the element with the popup's lower-right corner
    aligned with the upper-right corner of the element. The right edges of the
    element and the popup are aligned.
</value>
<value name='end_after'>
    The popup appears to the right of the element with the popup's lower-left
    corner aligned with the lower-right corner of the element. The bottom edges
    of the element and the popup are aligned.
</value>
<value name='end_before'>
    The popup appears to the right of the element with the popup's upper-left
    corner aligned with the upper-right corner of the element. The top edges of
    the element and the popup are aligned.
</value>
<value name='start_after'>
    The popup appears to the left of the element with the popup's lower-right
    corner aligned with the lower-left corner of the element. The bottom edges
    of the element and the popup are aligned.
</value>
<value name='start_before'>
    The popup appears to the left of the element with the popup's upper-right
    corner aligned with the upper-left corner of the element. The top edges of
    the element and the popup are aligned.
</value>
<value name='overlap'>
    The popup appears over top of the element with the upper-left corners aligned.
</value>
<value name='at_pointer'>
    The popup appears at the same position as the mouse pointer.
</value>
<value name='after_pointer'>
    The popup appears at the same horizontal position as the mouse pointer, but
    vertically, it is placed just below the element.
</value>
</prop>
<method name='showPopup'>
<prototype> showPopup ( element, x , y , popupType, anchor, align ) </prototype>
  
  Opens the tooltip. There are two ways of specifying where the tooltip  appears, either at a specific screen position, or relative to some element  in the window. If either x and y are set to values, the tooltip will  appear at the screen coordinate (x,y). If x and y are -1, the tooltip will  be positioned relative to the element specified as the first argument. This is  the likely case for having a tooltip appear over an element. In this latter case,  the anchor and align arguments may be used to further control where the tooltip  appears relative to the element.  The anchor argument  corresponds to the popupanchor attribute on the element. The align argument  corresponds to the popupalign attribute on the element. The anchor and align  attributes are ignored if either x or y are not -1.        To have a tooltip appear relative to another element yet still be offset by  some number of pixels, determine the actual screen position of the element  using the boxObject.screenX and boxObject.screenY properties of the element  and use those as the x and y arguments offset by the desired values.        Type should be either the string "popup", "context" or "tooltip".   
</method>
<method name='sizeTo'>
<prototype> sizeTo ( width , height ) </prototype>
  
  Changes the current size of the popup to a new width and height.
</method>
</element>
