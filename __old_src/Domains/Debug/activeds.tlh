// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (cd1c43fe).
//
// d:\my files\projects\personal\domains\debug\activeds.tlh
//
// C++ source equivalent of Win32 type library c:\\winnt\\system32\\activeds.tlb
// compiler-generated file created 01/02/03 at 16:49:50 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

typedef enum __MIDL___MIDL_itf_ads_0000_0001 ADSTYPEENUM;
typedef struct __MIDL___MIDL_itf_ads_0000_0002 ADS_OCTET_STRING;
struct __MIDL___MIDL_itf_ads_0000_0002;
typedef struct __MIDL___MIDL_itf_ads_0000_0003 ADS_NT_SECURITY_DESCRIPTOR;
struct __MIDL___MIDL_itf_ads_0000_0003;
struct _SYSTEMTIME;
typedef struct __MIDL___MIDL_itf_ads_0000_0004 ADS_PROV_SPECIFIC;
struct __MIDL___MIDL_itf_ads_0000_0004;
struct _ADS_CASEIGNORE_LIST;
struct _ADS_OCTET_LIST;
typedef struct __MIDL___MIDL_itf_ads_0000_0005 ADS_PATH;
struct __MIDL___MIDL_itf_ads_0000_0005;
typedef struct __MIDL___MIDL_itf_ads_0000_0006 ADS_POSTALADDRESS;
struct __MIDL___MIDL_itf_ads_0000_0006;
typedef struct __MIDL___MIDL_itf_ads_0000_0007 ADS_TIMESTAMP;
struct __MIDL___MIDL_itf_ads_0000_0007;
typedef struct __MIDL___MIDL_itf_ads_0000_0008 ADS_BACKLINK;
struct __MIDL___MIDL_itf_ads_0000_0008;
typedef struct __MIDL___MIDL_itf_ads_0000_0009 ADS_TYPEDNAME;
struct __MIDL___MIDL_itf_ads_0000_0009;
typedef struct __MIDL___MIDL_itf_ads_0000_0010 ADS_HOLD;
struct __MIDL___MIDL_itf_ads_0000_0010;
typedef struct __MIDL___MIDL_itf_ads_0000_0011 ADS_NETADDRESS;
struct __MIDL___MIDL_itf_ads_0000_0011;
typedef struct __MIDL___MIDL_itf_ads_0000_0012 ADS_REPLICAPOINTER;
struct __MIDL___MIDL_itf_ads_0000_0012;
typedef struct __MIDL___MIDL_itf_ads_0000_0013 ADS_FAXNUMBER;
struct __MIDL___MIDL_itf_ads_0000_0013;
typedef struct __MIDL___MIDL_itf_ads_0000_0014 ADS_EMAIL;
struct __MIDL___MIDL_itf_ads_0000_0014;
typedef struct __MIDL___MIDL_itf_ads_0000_0015 ADS_DN_WITH_BINARY;
struct __MIDL___MIDL_itf_ads_0000_0015;
typedef struct __MIDL___MIDL_itf_ads_0000_0016 ADS_DN_WITH_STRING;
struct __MIDL___MIDL_itf_ads_0000_0016;
struct _adsvalue;
union __MIDL___MIDL_itf_ads_0000_0017;
struct _ads_attr_info;
typedef enum __MIDL___MIDL_itf_ads_0000_0018 ADS_AUTHENTICATION_ENUM;
struct _ads_object_info;
typedef enum __MIDL___MIDL_itf_ads_0000_0019 ADS_STATUSENUM;
typedef enum __MIDL___MIDL_itf_ads_0000_0020 ADS_DEREFENUM;
typedef enum __MIDL___MIDL_itf_ads_0000_0021 ADS_SCOPEENUM;
typedef enum __MIDL___MIDL_itf_ads_0000_0022 ADS_PREFERENCES_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0000_0023 ADSI_DIALECT_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0000_0024 ADS_CHASE_REFERRALS_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0000_0025 ADS_SEARCHPREF_ENUM;
struct ads_searchpref_info;
struct ads_search_column;
struct _ads_attr_def;
struct _ads_class_def;
struct _ads_sortkey;
typedef enum __MIDL___MIDL_itf_ads_0000_0026 ADS_PROPERTY_OPERATION_ENUM;
struct __declspec(uuid("fd8256d0-fd15-11ce-abc4-02608c9e7553"))
/* dual interface */ IADs;
struct __declspec(uuid("001677d0-fd16-11ce-abc4-02608c9e7553"))
/* dual interface */ IADsContainer;
struct __declspec(uuid("72b945e0-253b-11cf-a988-00aa006bc149"))
/* dual interface */ IADsCollection;
struct __declspec(uuid("451a0030-72ec-11cf-b03b-00aa006e0975"))
/* dual interface */ IADsMembers;
struct __declspec(uuid("c6f602b6-8f69-11d0-8528-00c04fd8d503"))
/* dual interface */ IADsPropertyList;
struct __declspec(uuid("05792c8e-941f-11d0-8529-00c04fd8d503"))
/* dual interface */ IADsPropertyEntry;
struct /* coclass */ PropertyEntry;
struct __declspec(uuid("79fa9ad0-a97c-11d0-8534-00c04fd8d503"))
/* dual interface */ IADsPropertyValue;
struct __declspec(uuid("306e831c-5bc7-11d1-a3b8-00c04fb950dc"))
/* dual interface */ IADsPropertyValue2;
struct /* coclass */ PropertyValue;
struct __declspec(uuid("86ab4bbe-65f6-11d1-8c13-00c04fd8d503"))
/* interface */ IPrivateDispatch;
typedef unsigned long ULONG_PTR;
struct __declspec(uuid("89126bab-6ead-11d1-8c18-00c04fd8d503"))
/* interface */ IPrivateUnknown;
struct __declspec(uuid("3d35553c-d2b0-11d1-b17b-0000f87593a0"))
/* interface */ IADsExtension;
struct __declspec(uuid("b2bd0902-8878-11d1-8c21-00c04fd8d503"))
/* dual interface */ IADsDeleteOps;
struct __declspec(uuid("28b96ba0-b330-11cf-a9ad-00aa006bc149"))
/* dual interface */ IADsNamespaces;
struct __declspec(uuid("c8f93dd0-4ae0-11cf-9e73-00aa004a5691"))
/* dual interface */ IADsClass;
struct __declspec(uuid("c8f93dd3-4ae0-11cf-9e73-00aa004a5691"))
/* dual interface */ IADsProperty;
struct __declspec(uuid("c8f93dd2-4ae0-11cf-9e73-00aa004a5691"))
/* dual interface */ IADsSyntax;
typedef enum __MIDL___MIDL_itf_ads_0120_0001 ADS_SYSTEMFLAG_ENUM;
struct __declspec(uuid("a05e03a2-effe-11cf-8abc-00c04fd8d503"))
/* dual interface */ IADsLocality;
struct __declspec(uuid("a1cd2dc6-effe-11cf-8abc-00c04fd8d503"))
/* dual interface */ IADsO;
struct __declspec(uuid("a2f733b8-effe-11cf-8abc-00c04fd8d503"))
/* dual interface */ IADsOU;
struct __declspec(uuid("00e4c220-fd16-11ce-abc4-02608c9e7553"))
/* dual interface */ IADsDomain;
struct __declspec(uuid("efe3cc70-1d9f-11cf-b1f3-02608c9e7553"))
/* dual interface */ IADsComputer;
struct __declspec(uuid("ef497680-1d9f-11cf-b1f3-02608c9e7553"))
/* dual interface */ IADsComputerOperations;
typedef enum __MIDL___MIDL_itf_ads_0126_0001 ADS_GROUP_TYPE_ENUM;
struct __declspec(uuid("27636b00-410f-11cf-b1ff-02608c9e7553"))
/* dual interface */ IADsGroup;
struct __declspec(uuid("3e37e320-17e2-11cf-abc4-02608c9e7553"))
/* dual interface */ IADsUser;
struct __declspec(uuid("b15160d0-1226-11cf-a985-00aa006bc149"))
/* dual interface */ IADsPrintQueue;
struct __declspec(uuid("124be5c0-156e-11cf-a986-00aa006bc149"))
/* dual interface */ IADsPrintQueueOperations;
struct __declspec(uuid("32fb6780-1ed0-11cf-a988-00aa006bc149"))
/* dual interface */ IADsPrintJob;
struct __declspec(uuid("9a52db30-1ecf-11cf-a988-00aa006bc149"))
/* dual interface */ IADsPrintJobOperations;
struct __declspec(uuid("68af66e0-31ca-11cf-a98a-00aa006bc149"))
/* dual interface */ IADsService;
struct __declspec(uuid("5d7b33f0-31ca-11cf-a98a-00aa006bc149"))
/* dual interface */ IADsServiceOperations;
struct __declspec(uuid("a89d1900-31ca-11cf-a98a-00aa006bc149"))
/* dual interface */ IADsFileService;
struct __declspec(uuid("a02ded10-31ca-11cf-a98a-00aa006bc149"))
/* dual interface */ IADsFileServiceOperations;
struct __declspec(uuid("eb6dcaf0-4b83-11cf-a995-00aa006bc149"))
/* dual interface */ IADsFileShare;
struct __declspec(uuid("398b7da0-4aab-11cf-ae2c-00aa006ebfb9"))
/* dual interface */ IADsSession;
struct __declspec(uuid("34a05b20-4aab-11cf-ae2c-00aa006ebfb9"))
/* dual interface */ IADsResource;
struct __declspec(uuid("ddf2891e-0f9c-11d0-8ad4-00c04fd8d503"))
/* dual interface */ IADsOpenDSObject;
struct __declspec(uuid("e798de2c-22e4-11d0-84fe-00c04fd8d503"))
/* interface */ IDirectoryObject;
struct __declspec(uuid("109ba8ec-92f0-11d0-a790-00c04fd8d5a8"))
/* interface */ IDirectorySearch;
struct __declspec(uuid("75db3b9c-a4d8-11d0-a79c-00c04fd8d5a8"))
/* interface */ IDirectorySchemaMgmt;
struct __declspec(uuid("1346ce8c-9039-11d0-8528-00c04fd8d503"))
/* interface */ IADsAggregatee;
struct __declspec(uuid("52db5fb0-941f-11d0-8529-00c04fd8d503"))
/* interface */ IADsAggregator;
struct __declspec(uuid("b4f3a14c-9bdd-11d0-852c-00c04fd8d503"))
/* dual interface */ IADsAccessControlEntry;
struct /* coclass */ AccessControlEntry;
struct __declspec(uuid("b7ee91cc-9bdd-11d0-852c-00c04fd8d503"))
/* dual interface */ IADsAccessControlList;
struct /* coclass */ AccessControlList;
struct __declspec(uuid("b8c787ca-9bdd-11d0-852c-00c04fd8d503"))
/* dual interface */ IADsSecurityDescriptor;
struct /* coclass */ SecurityDescriptor;
typedef enum __MIDL___MIDL_itf_ads_0148_0001 ADS_RIGHTS_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0148_0002 ADS_ACETYPE_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0148_0003 ADS_ACEFLAG_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0148_0004 ADS_FLAGTYPE_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0148_0005 ADS_SD_CONTROL_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0148_0006 ADS_SD_REVISION_ENUM;
struct __declspec(uuid("9068270b-0939-11d1-8be1-00c04fd8d503"))
/* dual interface */ IADsLargeInteger;
struct /* coclass */ LargeInteger;
typedef enum __MIDL___MIDL_itf_ads_0149_0001 ADS_NAME_TYPE_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0149_0002 ADS_NAME_INITTYPE_ENUM;
struct __declspec(uuid("b1b272a3-3625-11d1-a3a4-00c04fb950dc"))
/* dual interface */ IADsNameTranslate;
struct /* coclass */ NameTranslate;
struct __declspec(uuid("7b66b533-4680-11d1-a3b4-00c04fb950dc"))
/* dual interface */ IADsCaseIgnoreList;
struct /* coclass */ CaseIgnoreList;
struct __declspec(uuid("a910dea9-4680-11d1-a3b4-00c04fb950dc"))
/* dual interface */ IADsFaxNumber;
struct /* coclass */ FaxNumber;
struct __declspec(uuid("b21a50a9-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsNetAddress;
struct /* coclass */ NetAddress;
struct __declspec(uuid("7b28b80f-4680-11d1-a3b4-00c04fb950dc"))
/* dual interface */ IADsOctetList;
struct /* coclass */ OctetList;
struct __declspec(uuid("97af011a-478e-11d1-a3b4-00c04fb950dc"))
/* dual interface */ IADsEmail;
struct /* coclass */ Email;
struct __declspec(uuid("b287fcd5-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsPath;
struct /* coclass */ Path;
struct __declspec(uuid("f60fb803-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsReplicaPointer;
struct /* coclass */ ReplicaPointer;
struct __declspec(uuid("8452d3ab-0869-11d1-a377-00c04fb950dc"))
/* dual interface */ IADsAcl;
struct /* coclass */ Acl;
struct __declspec(uuid("b2f5a901-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsTimestamp;
struct /* coclass */ Timestamp;
struct __declspec(uuid("7adecf29-4680-11d1-a3b4-00c04fb950dc"))
/* dual interface */ IADsPostalAddress;
struct /* coclass */ PostalAddress;
struct __declspec(uuid("fd1302bd-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsBackLink;
struct /* coclass */ BackLink;
struct __declspec(uuid("b371a349-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsTypedName;
struct /* coclass */ TypedName;
struct __declspec(uuid("b3eb3b37-4080-11d1-a3ac-00c04fb950dc"))
/* dual interface */ IADsHold;
struct /* coclass */ Hold;
typedef enum __MIDL___MIDL_itf_ads_0163_0001 ADS_OPTION_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0163_0002 ADS_SECURITY_INFO_ENUM;
struct __declspec(uuid("46f14fda-232b-11d1-a808-00c04fd8d5a8"))
/* dual interface */ IADsObjectOptions;
typedef enum __MIDL___MIDL_itf_ads_0164_0001 ADS_SETTYPE_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0164_0002 ADS_FORMAT_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0164_0003 ADS_DISPLAY_ENUM;
typedef enum __MIDL___MIDL_itf_ads_0164_0004 ADS_ESCAPE_MODE_ENUM;
struct __declspec(uuid("d592aed4-f420-11d0-a36e-00c04fb950dc"))
/* dual interface */ IADsPathname;
struct /* coclass */ Pathname;
struct __declspec(uuid("5bb11929-afd1-11d2-9cb9-0000f87a369e"))
/* dual interface */ IADsADSystemInfo;
struct /* coclass */ ADSystemInfo;
struct __declspec(uuid("6c6d65dc-afd1-11d2-9cb9-0000f87a369e"))
/* dual interface */ IADsWinNTSystemInfo;
struct /* coclass */ WinNTSystemInfo;
struct __declspec(uuid("7e99c0a2-f935-11d2-ba96-00c04fb6d0d1"))
/* dual interface */ IADsDNWithBinary;
struct /* coclass */ DNWithBinary;
struct __declspec(uuid("370df02e-f934-11d2-ba96-00c04fb6d0d1"))
/* dual interface */ IADsDNWithString;
struct /* coclass */ DNWithString;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IADs, __uuidof(IADs));
_COM_SMARTPTR_TYPEDEF(IADsContainer, __uuidof(IADsContainer));
_COM_SMARTPTR_TYPEDEF(IADsCollection, __uuidof(IADsCollection));
_COM_SMARTPTR_TYPEDEF(IADsMembers, __uuidof(IADsMembers));
_COM_SMARTPTR_TYPEDEF(IADsPropertyList, __uuidof(IADsPropertyList));
_COM_SMARTPTR_TYPEDEF(IADsPropertyEntry, __uuidof(IADsPropertyEntry));
_COM_SMARTPTR_TYPEDEF(IADsPropertyValue, __uuidof(IADsPropertyValue));
_COM_SMARTPTR_TYPEDEF(IADsPropertyValue2, __uuidof(IADsPropertyValue2));
_COM_SMARTPTR_TYPEDEF(IPrivateDispatch, __uuidof(IPrivateDispatch));
_COM_SMARTPTR_TYPEDEF(IPrivateUnknown, __uuidof(IPrivateUnknown));
_COM_SMARTPTR_TYPEDEF(IADsExtension, __uuidof(IADsExtension));
_COM_SMARTPTR_TYPEDEF(IADsDeleteOps, __uuidof(IADsDeleteOps));
_COM_SMARTPTR_TYPEDEF(IADsNamespaces, __uuidof(IADsNamespaces));
_COM_SMARTPTR_TYPEDEF(IADsClass, __uuidof(IADsClass));
_COM_SMARTPTR_TYPEDEF(IADsProperty, __uuidof(IADsProperty));
_COM_SMARTPTR_TYPEDEF(IADsSyntax, __uuidof(IADsSyntax));
_COM_SMARTPTR_TYPEDEF(IADsLocality, __uuidof(IADsLocality));
_COM_SMARTPTR_TYPEDEF(IADsO, __uuidof(IADsO));
_COM_SMARTPTR_TYPEDEF(IADsOU, __uuidof(IADsOU));
_COM_SMARTPTR_TYPEDEF(IADsDomain, __uuidof(IADsDomain));
_COM_SMARTPTR_TYPEDEF(IADsComputer, __uuidof(IADsComputer));
_COM_SMARTPTR_TYPEDEF(IADsComputerOperations, __uuidof(IADsComputerOperations));
_COM_SMARTPTR_TYPEDEF(IADsGroup, __uuidof(IADsGroup));
_COM_SMARTPTR_TYPEDEF(IADsUser, __uuidof(IADsUser));
_COM_SMARTPTR_TYPEDEF(IADsPrintQueue, __uuidof(IADsPrintQueue));
_COM_SMARTPTR_TYPEDEF(IADsPrintQueueOperations, __uuidof(IADsPrintQueueOperations));
_COM_SMARTPTR_TYPEDEF(IADsPrintJob, __uuidof(IADsPrintJob));
_COM_SMARTPTR_TYPEDEF(IADsPrintJobOperations, __uuidof(IADsPrintJobOperations));
_COM_SMARTPTR_TYPEDEF(IADsService, __uuidof(IADsService));
_COM_SMARTPTR_TYPEDEF(IADsServiceOperations, __uuidof(IADsServiceOperations));
_COM_SMARTPTR_TYPEDEF(IADsFileService, __uuidof(IADsFileService));
_COM_SMARTPTR_TYPEDEF(IADsFileServiceOperations, __uuidof(IADsFileServiceOperations));
_COM_SMARTPTR_TYPEDEF(IADsFileShare, __uuidof(IADsFileShare));
_COM_SMARTPTR_TYPEDEF(IADsSession, __uuidof(IADsSession));
_COM_SMARTPTR_TYPEDEF(IADsResource, __uuidof(IADsResource));
_COM_SMARTPTR_TYPEDEF(IADsOpenDSObject, __uuidof(IADsOpenDSObject));
_COM_SMARTPTR_TYPEDEF(IDirectoryObject, __uuidof(IDirectoryObject));
_COM_SMARTPTR_TYPEDEF(IDirectorySearch, __uuidof(IDirectorySearch));
_COM_SMARTPTR_TYPEDEF(IDirectorySchemaMgmt, __uuidof(IDirectorySchemaMgmt));
_COM_SMARTPTR_TYPEDEF(IADsAggregatee, __uuidof(IADsAggregatee));
_COM_SMARTPTR_TYPEDEF(IADsAggregator, __uuidof(IADsAggregator));
_COM_SMARTPTR_TYPEDEF(IADsAccessControlEntry, __uuidof(IADsAccessControlEntry));
_COM_SMARTPTR_TYPEDEF(IADsAccessControlList, __uuidof(IADsAccessControlList));
_COM_SMARTPTR_TYPEDEF(IADsSecurityDescriptor, __uuidof(IADsSecurityDescriptor));
_COM_SMARTPTR_TYPEDEF(IADsLargeInteger, __uuidof(IADsLargeInteger));
_COM_SMARTPTR_TYPEDEF(IADsNameTranslate, __uuidof(IADsNameTranslate));
_COM_SMARTPTR_TYPEDEF(IADsCaseIgnoreList, __uuidof(IADsCaseIgnoreList));
_COM_SMARTPTR_TYPEDEF(IADsFaxNumber, __uuidof(IADsFaxNumber));
_COM_SMARTPTR_TYPEDEF(IADsNetAddress, __uuidof(IADsNetAddress));
_COM_SMARTPTR_TYPEDEF(IADsOctetList, __uuidof(IADsOctetList));
_COM_SMARTPTR_TYPEDEF(IADsEmail, __uuidof(IADsEmail));
_COM_SMARTPTR_TYPEDEF(IADsPath, __uuidof(IADsPath));
_COM_SMARTPTR_TYPEDEF(IADsReplicaPointer, __uuidof(IADsReplicaPointer));
_COM_SMARTPTR_TYPEDEF(IADsAcl, __uuidof(IADsAcl));
_COM_SMARTPTR_TYPEDEF(IADsTimestamp, __uuidof(IADsTimestamp));
_COM_SMARTPTR_TYPEDEF(IADsPostalAddress, __uuidof(IADsPostalAddress));
_COM_SMARTPTR_TYPEDEF(IADsBackLink, __uuidof(IADsBackLink));
_COM_SMARTPTR_TYPEDEF(IADsTypedName, __uuidof(IADsTypedName));
_COM_SMARTPTR_TYPEDEF(IADsHold, __uuidof(IADsHold));
_COM_SMARTPTR_TYPEDEF(IADsObjectOptions, __uuidof(IADsObjectOptions));
_COM_SMARTPTR_TYPEDEF(IADsPathname, __uuidof(IADsPathname));
_COM_SMARTPTR_TYPEDEF(IADsADSystemInfo, __uuidof(IADsADSystemInfo));
_COM_SMARTPTR_TYPEDEF(IADsWinNTSystemInfo, __uuidof(IADsWinNTSystemInfo));
_COM_SMARTPTR_TYPEDEF(IADsDNWithBinary, __uuidof(IADsDNWithBinary));
_COM_SMARTPTR_TYPEDEF(IADsDNWithString, __uuidof(IADsDNWithString));

//
// Type library items
//

enum __MIDL___MIDL_itf_ads_0000_0001
{
    ADSTYPE_INVALID = 0,
    ADSTYPE_DN_STRING = 1,
    ADSTYPE_CASE_EXACT_STRING = 2,
    ADSTYPE_CASE_IGNORE_STRING = 3,
    ADSTYPE_PRINTABLE_STRING = 4,
    ADSTYPE_NUMERIC_STRING = 5,
    ADSTYPE_BOOLEAN = 6,
    ADSTYPE_INTEGER = 7,
    ADSTYPE_OCTET_STRING = 8,
    ADSTYPE_UTC_TIME = 9,
    ADSTYPE_LARGE_INTEGER = 10,
    ADSTYPE_PROV_SPECIFIC = 11,
    ADSTYPE_OBJECT_CLASS = 12,
    ADSTYPE_CASEIGNORE_LIST = 13,
    ADSTYPE_OCTET_LIST = 14,
    ADSTYPE_PATH = 15,
    ADSTYPE_POSTALADDRESS = 16,
    ADSTYPE_TIMESTAMP = 17,
    ADSTYPE_BACKLINK = 18,
    ADSTYPE_TYPEDNAME = 19,
    ADSTYPE_HOLD = 20,
    ADSTYPE_NETADDRESS = 21,
    ADSTYPE_REPLICAPOINTER = 22,
    ADSTYPE_FAXNUMBER = 23,
    ADSTYPE_EMAIL = 24,
    ADSTYPE_NT_SECURITY_DESCRIPTOR = 25,
    ADSTYPE_UNKNOWN = 26,
    ADSTYPE_DN_WITH_BINARY = 27,
    ADSTYPE_DN_WITH_STRING = 28
};

struct __MIDL___MIDL_itf_ads_0000_0002
{
    unsigned long dwLength;
    unsigned char * lpValue;
};

struct __MIDL___MIDL_itf_ads_0000_0003
{
    unsigned long dwLength;
    unsigned char * lpValue;
};

struct _SYSTEMTIME
{
    unsigned short wYear;
    unsigned short wMonth;
    unsigned short wDayOfWeek;
    unsigned short wDay;
    unsigned short wHour;
    unsigned short wMinute;
    unsigned short wSecond;
    unsigned short wMilliseconds;
};

struct __MIDL___MIDL_itf_ads_0000_0004
{
    unsigned long dwLength;
    unsigned char * lpValue;
};

struct _ADS_CASEIGNORE_LIST
{
    struct _ADS_CASEIGNORE_LIST * Next;
    LPWSTR String;
};

struct _ADS_OCTET_LIST
{
    struct _ADS_OCTET_LIST * Next;
    unsigned long Length;
    unsigned char * Data;
};

struct __MIDL___MIDL_itf_ads_0000_0005
{
    unsigned long Type;
    LPWSTR VolumeName;
    LPWSTR Path;
};

struct __MIDL___MIDL_itf_ads_0000_0006
{
    LPWSTR PostalAddress[6];
};

struct __MIDL___MIDL_itf_ads_0000_0007
{
    unsigned long WholeSeconds;
    unsigned long EventID;
};

struct __MIDL___MIDL_itf_ads_0000_0008
{
    unsigned long RemoteID;
    LPWSTR ObjectName;
};

struct __MIDL___MIDL_itf_ads_0000_0009
{
    LPWSTR ObjectName;
    unsigned long Level;
    unsigned long Interval;
};

struct __MIDL___MIDL_itf_ads_0000_0010
{
    LPWSTR ObjectName;
    unsigned long Amount;
};

struct __MIDL___MIDL_itf_ads_0000_0011
{
    unsigned long AddressType;
    unsigned long AddressLength;
    unsigned char * Address;
};

struct __MIDL___MIDL_itf_ads_0000_0012
{
    LPWSTR ServerName;
    unsigned long ReplicaType;
    unsigned long ReplicaNumber;
    unsigned long Count;
    struct __MIDL___MIDL_itf_ads_0000_0011 * ReplicaAddressHints;
};

struct __MIDL___MIDL_itf_ads_0000_0013
{
    LPWSTR TelephoneNumber;
    unsigned long NumberOfBits;
    unsigned char * Parameters;
};

struct __MIDL___MIDL_itf_ads_0000_0014
{
    LPWSTR Address;
    unsigned long Type;
};

struct __MIDL___MIDL_itf_ads_0000_0015
{
    unsigned long dwLength;
    unsigned char * lpBinaryValue;
    LPWSTR pszDNString;
};

struct __MIDL___MIDL_itf_ads_0000_0016
{
    LPWSTR pszStringValue;
    LPWSTR pszDNString;
};

union __MIDL___MIDL_itf_ads_0000_0017
{
    LPWSTR DNString;
    LPWSTR CaseExactString;
    LPWSTR CaseIgnoreString;
    LPWSTR PrintableString;
    LPWSTR NumericString;
    unsigned long Boolean;
    unsigned long Integer;
    ADS_OCTET_STRING OctetString;
    struct _SYSTEMTIME UTCTime;
    struct _LARGE_INTEGER LargeInteger;
    LPWSTR ClassName;
    ADS_PROV_SPECIFIC ProviderSpecific;
    struct _ADS_CASEIGNORE_LIST * pCaseIgnoreList;
    struct _ADS_OCTET_LIST * pOctetList;
    struct __MIDL___MIDL_itf_ads_0000_0005 * pPath;
    struct __MIDL___MIDL_itf_ads_0000_0006 * pPostalAddress;
    ADS_TIMESTAMP Timestamp;
    ADS_BACKLINK BackLink;
    struct __MIDL___MIDL_itf_ads_0000_0009 * pTypedName;
    ADS_HOLD Hold;
    struct __MIDL___MIDL_itf_ads_0000_0011 * pNetAddress;
    struct __MIDL___MIDL_itf_ads_0000_0012 * pReplicaPointer;
    struct __MIDL___MIDL_itf_ads_0000_0013 * pFaxNumber;
    ADS_EMAIL Email;
    ADS_NT_SECURITY_DESCRIPTOR SecurityDescriptor;
    struct __MIDL___MIDL_itf_ads_0000_0015 * pDNWithBinary;
    struct __MIDL___MIDL_itf_ads_0000_0016 * pDNWithString;
};

struct _adsvalue
{
    ADSTYPEENUM dwType;
    union __MIDL___MIDL_itf_ads_0000_0017 __MIDL_0010;
};

struct _ads_attr_info
{
    LPWSTR pszAttrName;
    unsigned long dwControlCode;
    ADSTYPEENUM dwADsType;
    struct _adsvalue * pADsValues;
    unsigned long dwNumValues;
};

enum __MIDL___MIDL_itf_ads_0000_0018
{
    ADS_SECURE_AUTHENTICATION = 1,
    ADS_USE_ENCRYPTION = 2,
    ADS_USE_SSL = 2,
    ADS_READONLY_SERVER = 4,
    ADS_PROMPT_CREDENTIALS = 8,
    ADS_NO_AUTHENTICATION = 16,
    ADS_FAST_BIND = 32,
    ADS_USE_SIGNING = 64,
    ADS_USE_SEALING = 128,
    ADS_USE_DELEGATION = 256,
    ADS_SERVER_BIND = 512,
    ADS_AUTH_RESERVED = -2147483648
};

struct _ads_object_info
{
    LPWSTR pszRDN;
    LPWSTR pszObjectDN;
    LPWSTR pszParentDN;
    LPWSTR pszSchemaDN;
    LPWSTR pszClassName;
};

enum __MIDL___MIDL_itf_ads_0000_0019
{
    ADS_STATUS_S_OK = 0,
    ADS_STATUS_INVALID_SEARCHPREF = 1,
    ADS_STATUS_INVALID_SEARCHPREFVALUE = 2
};

enum __MIDL___MIDL_itf_ads_0000_0020
{
    ADS_DEREF_NEVER = 0,
    ADS_DEREF_SEARCHING = 1,
    ADS_DEREF_FINDING = 2,
    ADS_DEREF_ALWAYS = 3
};

enum __MIDL___MIDL_itf_ads_0000_0021
{
    ADS_SCOPE_BASE = 0,
    ADS_SCOPE_ONELEVEL = 1,
    ADS_SCOPE_SUBTREE = 2
};

enum __MIDL___MIDL_itf_ads_0000_0022
{
    ADSIPROP_ASYNCHRONOUS = 0,
    ADSIPROP_DEREF_ALIASES = 1,
    ADSIPROP_SIZE_LIMIT = 2,
    ADSIPROP_TIME_LIMIT = 3,
    ADSIPROP_ATTRIBTYPES_ONLY = 4,
    ADSIPROP_SEARCH_SCOPE = 5,
    ADSIPROP_TIMEOUT = 6,
    ADSIPROP_PAGESIZE = 7,
    ADSIPROP_PAGED_TIME_LIMIT = 8,
    ADSIPROP_CHASE_REFERRALS = 9,
    ADSIPROP_SORT_ON = 10,
    ADSIPROP_CACHE_RESULTS = 11,
    ADSIPROP_ADSIFLAG = 12
};

enum __MIDL___MIDL_itf_ads_0000_0023
{
    ADSI_DIALECT_LDAP = 0,
    ADSI_DIALECT_SQL = 1
};

enum __MIDL___MIDL_itf_ads_0000_0024
{
    ADS_CHASE_REFERRALS_NEVER = 0,
    ADS_CHASE_REFERRALS_SUBORDINATE = 32,
    ADS_CHASE_REFERRALS_EXTERNAL = 64,
    ADS_CHASE_REFERRALS_ALWAYS = 96
};

enum __MIDL___MIDL_itf_ads_0000_0025
{
    ADS_SEARCHPREF_ASYNCHRONOUS = 0,
    ADS_SEARCHPREF_DEREF_ALIASES = 1,
    ADS_SEARCHPREF_SIZE_LIMIT = 2,
    ADS_SEARCHPREF_TIME_LIMIT = 3,
    ADS_SEARCHPREF_ATTRIBTYPES_ONLY = 4,
    ADS_SEARCHPREF_SEARCH_SCOPE = 5,
    ADS_SEARCHPREF_TIMEOUT = 6,
    ADS_SEARCHPREF_PAGESIZE = 7,
    ADS_SEARCHPREF_PAGED_TIME_LIMIT = 8,
    ADS_SEARCHPREF_CHASE_REFERRALS = 9,
    ADS_SEARCHPREF_SORT_ON = 10,
    ADS_SEARCHPREF_CACHE_RESULTS = 11,
    ADS_SEARCHPREF_DIRSYNC = 12,
    ADS_SEARCHPREF_TOMBSTONE = 13
};

struct ads_searchpref_info
{
    ADS_SEARCHPREF_ENUM dwSearchPref;
    struct _adsvalue vValue;
    ADS_STATUSENUM dwStatus;
};

struct ads_search_column
{
    LPWSTR pszAttrName;
    ADSTYPEENUM dwADsType;
    struct _adsvalue * pADsValues;
    unsigned long dwNumValues;
    void * hReserved;
};

struct _ads_attr_def
{
    LPWSTR pszAttrName;
    ADSTYPEENUM dwADsType;
    unsigned long dwMinRange;
    unsigned long dwMaxRange;
    long fMultiValued;
};

struct _ads_class_def
{
    LPWSTR pszClassName;
    unsigned long dwMandatoryAttrs;
    LPWSTR * ppszMandatoryAttrs;
    unsigned long optionalAttrs;
    LPWSTR * * ppszOptionalAttrs;
    unsigned long dwNamingAttrs;
    LPWSTR * * ppszNamingAttrs;
    unsigned long dwSuperClasses;
    LPWSTR * * ppszSuperClasses;
    long fIsContainer;
};

struct _ads_sortkey
{
    LPWSTR pszAttrType;
    LPWSTR pszReserved;
    char fReverseorder;
};

enum __MIDL___MIDL_itf_ads_0000_0026
{
    ADS_PROPERTY_CLEAR = 1,
    ADS_PROPERTY_UPDATE = 2,
    ADS_PROPERTY_APPEND = 3,
    ADS_PROPERTY_DELETE = 4
};

struct __declspec(uuid("fd8256d0-fd15-11ce-abc4-02608c9e7553"))
IADs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    _bstr_t Class;
    __declspec(property(get=GetGUID))
    _bstr_t GUID;
    __declspec(property(get=GetADsPath))
    _bstr_t ADsPath;
    __declspec(property(get=GetParent))
    _bstr_t Parent;
    __declspec(property(get=GetSchema))
    _bstr_t Schema;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetClass ( );
    _bstr_t GetGUID ( );
    _bstr_t GetADsPath ( );
    _bstr_t GetParent ( );
    _bstr_t GetSchema ( );
    HRESULT GetInfo ( );
    HRESULT SetInfo ( );
    _variant_t Get (
        _bstr_t bstrName );
    HRESULT Put (
        _bstr_t bstrName,
        const _variant_t & vProp );
    _variant_t GetEx (
        _bstr_t bstrName );
    HRESULT PutEx (
        long lnControlCode,
        _bstr_t bstrName,
        const _variant_t & vProp );
    HRESULT GetInfoEx (
        const _variant_t & vProperties,
        long lnReserved );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Class (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_GUID (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ADsPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Schema (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall raw_GetInfo ( ) = 0;
    virtual HRESULT __stdcall raw_SetInfo ( ) = 0;
    virtual HRESULT __stdcall raw_Get (
        BSTR bstrName,
        VARIANT * pvProp ) = 0;
    virtual HRESULT __stdcall raw_Put (
        BSTR bstrName,
        VARIANT vProp ) = 0;
    virtual HRESULT __stdcall raw_GetEx (
        BSTR bstrName,
        VARIANT * pvProp ) = 0;
    virtual HRESULT __stdcall raw_PutEx (
        long lnControlCode,
        BSTR bstrName,
        VARIANT vProp ) = 0;
    virtual HRESULT __stdcall raw_GetInfoEx (
        VARIANT vProperties,
        long lnReserved ) = 0;
};

struct __declspec(uuid("001677d0-fd16-11ce-abc4-02608c9e7553"))
IADsContainer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFilter,put=PutFilter))
    _variant_t Filter;
    __declspec(property(get=GetHints,put=PutHints))
    _variant_t Hints;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    _variant_t GetFilter ( );
    void PutFilter (
        const _variant_t & pVar );
    _variant_t GetHints ( );
    void PutHints (
        const _variant_t & pvFilter );
    IDispatchPtr GetObject (
        _bstr_t ClassName,
        _bstr_t RelativeName );
    IDispatchPtr Create (
        _bstr_t ClassName,
        _bstr_t RelativeName );
    HRESULT Delete (
        _bstr_t bstrClassName,
        _bstr_t bstrRelativeName );
    IDispatchPtr CopyHere (
        _bstr_t SourceName,
        _bstr_t NewName );
    IDispatchPtr MoveHere (
        _bstr_t SourceName,
        _bstr_t NewName );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall get_Filter (
        VARIANT * pVar ) = 0;
    virtual HRESULT __stdcall put_Filter (
        VARIANT pVar ) = 0;
    virtual HRESULT __stdcall get_Hints (
        VARIANT * pvFilter ) = 0;
    virtual HRESULT __stdcall put_Hints (
        VARIANT pvFilter ) = 0;
    virtual HRESULT __stdcall raw_GetObject (
        BSTR ClassName,
        BSTR RelativeName,
        IDispatch * * ppObject ) = 0;
    virtual HRESULT __stdcall raw_Create (
        BSTR ClassName,
        BSTR RelativeName,
        IDispatch * * ppObject ) = 0;
    virtual HRESULT __stdcall raw_Delete (
        BSTR bstrClassName,
        BSTR bstrRelativeName ) = 0;
    virtual HRESULT __stdcall raw_CopyHere (
        BSTR SourceName,
        BSTR NewName,
        IDispatch * * ppObject ) = 0;
    virtual HRESULT __stdcall raw_MoveHere (
        BSTR SourceName,
        BSTR NewName,
        IDispatch * * ppObject ) = 0;
};

struct __declspec(uuid("72b945e0-253b-11cf-a988-00aa006bc149"))
IADsCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    HRESULT Add (
        _bstr_t bstrName,
        const _variant_t & vItem );
    HRESULT Remove (
        _bstr_t bstrItemToBeRemoved );
    _variant_t GetObject (
        _bstr_t bstrName );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumerator ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR bstrName,
        VARIANT vItem ) = 0;
    virtual HRESULT __stdcall raw_Remove (
        BSTR bstrItemToBeRemoved ) = 0;
    virtual HRESULT __stdcall raw_GetObject (
        BSTR bstrName,
        VARIANT * pvItem ) = 0;
};

struct __declspec(uuid("451a0030-72ec-11cf-b03b-00aa006e0975"))
IADsMembers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFilter,put=PutFilter))
    _variant_t Filter;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    _variant_t GetFilter ( );
    void PutFilter (
        const _variant_t & pvFilter );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        long * plCount ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumerator ) = 0;
    virtual HRESULT __stdcall get_Filter (
        VARIANT * pvFilter ) = 0;
    virtual HRESULT __stdcall put_Filter (
        VARIANT pvFilter ) = 0;
};

struct __declspec(uuid("c6f602b6-8f69-11d0-8528-00c04fd8d503"))
IADsPropertyList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPropertyCount))
    long PropertyCount;

    //
    // Wrapper methods for error-handling
    //

    long GetPropertyCount ( );
    _variant_t Next ( );
    HRESULT Skip (
        long cElements );
    HRESULT Reset ( );
    _variant_t Item (
        const _variant_t & varIndex );
    _variant_t GetPropertyItem (
        _bstr_t bstrName,
        long lnADsType );
    HRESULT PutPropertyItem (
        const _variant_t & varData );
    HRESULT ResetPropertyItem (
        const _variant_t & varEntry );
    HRESULT PurgePropertyList ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PropertyCount (
        long * plCount ) = 0;
    virtual HRESULT __stdcall raw_Next (
        VARIANT * pVariant ) = 0;
    virtual HRESULT __stdcall raw_Skip (
        long cElements ) = 0;
    virtual HRESULT __stdcall raw_Reset ( ) = 0;
    virtual HRESULT __stdcall raw_Item (
        VARIANT varIndex,
        VARIANT * pVariant ) = 0;
    virtual HRESULT __stdcall raw_GetPropertyItem (
        BSTR bstrName,
        long lnADsType,
        VARIANT * pVariant ) = 0;
    virtual HRESULT __stdcall raw_PutPropertyItem (
        VARIANT varData ) = 0;
    virtual HRESULT __stdcall raw_ResetPropertyItem (
        VARIANT varEntry ) = 0;
    virtual HRESULT __stdcall raw_PurgePropertyList ( ) = 0;
};

struct __declspec(uuid("05792c8e-941f-11d0-8529-00c04fd8d503"))
IADsPropertyEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetADsType,put=PutADsType))
    long ADsType;
    __declspec(property(get=GetControlCode,put=PutControlCode))
    long ControlCode;
    __declspec(property(get=GetValues,put=PutValues))
    _variant_t Values;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Clear ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t retval );
    long GetADsType ( );
    void PutADsType (
        long retval );
    long GetControlCode ( );
    void PutControlCode (
        long retval );
    _variant_t GetValues ( );
    void PutValues (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Clear ( ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ADsType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ADsType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ControlCode (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ControlCode (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Values (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Values (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("72d3edc2-a4c4-11d0-8533-00c04fd8d503"))
PropertyEntry;
    // [ default ] interface IADsPropertyEntry
    // interface IDispatch

struct __declspec(uuid("79fa9ad0-a97c-11d0-8534-00c04fd8d503"))
IADsPropertyValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetADsType,put=PutADsType))
    long ADsType;
    __declspec(property(get=GetDNString,put=PutDNString))
    _bstr_t DNString;
    __declspec(property(get=GetCaseExactString,put=PutCaseExactString))
    _bstr_t CaseExactString;
    __declspec(property(get=GetCaseIgnoreString,put=PutCaseIgnoreString))
    _bstr_t CaseIgnoreString;
    __declspec(property(get=GetPrintableString,put=PutPrintableString))
    _bstr_t PrintableString;
    __declspec(property(get=GetNumericString,put=PutNumericString))
    _bstr_t NumericString;
    __declspec(property(get=GetBoolean,put=PutBoolean))
    long Boolean;
    __declspec(property(get=GetInteger,put=PutInteger))
    long Integer;
    __declspec(property(get=GetOctetString,put=PutOctetString))
    _variant_t OctetString;
    __declspec(property(get=GetSecurityDescriptor,put=PutSecurityDescriptor))
    IDispatchPtr SecurityDescriptor;
    __declspec(property(get=GetLargeInteger,put=PutLargeInteger))
    IDispatchPtr LargeInteger;
    __declspec(property(get=GetUTCTime,put=PutUTCTime))
    DATE UTCTime;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Clear ( );
    long GetADsType ( );
    void PutADsType (
        long retval );
    _bstr_t GetDNString ( );
    void PutDNString (
        _bstr_t retval );
    _bstr_t GetCaseExactString ( );
    void PutCaseExactString (
        _bstr_t retval );
    _bstr_t GetCaseIgnoreString ( );
    void PutCaseIgnoreString (
        _bstr_t retval );
    _bstr_t GetPrintableString ( );
    void PutPrintableString (
        _bstr_t retval );
    _bstr_t GetNumericString ( );
    void PutNumericString (
        _bstr_t retval );
    long GetBoolean ( );
    void PutBoolean (
        long retval );
    long GetInteger ( );
    void PutInteger (
        long retval );
    _variant_t GetOctetString ( );
    void PutOctetString (
        const _variant_t & retval );
    IDispatchPtr GetSecurityDescriptor ( );
    void PutSecurityDescriptor (
        IDispatch * retval );
    IDispatchPtr GetLargeInteger ( );
    void PutLargeInteger (
        IDispatch * retval );
    DATE GetUTCTime ( );
    void PutUTCTime (
        DATE retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Clear ( ) = 0;
    virtual HRESULT __stdcall get_ADsType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ADsType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_DNString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_DNString (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_CaseExactString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CaseExactString (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_CaseIgnoreString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CaseIgnoreString (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PrintableString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PrintableString (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_NumericString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_NumericString (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Boolean (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Boolean (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Integer (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Integer (
        long retval ) = 0;
    virtual HRESULT __stdcall get_OctetString (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_OctetString (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_SecurityDescriptor (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall put_SecurityDescriptor (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_LargeInteger (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall put_LargeInteger (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_UTCTime (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_UTCTime (
        DATE retval ) = 0;
};

struct __declspec(uuid("306e831c-5bc7-11d1-a3b8-00c04fb950dc"))
IADsPropertyValue2 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    _variant_t GetObjectProperty (
        long * lnADsType );
    HRESULT PutObjectProperty (
        long lnADsType,
        const _variant_t & vProp );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetObjectProperty (
        long * lnADsType,
        VARIANT * pvProp ) = 0;
    virtual HRESULT __stdcall raw_PutObjectProperty (
        long lnADsType,
        VARIANT vProp ) = 0;
};

struct __declspec(uuid("7b9e38b0-a97c-11d0-8534-00c04fd8d503"))
PropertyValue;
    // [ default ] interface IADsPropertyValue
    // interface IDispatch

struct __declspec(uuid("86ab4bbe-65f6-11d1-8c13-00c04fd8d503"))
IPrivateDispatch : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ADSIInitializeDispatchManager (
        long dwExtensionId );
    HRESULT ADSIGetTypeInfoCount (
        unsigned int * pctinfo );
    HRESULT ADSIGetTypeInfo (
        unsigned int itinfo,
        unsigned long lcid,
        struct ITypeInfo * * ppTInfo );
    HRESULT ADSIGetIDsOfNames (
        GUID * riid,
        unsigned short * * rgszNames,
        unsigned int cNames,
        unsigned long lcid,
        long * rgdispid );
    HRESULT ADSIInvoke (
        long dispidMember,
        GUID * riid,
        unsigned long lcid,
        unsigned short wFlags,
        struct DISPPARAMS * pdispparams,
        VARIANT * pvarResult,
        struct EXCEPINFO * pexcepinfo,
        unsigned int * puArgErr );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ADSIInitializeDispatchManager (
        long dwExtensionId ) = 0;
    virtual HRESULT __stdcall raw_ADSIGetTypeInfoCount (
        unsigned int * pctinfo ) = 0;
    virtual HRESULT __stdcall raw_ADSIGetTypeInfo (
        unsigned int itinfo,
        unsigned long lcid,
        struct ITypeInfo * * ppTInfo ) = 0;
    virtual HRESULT __stdcall raw_ADSIGetIDsOfNames (
        GUID * riid,
        unsigned short * * rgszNames,
        unsigned int cNames,
        unsigned long lcid,
        long * rgdispid ) = 0;
    virtual HRESULT __stdcall raw_ADSIInvoke (
        long dispidMember,
        GUID * riid,
        unsigned long lcid,
        unsigned short wFlags,
        struct DISPPARAMS * pdispparams,
        VARIANT * pvarResult,
        struct EXCEPINFO * pexcepinfo,
        unsigned int * puArgErr ) = 0;
};

struct __declspec(uuid("89126bab-6ead-11d1-8c18-00c04fd8d503"))
IPrivateUnknown : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ADSIInitializeObject (
        _bstr_t lpszUserName,
        _bstr_t lpszPassword,
        long lnReserved );
    HRESULT ADSIReleaseObject ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ADSIInitializeObject (
        BSTR lpszUserName,
        BSTR lpszPassword,
        long lnReserved ) = 0;
    virtual HRESULT __stdcall raw_ADSIReleaseObject ( ) = 0;
};

struct __declspec(uuid("3d35553c-d2b0-11d1-b17b-0000f87593a0"))
IADsExtension : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Operate (
        unsigned long dwCode,
        const _variant_t & varData1,
        const _variant_t & varData2,
        const _variant_t & varData3 );
    HRESULT PrivateGetIDsOfNames (
        GUID * riid,
        unsigned short * * rgszNames,
        unsigned int cNames,
        unsigned long lcid,
        long * rgdispid );
    HRESULT PrivateInvoke (
        long dispidMember,
        GUID * riid,
        unsigned long lcid,
        unsigned short wFlags,
        struct DISPPARAMS * pdispparams,
        VARIANT * pvarResult,
        struct EXCEPINFO * pexcepinfo,
        unsigned int * puArgErr );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Operate (
        unsigned long dwCode,
        VARIANT varData1,
        VARIANT varData2,
        VARIANT varData3 ) = 0;
    virtual HRESULT __stdcall raw_PrivateGetIDsOfNames (
        GUID * riid,
        unsigned short * * rgszNames,
        unsigned int cNames,
        unsigned long lcid,
        long * rgdispid ) = 0;
    virtual HRESULT __stdcall raw_PrivateInvoke (
        long dispidMember,
        GUID * riid,
        unsigned long lcid,
        unsigned short wFlags,
        struct DISPPARAMS * pdispparams,
        VARIANT * pvarResult,
        struct EXCEPINFO * pexcepinfo,
        unsigned int * puArgErr ) = 0;
};

struct __declspec(uuid("b2bd0902-8878-11d1-8c21-00c04fd8d503"))
IADsDeleteOps : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT DeleteObject (
        long lnFlags );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_DeleteObject (
        long lnFlags ) = 0;
};

struct __declspec(uuid("28b96ba0-b330-11cf-a9ad-00aa006bc149"))
IADsNamespaces : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaultContainer,put=PutDefaultContainer))
    _bstr_t DefaultContainer;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDefaultContainer ( );
    void PutDefaultContainer (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DefaultContainer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_DefaultContainer (
        BSTR retval ) = 0;
};

struct __declspec(uuid("c8f93dd0-4ae0-11cf-9e73-00aa004a5691"))
IADsClass : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetPrimaryInterface))
    _bstr_t PrimaryInterface;
    __declspec(property(get=GetCLSID,put=PutCLSID))
    _bstr_t CLSID;
    __declspec(property(get=GetOID,put=PutOID))
    _bstr_t OID;
    __declspec(property(get=GetAbstract,put=PutAbstract))
    VARIANT_BOOL Abstract;
    __declspec(property(get=GetMandatoryProperties,put=PutMandatoryProperties))
    _variant_t MandatoryProperties;
    __declspec(property(get=GetDerivedFrom,put=PutDerivedFrom))
    _variant_t DerivedFrom;
    __declspec(property(get=GetContainment,put=PutContainment))
    _variant_t Containment;
    __declspec(property(get=GetContainer,put=PutContainer))
    VARIANT_BOOL Container;
    __declspec(property(get=GetHelpFileName,put=PutHelpFileName))
    _bstr_t HelpFileName;
    __declspec(property(get=GetHelpFileContext,put=PutHelpFileContext))
    long HelpFileContext;
    __declspec(property(get=GetAuxiliary,put=PutAuxiliary))
    VARIANT_BOOL Auxiliary;
    __declspec(property(get=GetAuxDerivedFrom,put=PutAuxDerivedFrom))
    _variant_t AuxDerivedFrom;
    __declspec(property(get=GetPossibleSuperiors,put=PutPossibleSuperiors))
    _variant_t PossibleSuperiors;
    __declspec(property(get=GetOptionalProperties,put=PutOptionalProperties))
    _variant_t OptionalProperties;
    __declspec(property(get=GetNamingProperties,put=PutNamingProperties))
    _variant_t NamingProperties;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPrimaryInterface ( );
    _bstr_t GetCLSID ( );
    void PutCLSID (
        _bstr_t retval );
    _bstr_t GetOID ( );
    void PutOID (
        _bstr_t retval );
    VARIANT_BOOL GetAbstract ( );
    void PutAbstract (
        VARIANT_BOOL retval );
    VARIANT_BOOL GetAuxiliary ( );
    void PutAuxiliary (
        VARIANT_BOOL retval );
    _variant_t GetMandatoryProperties ( );
    void PutMandatoryProperties (
        const _variant_t & retval );
    _variant_t GetOptionalProperties ( );
    void PutOptionalProperties (
        const _variant_t & retval );
    _variant_t GetNamingProperties ( );
    void PutNamingProperties (
        const _variant_t & retval );
    _variant_t GetDerivedFrom ( );
    void PutDerivedFrom (
        const _variant_t & retval );
    _variant_t GetAuxDerivedFrom ( );
    void PutAuxDerivedFrom (
        const _variant_t & retval );
    _variant_t GetPossibleSuperiors ( );
    void PutPossibleSuperiors (
        const _variant_t & retval );
    _variant_t GetContainment ( );
    void PutContainment (
        const _variant_t & retval );
    VARIANT_BOOL GetContainer ( );
    void PutContainer (
        VARIANT_BOOL retval );
    _bstr_t GetHelpFileName ( );
    void PutHelpFileName (
        _bstr_t retval );
    long GetHelpFileContext ( );
    void PutHelpFileContext (
        long retval );
    IADsCollectionPtr Qualifiers ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PrimaryInterface (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_CLSID (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CLSID (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OID (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OID (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Abstract (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Abstract (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Auxiliary (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Auxiliary (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_MandatoryProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MandatoryProperties (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OptionalProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_OptionalProperties (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_NamingProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_NamingProperties (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_DerivedFrom (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_DerivedFrom (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_AuxDerivedFrom (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_AuxDerivedFrom (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_PossibleSuperiors (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PossibleSuperiors (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Containment (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Containment (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Container (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Container (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_HelpFileName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HelpFileName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HelpFileContext (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_HelpFileContext (
        long retval ) = 0;
    virtual HRESULT __stdcall raw_Qualifiers (
        struct IADsCollection * * ppQualifiers ) = 0;
};

struct __declspec(uuid("c8f93dd3-4ae0-11cf-9e73-00aa004a5691"))
IADsProperty : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetOID,put=PutOID))
    _bstr_t OID;
    __declspec(property(get=GetSyntax,put=PutSyntax))
    _bstr_t Syntax;
    __declspec(property(get=GetMaxRange,put=PutMaxRange))
    long MaxRange;
    __declspec(property(get=GetMinRange,put=PutMinRange))
    long MinRange;
    __declspec(property(get=GetMultiValued,put=PutMultiValued))
    VARIANT_BOOL MultiValued;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetOID ( );
    void PutOID (
        _bstr_t retval );
    _bstr_t GetSyntax ( );
    void PutSyntax (
        _bstr_t retval );
    long GetMaxRange ( );
    void PutMaxRange (
        long retval );
    long GetMinRange ( );
    void PutMinRange (
        long retval );
    VARIANT_BOOL GetMultiValued ( );
    void PutMultiValued (
        VARIANT_BOOL retval );
    IADsCollectionPtr Qualifiers ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_OID (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OID (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Syntax (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Syntax (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaxRange (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxRange (
        long retval ) = 0;
    virtual HRESULT __stdcall get_MinRange (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MinRange (
        long retval ) = 0;
    virtual HRESULT __stdcall get_MultiValued (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_MultiValued (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall raw_Qualifiers (
        struct IADsCollection * * ppQualifiers ) = 0;
};

struct __declspec(uuid("c8f93dd2-4ae0-11cf-9e73-00aa004a5691"))
IADsSyntax : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetOleAutoDataType,put=PutOleAutoDataType))
    long OleAutoDataType;

    //
    // Wrapper methods for error-handling
    //

    long GetOleAutoDataType ( );
    void PutOleAutoDataType (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_OleAutoDataType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_OleAutoDataType (
        long retval ) = 0;
};

enum __MIDL___MIDL_itf_ads_0120_0001
{
    ADS_SYSTEMFLAG_DISALLOW_DELETE = -2147483648,
    ADS_SYSTEMFLAG_CONFIG_ALLOW_RENAME = 1073741824,
    ADS_SYSTEMFLAG_CONFIG_ALLOW_MOVE = 536870912,
    ADS_SYSTEMFLAG_CONFIG_ALLOW_LIMITED_MOVE = 268435456,
    ADS_SYSTEMFLAG_DOMAIN_DISALLOW_RENAME = 134217728,
    ADS_SYSTEMFLAG_DOMAIN_DISALLOW_MOVE = 67108864,
    ADS_SYSTEMFLAG_CR_NTDS_NC = 1,
    ADS_SYSTEMFLAG_CR_NTDS_DOMAIN = 2,
    ADS_SYSTEMFLAG_ATTR_NOT_REPLICATED = 1,
    ADS_SYSTEMFLAG_ATTR_IS_CONSTRUCTED = 4
};

struct __declspec(uuid("a05e03a2-effe-11cf-8abc-00c04fd8d503"))
IADsLocality : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetLocalityName,put=PutLocalityName))
    _bstr_t LocalityName;
    __declspec(property(get=GetPostalAddress,put=PutPostalAddress))
    _bstr_t PostalAddress;
    __declspec(property(get=GetSeeAlso,put=PutSeeAlso))
    _variant_t SeeAlso;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetLocalityName ( );
    void PutLocalityName (
        _bstr_t retval );
    _bstr_t GetPostalAddress ( );
    void PutPostalAddress (
        _bstr_t retval );
    _variant_t GetSeeAlso ( );
    void PutSeeAlso (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LocalityName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LocalityName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PostalAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PostalAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SeeAlso (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_SeeAlso (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("a1cd2dc6-effe-11cf-8abc-00c04fd8d503"))
IADsO : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetLocalityName,put=PutLocalityName))
    _bstr_t LocalityName;
    __declspec(property(get=GetPostalAddress,put=PutPostalAddress))
    _bstr_t PostalAddress;
    __declspec(property(get=GetTelephoneNumber,put=PutTelephoneNumber))
    _bstr_t TelephoneNumber;
    __declspec(property(get=GetFaxNumber,put=PutFaxNumber))
    _bstr_t FaxNumber;
    __declspec(property(get=GetSeeAlso,put=PutSeeAlso))
    _variant_t SeeAlso;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetLocalityName ( );
    void PutLocalityName (
        _bstr_t retval );
    _bstr_t GetPostalAddress ( );
    void PutPostalAddress (
        _bstr_t retval );
    _bstr_t GetTelephoneNumber ( );
    void PutTelephoneNumber (
        _bstr_t retval );
    _bstr_t GetFaxNumber ( );
    void PutFaxNumber (
        _bstr_t retval );
    _variant_t GetSeeAlso ( );
    void PutSeeAlso (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LocalityName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LocalityName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PostalAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PostalAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_TelephoneNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_TelephoneNumber (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_FaxNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_FaxNumber (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SeeAlso (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_SeeAlso (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("a2f733b8-effe-11cf-8abc-00c04fd8d503"))
IADsOU : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetLocalityName,put=PutLocalityName))
    _bstr_t LocalityName;
    __declspec(property(get=GetPostalAddress,put=PutPostalAddress))
    _bstr_t PostalAddress;
    __declspec(property(get=GetTelephoneNumber,put=PutTelephoneNumber))
    _bstr_t TelephoneNumber;
    __declspec(property(get=GetFaxNumber,put=PutFaxNumber))
    _bstr_t FaxNumber;
    __declspec(property(get=GetSeeAlso,put=PutSeeAlso))
    _variant_t SeeAlso;
    __declspec(property(get=GetBusinessCategory,put=PutBusinessCategory))
    _bstr_t BusinessCategory;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetLocalityName ( );
    void PutLocalityName (
        _bstr_t retval );
    _bstr_t GetPostalAddress ( );
    void PutPostalAddress (
        _bstr_t retval );
    _bstr_t GetTelephoneNumber ( );
    void PutTelephoneNumber (
        _bstr_t retval );
    _bstr_t GetFaxNumber ( );
    void PutFaxNumber (
        _bstr_t retval );
    _variant_t GetSeeAlso ( );
    void PutSeeAlso (
        const _variant_t & retval );
    _bstr_t GetBusinessCategory ( );
    void PutBusinessCategory (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LocalityName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LocalityName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PostalAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PostalAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_TelephoneNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_TelephoneNumber (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_FaxNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_FaxNumber (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SeeAlso (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_SeeAlso (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BusinessCategory (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_BusinessCategory (
        BSTR retval ) = 0;
};

struct __declspec(uuid("00e4c220-fd16-11ce-abc4-02608c9e7553"))
IADsDomain : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetIsWorkgroup))
    VARIANT_BOOL IsWorkgroup;
    __declspec(property(get=GetMinPasswordLength,put=PutMinPasswordLength))
    long MinPasswordLength;
    __declspec(property(get=GetMinPasswordAge,put=PutMinPasswordAge))
    long MinPasswordAge;
    __declspec(property(get=GetMaxPasswordAge,put=PutMaxPasswordAge))
    long MaxPasswordAge;
    __declspec(property(get=GetMaxBadPasswordsAllowed,put=PutMaxBadPasswordsAllowed))
    long MaxBadPasswordsAllowed;
    __declspec(property(get=GetPasswordHistoryLength,put=PutPasswordHistoryLength))
    long PasswordHistoryLength;
    __declspec(property(get=GetPasswordAttributes,put=PutPasswordAttributes))
    long PasswordAttributes;
    __declspec(property(get=GetAutoUnlockInterval,put=PutAutoUnlockInterval))
    long AutoUnlockInterval;
    __declspec(property(get=GetLockoutObservationInterval,put=PutLockoutObservationInterval))
    long LockoutObservationInterval;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetIsWorkgroup ( );
    long GetMinPasswordLength ( );
    void PutMinPasswordLength (
        long retval );
    long GetMinPasswordAge ( );
    void PutMinPasswordAge (
        long retval );
    long GetMaxPasswordAge ( );
    void PutMaxPasswordAge (
        long retval );
    long GetMaxBadPasswordsAllowed ( );
    void PutMaxBadPasswordsAllowed (
        long retval );
    long GetPasswordHistoryLength ( );
    void PutPasswordHistoryLength (
        long retval );
    long GetPasswordAttributes ( );
    void PutPasswordAttributes (
        long retval );
    long GetAutoUnlockInterval ( );
    void PutAutoUnlockInterval (
        long retval );
    long GetLockoutObservationInterval ( );
    void PutLockoutObservationInterval (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsWorkgroup (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_MinPasswordLength (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MinPasswordLength (
        long retval ) = 0;
    virtual HRESULT __stdcall get_MinPasswordAge (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MinPasswordAge (
        long retval ) = 0;
    virtual HRESULT __stdcall get_MaxPasswordAge (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxPasswordAge (
        long retval ) = 0;
    virtual HRESULT __stdcall get_MaxBadPasswordsAllowed (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxBadPasswordsAllowed (
        long retval ) = 0;
    virtual HRESULT __stdcall get_PasswordHistoryLength (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_PasswordHistoryLength (
        long retval ) = 0;
    virtual HRESULT __stdcall get_PasswordAttributes (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_PasswordAttributes (
        long retval ) = 0;
    virtual HRESULT __stdcall get_AutoUnlockInterval (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AutoUnlockInterval (
        long retval ) = 0;
    virtual HRESULT __stdcall get_LockoutObservationInterval (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_LockoutObservationInterval (
        long retval ) = 0;
};

struct __declspec(uuid("efe3cc70-1d9f-11cf-b1f3-02608c9e7553"))
IADsComputer : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetStorageCapacity,put=PutStorageCapacity))
    _bstr_t StorageCapacity;
    __declspec(property(get=GetComputerID))
    _bstr_t ComputerID;
    __declspec(property(get=GetNetAddresses,put=PutNetAddresses))
    _variant_t NetAddresses;
    __declspec(property(get=GetSite))
    _bstr_t Site;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetLocation,put=PutLocation))
    _bstr_t Location;
    __declspec(property(get=GetPrimaryUser,put=PutPrimaryUser))
    _bstr_t PrimaryUser;
    __declspec(property(get=GetOwner,put=PutOwner))
    _bstr_t Owner;
    __declspec(property(get=GetDivision,put=PutDivision))
    _bstr_t Division;
    __declspec(property(get=GetDepartment,put=PutDepartment))
    _bstr_t Department;
    __declspec(property(get=GetRole,put=PutRole))
    _bstr_t Role;
    __declspec(property(get=GetOperatingSystem,put=PutOperatingSystem))
    _bstr_t OperatingSystem;
    __declspec(property(get=GetOperatingSystemVersion,put=PutOperatingSystemVersion))
    _bstr_t OperatingSystemVersion;
    __declspec(property(get=GetModel,put=PutModel))
    _bstr_t Model;
    __declspec(property(get=GetProcessor,put=PutProcessor))
    _bstr_t Processor;
    __declspec(property(get=GetProcessorCount,put=PutProcessorCount))
    _bstr_t ProcessorCount;
    __declspec(property(get=GetMemorySize,put=PutMemorySize))
    _bstr_t MemorySize;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetComputerID ( );
    _bstr_t GetSite ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetLocation ( );
    void PutLocation (
        _bstr_t retval );
    _bstr_t GetPrimaryUser ( );
    void PutPrimaryUser (
        _bstr_t retval );
    _bstr_t GetOwner ( );
    void PutOwner (
        _bstr_t retval );
    _bstr_t GetDivision ( );
    void PutDivision (
        _bstr_t retval );
    _bstr_t GetDepartment ( );
    void PutDepartment (
        _bstr_t retval );
    _bstr_t GetRole ( );
    void PutRole (
        _bstr_t retval );
    _bstr_t GetOperatingSystem ( );
    void PutOperatingSystem (
        _bstr_t retval );
    _bstr_t GetOperatingSystemVersion ( );
    void PutOperatingSystemVersion (
        _bstr_t retval );
    _bstr_t GetModel ( );
    void PutModel (
        _bstr_t retval );
    _bstr_t GetProcessor ( );
    void PutProcessor (
        _bstr_t retval );
    _bstr_t GetProcessorCount ( );
    void PutProcessorCount (
        _bstr_t retval );
    _bstr_t GetMemorySize ( );
    void PutMemorySize (
        _bstr_t retval );
    _bstr_t GetStorageCapacity ( );
    void PutStorageCapacity (
        _bstr_t retval );
    _variant_t GetNetAddresses ( );
    void PutNetAddresses (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ComputerID (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Site (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Location (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Location (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PrimaryUser (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PrimaryUser (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Owner (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Owner (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Division (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Division (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Department (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Department (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Role (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Role (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OperatingSystem (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OperatingSystem (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OperatingSystemVersion (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OperatingSystemVersion (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Model (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Model (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Processor (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Processor (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ProcessorCount (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ProcessorCount (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MemorySize (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MemorySize (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_StorageCapacity (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_StorageCapacity (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_NetAddresses (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_NetAddresses (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("ef497680-1d9f-11cf-b1f3-02608c9e7553"))
IADsComputerOperations : IADs
{
    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr Status ( );
    HRESULT Shutdown (
        VARIANT_BOOL bReboot );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Status (
        IDispatch * * ppObject ) = 0;
    virtual HRESULT __stdcall raw_Shutdown (
        VARIANT_BOOL bReboot ) = 0;
};

enum __MIDL___MIDL_itf_ads_0126_0001
{
    ADS_GROUP_TYPE_GLOBAL_GROUP = 2,
    ADS_GROUP_TYPE_DOMAIN_LOCAL_GROUP = 4,
    ADS_GROUP_TYPE_LOCAL_GROUP = 4,
    ADS_GROUP_TYPE_UNIVERSAL_GROUP = 8,
    ADS_GROUP_TYPE_SECURITY_ENABLED = -2147483648
};

struct __declspec(uuid("27636b00-410f-11cf-b1ff-02608c9e7553"))
IADsGroup : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    IADsMembersPtr Members ( );
    VARIANT_BOOL IsMember (
        _bstr_t bstrMember );
    HRESULT Add (
        _bstr_t bstrNewItem );
    HRESULT Remove (
        _bstr_t bstrItemToBeRemoved );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall raw_Members (
        struct IADsMembers * * ppMembers ) = 0;
    virtual HRESULT __stdcall raw_IsMember (
        BSTR bstrMember,
        VARIANT_BOOL * bMember ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR bstrNewItem ) = 0;
    virtual HRESULT __stdcall raw_Remove (
        BSTR bstrItemToBeRemoved ) = 0;
};

struct __declspec(uuid("3e37e320-17e2-11cf-abc4-02608c9e7553"))
IADsUser : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetFaxNumber,put=PutFaxNumber))
    _variant_t FaxNumber;
    __declspec(property(get=GetTelephonePager,put=PutTelephonePager))
    _variant_t TelephonePager;
    __declspec(property(get=GetDivision,put=PutDivision))
    _bstr_t Division;
    __declspec(property(get=GetEmployeeID,put=PutEmployeeID))
    _bstr_t EmployeeID;
    __declspec(property(get=GetFirstName,put=PutFirstName))
    _bstr_t FirstName;
    __declspec(property(get=GetFullName,put=PutFullName))
    _bstr_t FullName;
    __declspec(property(get=GetLastName,put=PutLastName))
    _bstr_t LastName;
    __declspec(property(get=GetManager,put=PutManager))
    _bstr_t Manager;
    __declspec(property(get=GetOtherName,put=PutOtherName))
    _bstr_t OtherName;
    __declspec(property(get=GetOfficeLocations,put=PutOfficeLocations))
    _variant_t OfficeLocations;
    __declspec(property(get=GetPostalAddresses,put=PutPostalAddresses))
    _variant_t PostalAddresses;
    __declspec(property(get=GetPostalCodes,put=PutPostalCodes))
    _variant_t PostalCodes;
    __declspec(property(get=GetNamePrefix,put=PutNamePrefix))
    _bstr_t NamePrefix;
    __declspec(property(get=GetTelephoneHome,put=PutTelephoneHome))
    _variant_t TelephoneHome;
    __declspec(property(get=GetTelephoneMobile,put=PutTelephoneMobile))
    _variant_t TelephoneMobile;
    __declspec(property(get=GetSeeAlso,put=PutSeeAlso))
    _variant_t SeeAlso;
    __declspec(property(get=GetTelephoneNumber,put=PutTelephoneNumber))
    _variant_t TelephoneNumber;
    __declspec(property(get=GetTitle,put=PutTitle))
    _bstr_t Title;
    __declspec(property(get=GetAccountDisabled,put=PutAccountDisabled))
    VARIANT_BOOL AccountDisabled;
    __declspec(property(get=GetAccountExpirationDate,put=PutAccountExpirationDate))
    DATE AccountExpirationDate;
    __declspec(property(get=GetDepartment,put=PutDepartment))
    _bstr_t Department;
    __declspec(property(get=GetGraceLoginsAllowed,put=PutGraceLoginsAllowed))
    long GraceLoginsAllowed;
    __declspec(property(get=GetGraceLoginsRemaining,put=PutGraceLoginsRemaining))
    long GraceLoginsRemaining;
    __declspec(property(get=GetIsAccountLocked,put=PutIsAccountLocked))
    VARIANT_BOOL IsAccountLocked;
    __declspec(property(get=GetNameSuffix,put=PutNameSuffix))
    _bstr_t NameSuffix;
    __declspec(property(get=GetLoginHours,put=PutLoginHours))
    _variant_t LoginHours;
    __declspec(property(get=GetLoginWorkstations,put=PutLoginWorkstations))
    _variant_t LoginWorkstations;
    __declspec(property(get=GetMaxLogins,put=PutMaxLogins))
    long MaxLogins;
    __declspec(property(get=GetMaxStorage,put=PutMaxStorage))
    long MaxStorage;
    __declspec(property(get=GetPasswordExpirationDate,put=PutPasswordExpirationDate))
    DATE PasswordExpirationDate;
    __declspec(property(get=GetPasswordMinimumLength,put=PutPasswordMinimumLength))
    long PasswordMinimumLength;
    __declspec(property(get=GetPasswordRequired,put=PutPasswordRequired))
    VARIANT_BOOL PasswordRequired;
    __declspec(property(get=GetRequireUniquePassword,put=PutRequireUniquePassword))
    VARIANT_BOOL RequireUniquePassword;
    __declspec(property(get=GetBadLoginAddress))
    _bstr_t BadLoginAddress;
    __declspec(property(get=GetBadLoginCount))
    long BadLoginCount;
    __declspec(property(get=GetHomePage,put=PutHomePage))
    _bstr_t HomePage;
    __declspec(property(get=GetLastLogin))
    DATE LastLogin;
    __declspec(property(get=GetLastLogoff))
    DATE LastLogoff;
    __declspec(property(get=GetLastFailedLogin))
    DATE LastFailedLogin;
    __declspec(property(get=GetPasswordLastChanged))
    DATE PasswordLastChanged;
    __declspec(property(get=GetEmailAddress,put=PutEmailAddress))
    _bstr_t EmailAddress;
    __declspec(property(get=GetHomeDirectory,put=PutHomeDirectory))
    _bstr_t HomeDirectory;
    __declspec(property(get=GetLanguages,put=PutLanguages))
    _variant_t Languages;
    __declspec(property(get=GetProfile,put=PutProfile))
    _bstr_t Profile;
    __declspec(property(get=GetLoginScript,put=PutLoginScript))
    _bstr_t LoginScript;
    __declspec(property(get=GetPicture,put=PutPicture))
    _variant_t Picture;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetBadLoginAddress ( );
    long GetBadLoginCount ( );
    DATE GetLastLogin ( );
    DATE GetLastLogoff ( );
    DATE GetLastFailedLogin ( );
    DATE GetPasswordLastChanged ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetDivision ( );
    void PutDivision (
        _bstr_t retval );
    _bstr_t GetDepartment ( );
    void PutDepartment (
        _bstr_t retval );
    _bstr_t GetEmployeeID ( );
    void PutEmployeeID (
        _bstr_t retval );
    _bstr_t GetFullName ( );
    void PutFullName (
        _bstr_t retval );
    _bstr_t GetFirstName ( );
    void PutFirstName (
        _bstr_t retval );
    _bstr_t GetLastName ( );
    void PutLastName (
        _bstr_t retval );
    _bstr_t GetOtherName ( );
    void PutOtherName (
        _bstr_t retval );
    _bstr_t GetNamePrefix ( );
    void PutNamePrefix (
        _bstr_t retval );
    _bstr_t GetNameSuffix ( );
    void PutNameSuffix (
        _bstr_t retval );
    _bstr_t GetTitle ( );
    void PutTitle (
        _bstr_t retval );
    _bstr_t GetManager ( );
    void PutManager (
        _bstr_t retval );
    _variant_t GetTelephoneHome ( );
    void PutTelephoneHome (
        const _variant_t & retval );
    _variant_t GetTelephoneMobile ( );
    void PutTelephoneMobile (
        const _variant_t & retval );
    _variant_t GetTelephoneNumber ( );
    void PutTelephoneNumber (
        const _variant_t & retval );
    _variant_t GetTelephonePager ( );
    void PutTelephonePager (
        const _variant_t & retval );
    _variant_t GetFaxNumber ( );
    void PutFaxNumber (
        const _variant_t & retval );
    _variant_t GetOfficeLocations ( );
    void PutOfficeLocations (
        const _variant_t & retval );
    _variant_t GetPostalAddresses ( );
    void PutPostalAddresses (
        const _variant_t & retval );
    _variant_t GetPostalCodes ( );
    void PutPostalCodes (
        const _variant_t & retval );
    _variant_t GetSeeAlso ( );
    void PutSeeAlso (
        const _variant_t & retval );
    VARIANT_BOOL GetAccountDisabled ( );
    void PutAccountDisabled (
        VARIANT_BOOL retval );
    DATE GetAccountExpirationDate ( );
    void PutAccountExpirationDate (
        DATE retval );
    long GetGraceLoginsAllowed ( );
    void PutGraceLoginsAllowed (
        long retval );
    long GetGraceLoginsRemaining ( );
    void PutGraceLoginsRemaining (
        long retval );
    VARIANT_BOOL GetIsAccountLocked ( );
    void PutIsAccountLocked (
        VARIANT_BOOL retval );
    _variant_t GetLoginHours ( );
    void PutLoginHours (
        const _variant_t & retval );
    _variant_t GetLoginWorkstations ( );
    void PutLoginWorkstations (
        const _variant_t & retval );
    long GetMaxLogins ( );
    void PutMaxLogins (
        long retval );
    long GetMaxStorage ( );
    void PutMaxStorage (
        long retval );
    DATE GetPasswordExpirationDate ( );
    void PutPasswordExpirationDate (
        DATE retval );
    long GetPasswordMinimumLength ( );
    void PutPasswordMinimumLength (
        long retval );
    VARIANT_BOOL GetPasswordRequired ( );
    void PutPasswordRequired (
        VARIANT_BOOL retval );
    VARIANT_BOOL GetRequireUniquePassword ( );
    void PutRequireUniquePassword (
        VARIANT_BOOL retval );
    _bstr_t GetEmailAddress ( );
    void PutEmailAddress (
        _bstr_t retval );
    _bstr_t GetHomeDirectory ( );
    void PutHomeDirectory (
        _bstr_t retval );
    _variant_t GetLanguages ( );
    void PutLanguages (
        const _variant_t & retval );
    _bstr_t GetProfile ( );
    void PutProfile (
        _bstr_t retval );
    _bstr_t GetLoginScript ( );
    void PutLoginScript (
        _bstr_t retval );
    _variant_t GetPicture ( );
    void PutPicture (
        const _variant_t & retval );
    _bstr_t GetHomePage ( );
    void PutHomePage (
        _bstr_t retval );
    IADsMembersPtr Groups ( );
    HRESULT SetPassword (
        _bstr_t NewPassword );
    HRESULT ChangePassword (
        _bstr_t bstrOldPassword,
        _bstr_t bstrNewPassword );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BadLoginAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_BadLoginCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_LastLogin (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall get_LastLogoff (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall get_LastFailedLogin (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall get_PasswordLastChanged (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Division (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Division (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Department (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Department (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EmployeeID (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EmployeeID (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_FullName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_FullName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_FirstName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_FirstName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LastName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LastName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OtherName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OtherName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_NamePrefix (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_NamePrefix (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_NameSuffix (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_NameSuffix (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Title (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Title (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Manager (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Manager (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_TelephoneHome (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_TelephoneHome (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_TelephoneMobile (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_TelephoneMobile (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_TelephoneNumber (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_TelephoneNumber (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_TelephonePager (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_TelephonePager (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_FaxNumber (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_FaxNumber (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OfficeLocations (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_OfficeLocations (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_PostalAddresses (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PostalAddresses (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_PostalCodes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PostalCodes (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_SeeAlso (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_SeeAlso (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_AccountDisabled (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_AccountDisabled (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_AccountExpirationDate (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_AccountExpirationDate (
        DATE retval ) = 0;
    virtual HRESULT __stdcall get_GraceLoginsAllowed (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_GraceLoginsAllowed (
        long retval ) = 0;
    virtual HRESULT __stdcall get_GraceLoginsRemaining (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_GraceLoginsRemaining (
        long retval ) = 0;
    virtual HRESULT __stdcall get_IsAccountLocked (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_IsAccountLocked (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_LoginHours (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LoginHours (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_LoginWorkstations (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LoginWorkstations (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_MaxLogins (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxLogins (
        long retval ) = 0;
    virtual HRESULT __stdcall get_MaxStorage (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxStorage (
        long retval ) = 0;
    virtual HRESULT __stdcall get_PasswordExpirationDate (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_PasswordExpirationDate (
        DATE retval ) = 0;
    virtual HRESULT __stdcall get_PasswordMinimumLength (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_PasswordMinimumLength (
        long retval ) = 0;
    virtual HRESULT __stdcall get_PasswordRequired (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_PasswordRequired (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_RequireUniquePassword (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_RequireUniquePassword (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_EmailAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EmailAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HomeDirectory (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HomeDirectory (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Languages (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Languages (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Profile (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Profile (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LoginScript (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LoginScript (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Picture (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Picture (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_HomePage (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HomePage (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall raw_Groups (
        struct IADsMembers * * ppGroups ) = 0;
    virtual HRESULT __stdcall raw_SetPassword (
        BSTR NewPassword ) = 0;
    virtual HRESULT __stdcall raw_ChangePassword (
        BSTR bstrOldPassword,
        BSTR bstrNewPassword ) = 0;
};

enum ADS_USER_FLAG
{
    ADS_UF_SCRIPT = 1,
    ADS_UF_ACCOUNTDISABLE = 2,
    ADS_UF_HOMEDIR_REQUIRED = 8,
    ADS_UF_LOCKOUT = 16,
    ADS_UF_PASSWD_NOTREQD = 32,
    ADS_UF_PASSWD_CANT_CHANGE = 64,
    ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED = 128,
    ADS_UF_TEMP_DUPLICATE_ACCOUNT = 256,
    ADS_UF_NORMAL_ACCOUNT = 512,
    ADS_UF_INTERDOMAIN_TRUST_ACCOUNT = 2048,
    ADS_UF_WORKSTATION_TRUST_ACCOUNT = 4096,
    ADS_UF_SERVER_TRUST_ACCOUNT = 8192,
    ADS_UF_DONT_EXPIRE_PASSWD = 65536,
    ADS_UF_MNS_LOGON_ACCOUNT = 131072,
    ADS_UF_SMARTCARD_REQUIRED = 262144,
    ADS_UF_TRUSTED_FOR_DELEGATION = 524288,
    ADS_UF_NOT_DELEGATED = 1048576
};

struct __declspec(uuid("b15160d0-1226-11cf-a985-00aa006bc149"))
IADsPrintQueue : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetPrinterPath,put=PutPrinterPath))
    _bstr_t PrinterPath;
    __declspec(property(get=GetModel,put=PutModel))
    _bstr_t Model;
    __declspec(property(get=GetDatatype,put=PutDatatype))
    _bstr_t Datatype;
    __declspec(property(get=GetPrintProcessor,put=PutPrintProcessor))
    _bstr_t PrintProcessor;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetLocation,put=PutLocation))
    _bstr_t Location;
    __declspec(property(get=GetStartTime,put=PutStartTime))
    DATE StartTime;
    __declspec(property(get=GetUntilTime,put=PutUntilTime))
    DATE UntilTime;
    __declspec(property(get=GetDefaultJobPriority,put=PutDefaultJobPriority))
    long DefaultJobPriority;
    __declspec(property(get=GetPriority,put=PutPriority))
    long Priority;
    __declspec(property(get=GetBannerPage,put=PutBannerPage))
    _bstr_t BannerPage;
    __declspec(property(get=GetPrintDevices,put=PutPrintDevices))
    _variant_t PrintDevices;
    __declspec(property(get=GetNetAddresses,put=PutNetAddresses))
    _variant_t NetAddresses;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPrinterPath ( );
    void PutPrinterPath (
        _bstr_t retval );
    _bstr_t GetModel ( );
    void PutModel (
        _bstr_t retval );
    _bstr_t GetDatatype ( );
    void PutDatatype (
        _bstr_t retval );
    _bstr_t GetPrintProcessor ( );
    void PutPrintProcessor (
        _bstr_t retval );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetLocation ( );
    void PutLocation (
        _bstr_t retval );
    DATE GetStartTime ( );
    void PutStartTime (
        DATE retval );
    DATE GetUntilTime ( );
    void PutUntilTime (
        DATE retval );
    long GetDefaultJobPriority ( );
    void PutDefaultJobPriority (
        long retval );
    long GetPriority ( );
    void PutPriority (
        long retval );
    _bstr_t GetBannerPage ( );
    void PutBannerPage (
        _bstr_t retval );
    _variant_t GetPrintDevices ( );
    void PutPrintDevices (
        const _variant_t & retval );
    _variant_t GetNetAddresses ( );
    void PutNetAddresses (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PrinterPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PrinterPath (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Model (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Model (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Datatype (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Datatype (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PrintProcessor (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_PrintProcessor (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Location (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Location (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_StartTime (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_StartTime (
        DATE retval ) = 0;
    virtual HRESULT __stdcall get_UntilTime (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_UntilTime (
        DATE retval ) = 0;
    virtual HRESULT __stdcall get_DefaultJobPriority (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_DefaultJobPriority (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Priority (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Priority (
        long retval ) = 0;
    virtual HRESULT __stdcall get_BannerPage (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_BannerPage (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_PrintDevices (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PrintDevices (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_NetAddresses (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_NetAddresses (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("124be5c0-156e-11cf-a986-00aa006bc149"))
IADsPrintQueueOperations : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetStatus))
    long Status;

    //
    // Wrapper methods for error-handling
    //

    long GetStatus ( );
    IADsCollectionPtr PrintJobs ( );
    HRESULT Pause ( );
    HRESULT Resume ( );
    HRESULT Purge ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Status (
        long * retval ) = 0;
    virtual HRESULT __stdcall raw_PrintJobs (
        struct IADsCollection * * pObject ) = 0;
    virtual HRESULT __stdcall raw_Pause ( ) = 0;
    virtual HRESULT __stdcall raw_Resume ( ) = 0;
    virtual HRESULT __stdcall raw_Purge ( ) = 0;
};

struct __declspec(uuid("32fb6780-1ed0-11cf-a988-00aa006bc149"))
IADsPrintJob : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetHostPrintQueue))
    _bstr_t HostPrintQueue;
    __declspec(property(get=GetUser))
    _bstr_t User;
    __declspec(property(get=GetUserPath))
    _bstr_t UserPath;
    __declspec(property(get=GetTimeSubmitted))
    DATE TimeSubmitted;
    __declspec(property(get=GetTotalPages))
    long TotalPages;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetPriority,put=PutPriority))
    long Priority;
    __declspec(property(get=GetStartTime,put=PutStartTime))
    DATE StartTime;
    __declspec(property(get=GetUntilTime,put=PutUntilTime))
    DATE UntilTime;
    __declspec(property(get=GetNotify,put=PutNotify))
    _bstr_t Notify;
    __declspec(property(get=GetNotifyPath,put=PutNotifyPath))
    _bstr_t NotifyPath;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetHostPrintQueue ( );
    _bstr_t GetUser ( );
    _bstr_t GetUserPath ( );
    DATE GetTimeSubmitted ( );
    long GetTotalPages ( );
    long GetSize ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    long GetPriority ( );
    void PutPriority (
        long retval );
    DATE GetStartTime ( );
    void PutStartTime (
        DATE retval );
    DATE GetUntilTime ( );
    void PutUntilTime (
        DATE retval );
    _bstr_t GetNotify ( );
    void PutNotify (
        _bstr_t retval );
    _bstr_t GetNotifyPath ( );
    void PutNotifyPath (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_HostPrintQueue (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_User (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_UserPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_TimeSubmitted (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall get_TotalPages (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Size (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Priority (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Priority (
        long retval ) = 0;
    virtual HRESULT __stdcall get_StartTime (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_StartTime (
        DATE retval ) = 0;
    virtual HRESULT __stdcall get_UntilTime (
        DATE * retval ) = 0;
    virtual HRESULT __stdcall put_UntilTime (
        DATE retval ) = 0;
    virtual HRESULT __stdcall get_Notify (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Notify (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_NotifyPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_NotifyPath (
        BSTR retval ) = 0;
};

struct __declspec(uuid("9a52db30-1ecf-11cf-a988-00aa006bc149"))
IADsPrintJobOperations : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetStatus))
    long Status;
    __declspec(property(get=GetTimeElapsed))
    long TimeElapsed;
    __declspec(property(get=GetPagesPrinted))
    long PagesPrinted;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;

    //
    // Wrapper methods for error-handling
    //

    long GetStatus ( );
    long GetTimeElapsed ( );
    long GetPagesPrinted ( );
    long GetPosition ( );
    void PutPosition (
        long retval );
    HRESULT Pause ( );
    HRESULT Resume ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Status (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_TimeElapsed (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_PagesPrinted (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Position (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Position (
        long retval ) = 0;
    virtual HRESULT __stdcall raw_Pause ( ) = 0;
    virtual HRESULT __stdcall raw_Resume ( ) = 0;
};

struct __declspec(uuid("68af66e0-31ca-11cf-a98a-00aa006bc149"))
IADsService : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetHostComputer,put=PutHostComputer))
    _bstr_t HostComputer;
    __declspec(property(get=GetDisplayName,put=PutDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetVersion,put=PutVersion))
    _bstr_t Version;
    __declspec(property(get=GetServiceType,put=PutServiceType))
    long ServiceType;
    __declspec(property(get=GetStartType,put=PutStartType))
    long StartType;
    __declspec(property(get=GetPath,put=PutPath))
    _bstr_t Path;
    __declspec(property(get=GetStartupParameters,put=PutStartupParameters))
    _bstr_t StartupParameters;
    __declspec(property(get=GetErrorControl,put=PutErrorControl))
    long ErrorControl;
    __declspec(property(get=GetLoadOrderGroup,put=PutLoadOrderGroup))
    _bstr_t LoadOrderGroup;
    __declspec(property(get=GetServiceAccountName,put=PutServiceAccountName))
    _bstr_t ServiceAccountName;
    __declspec(property(get=GetServiceAccountPath,put=PutServiceAccountPath))
    _bstr_t ServiceAccountPath;
    __declspec(property(get=GetDependencies,put=PutDependencies))
    _variant_t Dependencies;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetHostComputer ( );
    void PutHostComputer (
        _bstr_t retval );
    _bstr_t GetDisplayName ( );
    void PutDisplayName (
        _bstr_t retval );
    _bstr_t GetVersion ( );
    void PutVersion (
        _bstr_t retval );
    long GetServiceType ( );
    void PutServiceType (
        long retval );
    long GetStartType ( );
    void PutStartType (
        long retval );
    _bstr_t GetPath ( );
    void PutPath (
        _bstr_t retval );
    _bstr_t GetStartupParameters ( );
    void PutStartupParameters (
        _bstr_t retval );
    long GetErrorControl ( );
    void PutErrorControl (
        long retval );
    _bstr_t GetLoadOrderGroup ( );
    void PutLoadOrderGroup (
        _bstr_t retval );
    _bstr_t GetServiceAccountName ( );
    void PutServiceAccountName (
        _bstr_t retval );
    _bstr_t GetServiceAccountPath ( );
    void PutServiceAccountPath (
        _bstr_t retval );
    _variant_t GetDependencies ( );
    void PutDependencies (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_HostComputer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HostComputer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_DisplayName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_DisplayName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Version (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Version (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ServiceType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ServiceType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_StartType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_StartType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Path (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Path (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_StartupParameters (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_StartupParameters (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ErrorControl (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ErrorControl (
        long retval ) = 0;
    virtual HRESULT __stdcall get_LoadOrderGroup (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LoadOrderGroup (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ServiceAccountName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ServiceAccountName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ServiceAccountPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ServiceAccountPath (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Dependencies (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Dependencies (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("5d7b33f0-31ca-11cf-a98a-00aa006bc149"))
IADsServiceOperations : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetStatus))
    long Status;

    //
    // Wrapper methods for error-handling
    //

    long GetStatus ( );
    HRESULT Start ( );
    HRESULT Stop ( );
    HRESULT Pause ( );
    HRESULT Continue ( );
    HRESULT SetPassword (
        _bstr_t bstrNewPassword );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Status (
        long * retval ) = 0;
    virtual HRESULT __stdcall raw_Start ( ) = 0;
    virtual HRESULT __stdcall raw_Stop ( ) = 0;
    virtual HRESULT __stdcall raw_Pause ( ) = 0;
    virtual HRESULT __stdcall raw_Continue ( ) = 0;
    virtual HRESULT __stdcall raw_SetPassword (
        BSTR bstrNewPassword ) = 0;
};

struct __declspec(uuid("a89d1900-31ca-11cf-a98a-00aa006bc149"))
IADsFileService : IADsService
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetMaxUserCount,put=PutMaxUserCount))
    long MaxUserCount;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    long GetMaxUserCount ( );
    void PutMaxUserCount (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaxUserCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxUserCount (
        long retval ) = 0;
};

struct __declspec(uuid("a02ded10-31ca-11cf-a98a-00aa006bc149"))
IADsFileServiceOperations : IADsServiceOperations
{
    //
    // Wrapper methods for error-handling
    //

    IADsCollectionPtr Sessions ( );
    IADsCollectionPtr Resources ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Sessions (
        struct IADsCollection * * ppSessions ) = 0;
    virtual HRESULT __stdcall raw_Resources (
        struct IADsCollection * * ppResources ) = 0;
};

struct __declspec(uuid("eb6dcaf0-4b83-11cf-a995-00aa006bc149"))
IADsFileShare : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetCurrentUserCount))
    long CurrentUserCount;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetHostComputer,put=PutHostComputer))
    _bstr_t HostComputer;
    __declspec(property(get=GetPath,put=PutPath))
    _bstr_t Path;
    __declspec(property(get=GetMaxUserCount,put=PutMaxUserCount))
    long MaxUserCount;

    //
    // Wrapper methods for error-handling
    //

    long GetCurrentUserCount ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t retval );
    _bstr_t GetHostComputer ( );
    void PutHostComputer (
        _bstr_t retval );
    _bstr_t GetPath ( );
    void PutPath (
        _bstr_t retval );
    long GetMaxUserCount ( );
    void PutMaxUserCount (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CurrentUserCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HostComputer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HostComputer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Path (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Path (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaxUserCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_MaxUserCount (
        long retval ) = 0;
};

struct __declspec(uuid("398b7da0-4aab-11cf-ae2c-00aa006ebfb9"))
IADsSession : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetUser))
    _bstr_t User;
    __declspec(property(get=GetUserPath))
    _bstr_t UserPath;
    __declspec(property(get=GetComputer))
    _bstr_t Computer;
    __declspec(property(get=GetComputerPath))
    _bstr_t ComputerPath;
    __declspec(property(get=GetConnectTime))
    long ConnectTime;
    __declspec(property(get=GetIdleTime))
    long IdleTime;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUser ( );
    _bstr_t GetUserPath ( );
    _bstr_t GetComputer ( );
    _bstr_t GetComputerPath ( );
    long GetConnectTime ( );
    long GetIdleTime ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_User (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_UserPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Computer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ComputerPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ConnectTime (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_IdleTime (
        long * retval ) = 0;
};

struct __declspec(uuid("34a05b20-4aab-11cf-ae2c-00aa006ebfb9"))
IADsResource : IADs
{
    //
    // Property data
    //

    __declspec(property(get=GetUser))
    _bstr_t User;
    __declspec(property(get=GetUserPath))
    _bstr_t UserPath;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetLockCount))
    long LockCount;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUser ( );
    _bstr_t GetUserPath ( );
    _bstr_t GetPath ( );
    long GetLockCount ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_User (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_UserPath (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Path (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_LockCount (
        long * retval ) = 0;
};

struct __declspec(uuid("ddf2891e-0f9c-11d0-8ad4-00c04fd8d503"))
IADsOpenDSObject : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr OpenDSObject (
        _bstr_t lpszDNName,
        _bstr_t lpszUserName,
        _bstr_t lpszPassword,
        long lnReserved );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_OpenDSObject (
        BSTR lpszDNName,
        BSTR lpszUserName,
        BSTR lpszPassword,
        long lnReserved,
        IDispatch * * ppOleDsObj ) = 0;
};

struct __declspec(uuid("e798de2c-22e4-11d0-84fe-00c04fd8d503"))
IDirectoryObject : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT GetObjectInformation (
        struct _ads_object_info * * ppObjInfo );
    HRESULT GetObjectAttributes (
        LPWSTR * pAttributeNames,
        unsigned long dwNumberAttributes,
        struct _ads_attr_info * * ppAttributeEntries,
        unsigned long * pdwNumAttributesReturned );
    HRESULT SetObjectAttributes (
        struct _ads_attr_info * pAttributeEntries,
        unsigned long dwNumAttributes,
        unsigned long * pdwNumAttributesModified );
    HRESULT CreateDSObject (
        LPWSTR pszRDNName,
        struct _ads_attr_info * pAttributeEntries,
        unsigned long dwNumAttributes,
        IDispatch * * ppObject );
    HRESULT DeleteDSObject (
        LPWSTR pszRDNName );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetObjectInformation (
        struct _ads_object_info * * ppObjInfo ) = 0;
    virtual HRESULT __stdcall raw_GetObjectAttributes (
        LPWSTR * pAttributeNames,
        unsigned long dwNumberAttributes,
        struct _ads_attr_info * * ppAttributeEntries,
        unsigned long * pdwNumAttributesReturned ) = 0;
    virtual HRESULT __stdcall raw_SetObjectAttributes (
        struct _ads_attr_info * pAttributeEntries,
        unsigned long dwNumAttributes,
        unsigned long * pdwNumAttributesModified ) = 0;
    virtual HRESULT __stdcall raw_CreateDSObject (
        LPWSTR pszRDNName,
        struct _ads_attr_info * pAttributeEntries,
        unsigned long dwNumAttributes,
        IDispatch * * ppObject ) = 0;
    virtual HRESULT __stdcall raw_DeleteDSObject (
        LPWSTR pszRDNName ) = 0;
};

struct __declspec(uuid("109ba8ec-92f0-11d0-a790-00c04fd8d5a8"))
IDirectorySearch : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetSearchPreference (
        struct ads_searchpref_info * pSearchPrefs,
        unsigned long dwNumPrefs );
    HRESULT ExecuteSearch (
        LPWSTR pszSearchFilter,
        LPWSTR * pAttributeNames,
        unsigned long dwNumberAttributes,
        void * * phSearchResult );
    HRESULT AbandonSearch (
        void * phSearchResult );
    HRESULT GetFirstRow (
        void * hSearchResult );
    HRESULT GetNextRow (
        void * hSearchResult );
    HRESULT GetPreviousRow (
        void * hSearchResult );
    HRESULT GetNextColumnName (
        void * hSearchHandle,
        LPWSTR * ppszColumnName );
    HRESULT GetColumn (
        void * hSearchResult,
        LPWSTR szColumnName,
        struct ads_search_column * pSearchColumn );
    HRESULT FreeColumn (
        struct ads_search_column * pSearchColumn );
    HRESULT CloseSearchHandle (
        void * hSearchResult );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SetSearchPreference (
        struct ads_searchpref_info * pSearchPrefs,
        unsigned long dwNumPrefs ) = 0;
    virtual HRESULT __stdcall raw_ExecuteSearch (
        LPWSTR pszSearchFilter,
        LPWSTR * pAttributeNames,
        unsigned long dwNumberAttributes,
        void * * phSearchResult ) = 0;
    virtual HRESULT __stdcall raw_AbandonSearch (
        void * phSearchResult ) = 0;
    virtual HRESULT __stdcall raw_GetFirstRow (
        void * hSearchResult ) = 0;
    virtual HRESULT __stdcall raw_GetNextRow (
        void * hSearchResult ) = 0;
    virtual HRESULT __stdcall raw_GetPreviousRow (
        void * hSearchResult ) = 0;
    virtual HRESULT __stdcall raw_GetNextColumnName (
        void * hSearchHandle,
        LPWSTR * ppszColumnName ) = 0;
    virtual HRESULT __stdcall raw_GetColumn (
        void * hSearchResult,
        LPWSTR szColumnName,
        struct ads_search_column * pSearchColumn ) = 0;
    virtual HRESULT __stdcall raw_FreeColumn (
        struct ads_search_column * pSearchColumn ) = 0;
    virtual HRESULT __stdcall raw_CloseSearchHandle (
        void * hSearchResult ) = 0;
};

struct __declspec(uuid("75db3b9c-a4d8-11d0-a79c-00c04fd8d5a8"))
IDirectorySchemaMgmt : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT EnumAttributes (
        LPWSTR * ppszAttrNames,
        unsigned long dwNumAttributes,
        struct _ads_attr_def * * ppAttrDefinition,
        unsigned long * pdwNumAttributes );
    HRESULT CreateAttributeDefinition (
        LPWSTR pszAttributeName,
        struct _ads_attr_def * pAttributeDefinition );
    HRESULT WriteAttributeDefinition (
        LPWSTR pszAttributeName,
        struct _ads_attr_def * pAttributeDefinition );
    HRESULT DeleteAttributeDefinition (
        LPWSTR pszAttributeName );
    HRESULT EnumClasses (
        LPWSTR * ppszClassNames,
        unsigned long dwNumClasses,
        struct _ads_class_def * * ppClassDefinition,
        unsigned long * pdwNumClasses );
    HRESULT WriteClassDefinition (
        LPWSTR pszClassName,
        struct _ads_class_def * pClassDefinition );
    HRESULT CreateClassDefinition (
        LPWSTR pszClassName,
        struct _ads_class_def * pClassDefinition );
    HRESULT DeleteClassDefinition (
        LPWSTR pszClassName );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_EnumAttributes (
        LPWSTR * ppszAttrNames,
        unsigned long dwNumAttributes,
        struct _ads_attr_def * * ppAttrDefinition,
        unsigned long * pdwNumAttributes ) = 0;
    virtual HRESULT __stdcall raw_CreateAttributeDefinition (
        LPWSTR pszAttributeName,
        struct _ads_attr_def * pAttributeDefinition ) = 0;
    virtual HRESULT __stdcall raw_WriteAttributeDefinition (
        LPWSTR pszAttributeName,
        struct _ads_attr_def * pAttributeDefinition ) = 0;
    virtual HRESULT __stdcall raw_DeleteAttributeDefinition (
        LPWSTR pszAttributeName ) = 0;
    virtual HRESULT __stdcall raw_EnumClasses (
        LPWSTR * ppszClassNames,
        unsigned long dwNumClasses,
        struct _ads_class_def * * ppClassDefinition,
        unsigned long * pdwNumClasses ) = 0;
    virtual HRESULT __stdcall raw_WriteClassDefinition (
        LPWSTR pszClassName,
        struct _ads_class_def * pClassDefinition ) = 0;
    virtual HRESULT __stdcall raw_CreateClassDefinition (
        LPWSTR pszClassName,
        struct _ads_class_def * pClassDefinition ) = 0;
    virtual HRESULT __stdcall raw_DeleteClassDefinition (
        LPWSTR pszClassName ) = 0;
};

struct __declspec(uuid("1346ce8c-9039-11d0-8528-00c04fd8d503"))
IADsAggregatee : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ConnectAsAggregatee (
        IUnknown * pOuterUnknown );
    HRESULT DisconnectAsAggregatee ( );
    HRESULT RelinquishInterface (
        GUID * riid );
    HRESULT RestoreInterface (
        GUID * riid );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ConnectAsAggregatee (
        IUnknown * pOuterUnknown ) = 0;
    virtual HRESULT __stdcall raw_DisconnectAsAggregatee ( ) = 0;
    virtual HRESULT __stdcall raw_RelinquishInterface (
        GUID * riid ) = 0;
    virtual HRESULT __stdcall raw_RestoreInterface (
        GUID * riid ) = 0;
};

struct __declspec(uuid("52db5fb0-941f-11d0-8529-00c04fd8d503"))
IADsAggregator : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ConnectAsAggregator (
        IUnknown * pAggregatee );
    HRESULT DisconnectAsAggregator ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ConnectAsAggregator (
        IUnknown * pAggregatee ) = 0;
    virtual HRESULT __stdcall raw_DisconnectAsAggregator ( ) = 0;
};

struct __declspec(uuid("b4f3a14c-9bdd-11d0-852c-00c04fd8d503"))
IADsAccessControlEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccessMask,put=PutAccessMask))
    long AccessMask;
    __declspec(property(get=GetAceType,put=PutAceType))
    long AceType;
    __declspec(property(get=GetAceFlags,put=PutAceFlags))
    long AceFlags;
    __declspec(property(get=GetFlags,put=PutFlags))
    long Flags;
    __declspec(property(get=GetObjectType,put=PutObjectType))
    _bstr_t ObjectType;
    __declspec(property(get=GetInheritedObjectType,put=PutInheritedObjectType))
    _bstr_t InheritedObjectType;
    __declspec(property(get=GetTrustee,put=PutTrustee))
    _bstr_t Trustee;

    //
    // Wrapper methods for error-handling
    //

    long GetAccessMask ( );
    void PutAccessMask (
        long retval );
    long GetAceType ( );
    void PutAceType (
        long retval );
    long GetAceFlags ( );
    void PutAceFlags (
        long retval );
    long GetFlags ( );
    void PutFlags (
        long retval );
    _bstr_t GetObjectType ( );
    void PutObjectType (
        _bstr_t retval );
    _bstr_t GetInheritedObjectType ( );
    void PutInheritedObjectType (
        _bstr_t retval );
    _bstr_t GetTrustee ( );
    void PutTrustee (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AccessMask (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AccessMask (
        long retval ) = 0;
    virtual HRESULT __stdcall get_AceType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AceType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_AceFlags (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AceFlags (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Flags (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Flags (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ObjectType (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ObjectType (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_InheritedObjectType (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_InheritedObjectType (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Trustee (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Trustee (
        BSTR retval ) = 0;
};

struct __declspec(uuid("b75ac000-9bdd-11d0-852c-00c04fd8d503"))
AccessControlEntry;
    // [ default ] interface IADsAccessControlEntry
    // interface IDispatch

struct __declspec(uuid("b7ee91cc-9bdd-11d0-852c-00c04fd8d503"))
IADsAccessControlList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAclRevision,put=PutAclRevision))
    long AclRevision;
    __declspec(property(get=GetAceCount,put=PutAceCount))
    long AceCount;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    long GetAclRevision ( );
    void PutAclRevision (
        long retval );
    long GetAceCount ( );
    void PutAceCount (
        long retval );
    HRESULT AddAce (
        IDispatch * pAccessControlEntry );
    HRESULT RemoveAce (
        IDispatch * pAccessControlEntry );
    IDispatchPtr CopyAccessList ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AclRevision (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AclRevision (
        long retval ) = 0;
    virtual HRESULT __stdcall get_AceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AceCount (
        long retval ) = 0;
    virtual HRESULT __stdcall raw_AddAce (
        IDispatch * pAccessControlEntry ) = 0;
    virtual HRESULT __stdcall raw_RemoveAce (
        IDispatch * pAccessControlEntry ) = 0;
    virtual HRESULT __stdcall raw_CopyAccessList (
        IDispatch * * ppAccessControlList ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * retval ) = 0;
};

struct __declspec(uuid("b85ea052-9bdd-11d0-852c-00c04fd8d503"))
AccessControlList;
    // [ default ] interface IADsAccessControlList
    // interface IDispatch

struct __declspec(uuid("b8c787ca-9bdd-11d0-852c-00c04fd8d503"))
IADsSecurityDescriptor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRevision,put=PutRevision))
    long Revision;
    __declspec(property(get=GetControl,put=PutControl))
    long Control;
    __declspec(property(get=GetOwner,put=PutOwner))
    _bstr_t Owner;
    __declspec(property(get=GetOwnerDefaulted,put=PutOwnerDefaulted))
    VARIANT_BOOL OwnerDefaulted;
    __declspec(property(get=GetGroup,put=PutGroup))
    _bstr_t Group;
    __declspec(property(get=GetGroupDefaulted,put=PutGroupDefaulted))
    VARIANT_BOOL GroupDefaulted;
    __declspec(property(get=GetDiscretionaryAcl,put=PutDiscretionaryAcl))
    IDispatchPtr DiscretionaryAcl;
    __declspec(property(get=GetDaclDefaulted,put=PutDaclDefaulted))
    VARIANT_BOOL DaclDefaulted;
    __declspec(property(get=GetSystemAcl,put=PutSystemAcl))
    IDispatchPtr SystemAcl;
    __declspec(property(get=GetSaclDefaulted,put=PutSaclDefaulted))
    VARIANT_BOOL SaclDefaulted;

    //
    // Wrapper methods for error-handling
    //

    long GetRevision ( );
    void PutRevision (
        long retval );
    long GetControl ( );
    void PutControl (
        long retval );
    _bstr_t GetOwner ( );
    void PutOwner (
        _bstr_t retval );
    VARIANT_BOOL GetOwnerDefaulted ( );
    void PutOwnerDefaulted (
        VARIANT_BOOL retval );
    _bstr_t GetGroup ( );
    void PutGroup (
        _bstr_t retval );
    VARIANT_BOOL GetGroupDefaulted ( );
    void PutGroupDefaulted (
        VARIANT_BOOL retval );
    IDispatchPtr GetDiscretionaryAcl ( );
    void PutDiscretionaryAcl (
        IDispatch * retval );
    VARIANT_BOOL GetDaclDefaulted ( );
    void PutDaclDefaulted (
        VARIANT_BOOL retval );
    IDispatchPtr GetSystemAcl ( );
    void PutSystemAcl (
        IDispatch * retval );
    VARIANT_BOOL GetSaclDefaulted ( );
    void PutSaclDefaulted (
        VARIANT_BOOL retval );
    IDispatchPtr CopySecurityDescriptor ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Revision (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Revision (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Control (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Control (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Owner (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Owner (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OwnerDefaulted (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_OwnerDefaulted (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Group (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Group (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_GroupDefaulted (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_GroupDefaulted (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_DiscretionaryAcl (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall put_DiscretionaryAcl (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_DaclDefaulted (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_DaclDefaulted (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_SystemAcl (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall put_SystemAcl (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_SaclDefaulted (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SaclDefaulted (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall raw_CopySecurityDescriptor (
        IDispatch * * ppSecurityDescriptor ) = 0;
};

struct __declspec(uuid("b958f73c-9bdd-11d0-852c-00c04fd8d503"))
SecurityDescriptor;
    // [ default ] interface IADsSecurityDescriptor
    // interface IDispatch

enum __MIDL___MIDL_itf_ads_0148_0001
{
    ADS_RIGHT_DELETE = 65536,
    ADS_RIGHT_READ_CONTROL = 131072,
    ADS_RIGHT_WRITE_DAC = 262144,
    ADS_RIGHT_WRITE_OWNER = 524288,
    ADS_RIGHT_SYNCHRONIZE = 1048576,
    ADS_RIGHT_ACCESS_SYSTEM_SECURITY = 16777216,
    ADS_RIGHT_GENERIC_READ = -2147483648,
    ADS_RIGHT_GENERIC_WRITE = 1073741824,
    ADS_RIGHT_GENERIC_EXECUTE = 536870912,
    ADS_RIGHT_GENERIC_ALL = 268435456,
    ADS_RIGHT_DS_CREATE_CHILD = 1,
    ADS_RIGHT_DS_DELETE_CHILD = 2,
    ADS_RIGHT_ACTRL_DS_LIST = 4,
    ADS_RIGHT_DS_SELF = 8,
    ADS_RIGHT_DS_READ_PROP = 16,
    ADS_RIGHT_DS_WRITE_PROP = 32,
    ADS_RIGHT_DS_DELETE_TREE = 64,
    ADS_RIGHT_DS_LIST_OBJECT = 128,
    ADS_RIGHT_DS_CONTROL_ACCESS = 256
};

enum __MIDL___MIDL_itf_ads_0148_0002
{
    ADS_ACETYPE_ACCESS_ALLOWED = 0,
    ADS_ACETYPE_ACCESS_DENIED = 1,
    ADS_ACETYPE_SYSTEM_AUDIT = 2,
    ADS_ACETYPE_ACCESS_ALLOWED_OBJECT = 5,
    ADS_ACETYPE_ACCESS_DENIED_OBJECT = 6,
    ADS_ACETYPE_SYSTEM_AUDIT_OBJECT = 7
};

enum __MIDL___MIDL_itf_ads_0148_0003
{
    ADS_ACEFLAG_INHERIT_ACE = 2,
    ADS_ACEFLAG_NO_PROPAGATE_INHERIT_ACE = 4,
    ADS_ACEFLAG_INHERIT_ONLY_ACE = 8,
    ADS_ACEFLAG_INHERITED_ACE = 16,
    ADS_ACEFLAG_VALID_INHERIT_FLAGS = 31,
    ADS_ACEFLAG_SUCCESSFUL_ACCESS = 64,
    ADS_ACEFLAG_FAILED_ACCESS = 128
};

enum __MIDL___MIDL_itf_ads_0148_0004
{
    ADS_FLAG_OBJECT_TYPE_PRESENT = 1,
    ADS_FLAG_INHERITED_OBJECT_TYPE_PRESENT = 2
};

enum __MIDL___MIDL_itf_ads_0148_0005
{
    ADS_SD_CONTROL_SE_OWNER_DEFAULTED = 1,
    ADS_SD_CONTROL_SE_GROUP_DEFAULTED = 2,
    ADS_SD_CONTROL_SE_DACL_PRESENT = 4,
    ADS_SD_CONTROL_SE_DACL_DEFAULTED = 8,
    ADS_SD_CONTROL_SE_SACL_PRESENT = 16,
    ADS_SD_CONTROL_SE_SACL_DEFAULTED = 32,
    ADS_SD_CONTROL_SE_DACL_AUTO_INHERIT_REQ = 256,
    ADS_SD_CONTROL_SE_SACL_AUTO_INHERIT_REQ = 512,
    ADS_SD_CONTROL_SE_DACL_AUTO_INHERITED = 1024,
    ADS_SD_CONTROL_SE_SACL_AUTO_INHERITED = 2048,
    ADS_SD_CONTROL_SE_DACL_PROTECTED = 4096,
    ADS_SD_CONTROL_SE_SACL_PROTECTED = 8192,
    ADS_SD_CONTROL_SE_SELF_RELATIVE = 32768
};

enum __MIDL___MIDL_itf_ads_0148_0006
{
    ADS_SD_REVISION_DS = 4
};

struct __declspec(uuid("9068270b-0939-11d1-8be1-00c04fd8d503"))
IADsLargeInteger : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHighPart,put=PutHighPart))
    long HighPart;
    __declspec(property(get=GetLowPart,put=PutLowPart))
    long LowPart;

    //
    // Wrapper methods for error-handling
    //

    long GetHighPart ( );
    void PutHighPart (
        long retval );
    long GetLowPart ( );
    void PutLowPart (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_HighPart (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_HighPart (
        long retval ) = 0;
    virtual HRESULT __stdcall get_LowPart (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_LowPart (
        long retval ) = 0;
};

struct __declspec(uuid("927971f5-0939-11d1-8be1-00c04fd8d503"))
LargeInteger;
    // [ default ] interface IADsLargeInteger
    // interface IDispatch

enum __MIDL___MIDL_itf_ads_0149_0001
{
    ADS_NAME_TYPE_1779 = 1,
    ADS_NAME_TYPE_CANONICAL = 2,
    ADS_NAME_TYPE_NT4 = 3,
    ADS_NAME_TYPE_DISPLAY = 4,
    ADS_NAME_TYPE_DOMAIN_SIMPLE = 5,
    ADS_NAME_TYPE_ENTERPRISE_SIMPLE = 6,
    ADS_NAME_TYPE_GUID = 7,
    ADS_NAME_TYPE_UNKNOWN = 8,
    ADS_NAME_TYPE_USER_PRINCIPAL_NAME = 9,
    ADS_NAME_TYPE_CANONICAL_EX = 10,
    ADS_NAME_TYPE_SERVICE_PRINCIPAL_NAME = 11,
    ADS_NAME_TYPE_SID_OR_SID_HISTORY_NAME = 12
};

enum __MIDL___MIDL_itf_ads_0149_0002
{
    ADS_NAME_INITTYPE_DOMAIN = 1,
    ADS_NAME_INITTYPE_SERVER = 2,
    ADS_NAME_INITTYPE_GC = 3
};

struct __declspec(uuid("b1b272a3-3625-11d1-a3a4-00c04fb950dc"))
IADsNameTranslate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutChaseReferral))
    long ChaseReferral;

    //
    // Wrapper methods for error-handling
    //

    void PutChaseReferral (
        long _arg1 );
    HRESULT Init (
        long lnSetType,
        _bstr_t bstrADsPath );
    HRESULT InitEx (
        long lnSetType,
        _bstr_t bstrADsPath,
        _bstr_t bstrUserID,
        _bstr_t bstrDomain,
        _bstr_t bstrPassword );
    HRESULT Set (
        long lnSetType,
        _bstr_t bstrADsPath );
    _bstr_t Get (
        long lnFormatType );
    HRESULT SetEx (
        long lnFormatType,
        const _variant_t & pVar );
    _variant_t GetEx (
        long lnFormatType );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_ChaseReferral (
        long _arg1 ) = 0;
    virtual HRESULT __stdcall raw_Init (
        long lnSetType,
        BSTR bstrADsPath ) = 0;
    virtual HRESULT __stdcall raw_InitEx (
        long lnSetType,
        BSTR bstrADsPath,
        BSTR bstrUserID,
        BSTR bstrDomain,
        BSTR bstrPassword ) = 0;
    virtual HRESULT __stdcall raw_Set (
        long lnSetType,
        BSTR bstrADsPath ) = 0;
    virtual HRESULT __stdcall raw_Get (
        long lnFormatType,
        BSTR * pbstrADsPath ) = 0;
    virtual HRESULT __stdcall raw_SetEx (
        long lnFormatType,
        VARIANT pVar ) = 0;
    virtual HRESULT __stdcall raw_GetEx (
        long lnFormatType,
        VARIANT * pVar ) = 0;
};

struct __declspec(uuid("274fae1f-3626-11d1-a3a4-00c04fb950dc"))
NameTranslate;
    // [ default ] interface IADsNameTranslate
    // interface IDispatch

struct __declspec(uuid("7b66b533-4680-11d1-a3b4-00c04fb950dc"))
IADsCaseIgnoreList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaseIgnoreList,put=PutCaseIgnoreList))
    _variant_t CaseIgnoreList;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetCaseIgnoreList ( );
    void PutCaseIgnoreList (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CaseIgnoreList (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_CaseIgnoreList (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("15f88a55-4680-11d1-a3b4-00c04fb950dc"))
CaseIgnoreList;
    // [ default ] interface IADsCaseIgnoreList
    // interface IDispatch

struct __declspec(uuid("a910dea9-4680-11d1-a3b4-00c04fb950dc"))
IADsFaxNumber : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTelephoneNumber,put=PutTelephoneNumber))
    _bstr_t TelephoneNumber;
    __declspec(property(get=GetParameters,put=PutParameters))
    _variant_t Parameters;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTelephoneNumber ( );
    void PutTelephoneNumber (
        _bstr_t retval );
    _variant_t GetParameters ( );
    void PutParameters (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TelephoneNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_TelephoneNumber (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Parameters (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Parameters (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("a5062215-4681-11d1-a3b4-00c04fb950dc"))
FaxNumber;
    // [ default ] interface IADsFaxNumber
    // interface IDispatch

struct __declspec(uuid("b21a50a9-4080-11d1-a3ac-00c04fb950dc"))
IADsNetAddress : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddressType,put=PutAddressType))
    long AddressType;
    __declspec(property(get=GetAddress,put=PutAddress))
    _variant_t Address;

    //
    // Wrapper methods for error-handling
    //

    long GetAddressType ( );
    void PutAddressType (
        long retval );
    _variant_t GetAddress ( );
    void PutAddress (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AddressType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_AddressType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Address (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Address (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("b0b71247-4080-11d1-a3ac-00c04fb950dc"))
NetAddress;
    // [ default ] interface IADsNetAddress
    // interface IDispatch

struct __declspec(uuid("7b28b80f-4680-11d1-a3b4-00c04fb950dc"))
IADsOctetList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOctetList,put=PutOctetList))
    _variant_t OctetList;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetOctetList ( );
    void PutOctetList (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_OctetList (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_OctetList (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("1241400f-4680-11d1-a3b4-00c04fb950dc"))
OctetList;
    // [ default ] interface IADsOctetList
    // interface IDispatch

struct __declspec(uuid("97af011a-478e-11d1-a3b4-00c04fb950dc"))
IADsEmail : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType,put=PutType))
    long Type;
    __declspec(property(get=GetAddress,put=PutAddress))
    _bstr_t Address;

    //
    // Wrapper methods for error-handling
    //

    long GetType ( );
    void PutType (
        long retval );
    _bstr_t GetAddress ( );
    void PutAddress (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Type (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Type (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Address (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Address (
        BSTR retval ) = 0;
};

struct __declspec(uuid("8f92a857-478e-11d1-a3b4-00c04fb950dc"))
Email;
    // [ default ] interface IADsEmail
    // interface IDispatch

struct __declspec(uuid("b287fcd5-4080-11d1-a3ac-00c04fb950dc"))
IADsPath : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType,put=PutType))
    long Type;
    __declspec(property(get=GetVolumeName,put=PutVolumeName))
    _bstr_t VolumeName;
    __declspec(property(get=GetPath,put=PutPath))
    _bstr_t Path;

    //
    // Wrapper methods for error-handling
    //

    long GetType ( );
    void PutType (
        long retval );
    _bstr_t GetVolumeName ( );
    void PutVolumeName (
        _bstr_t retval );
    _bstr_t GetPath ( );
    void PutPath (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Type (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Type (
        long retval ) = 0;
    virtual HRESULT __stdcall get_VolumeName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_VolumeName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Path (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Path (
        BSTR retval ) = 0;
};

struct __declspec(uuid("b2538919-4080-11d1-a3ac-00c04fb950dc"))
Path;
    // [ default ] interface IADsPath
    // interface IDispatch

struct __declspec(uuid("f60fb803-4080-11d1-a3ac-00c04fb950dc"))
IADsReplicaPointer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetServerName,put=PutServerName))
    _bstr_t ServerName;
    __declspec(property(get=GetReplicaType,put=PutReplicaType))
    long ReplicaType;
    __declspec(property(get=GetReplicaNumber,put=PutReplicaNumber))
    long ReplicaNumber;
    __declspec(property(get=GetCount,put=PutCount))
    long Count;
    __declspec(property(get=GetReplicaAddressHints,put=PutReplicaAddressHints))
    _variant_t ReplicaAddressHints;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetServerName ( );
    void PutServerName (
        _bstr_t retval );
    long GetReplicaType ( );
    void PutReplicaType (
        long retval );
    long GetReplicaNumber ( );
    void PutReplicaNumber (
        long retval );
    long GetCount ( );
    void PutCount (
        long retval );
    _variant_t GetReplicaAddressHints ( );
    void PutReplicaAddressHints (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ServerName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ServerName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ReplicaType (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ReplicaType (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ReplicaNumber (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ReplicaNumber (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Count (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ReplicaAddressHints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ReplicaAddressHints (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("f5d1badf-4080-11d1-a3ac-00c04fb950dc"))
ReplicaPointer;
    // [ default ] interface IADsReplicaPointer
    // interface IDispatch

struct __declspec(uuid("8452d3ab-0869-11d1-a377-00c04fb950dc"))
IADsAcl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProtectedAttrName,put=PutProtectedAttrName))
    _bstr_t ProtectedAttrName;
    __declspec(property(get=GetSubjectName,put=PutSubjectName))
    _bstr_t SubjectName;
    __declspec(property(get=GetPrivileges,put=PutPrivileges))
    long Privileges;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetProtectedAttrName ( );
    void PutProtectedAttrName (
        _bstr_t retval );
    _bstr_t GetSubjectName ( );
    void PutSubjectName (
        _bstr_t retval );
    long GetPrivileges ( );
    void PutPrivileges (
        long retval );
    IDispatchPtr CopyAcl ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ProtectedAttrName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ProtectedAttrName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SubjectName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SubjectName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Privileges (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Privileges (
        long retval ) = 0;
    virtual HRESULT __stdcall raw_CopyAcl (
        IDispatch * * ppAcl ) = 0;
};

struct __declspec(uuid("7af1efb6-0869-11d1-a377-00c04fb950dc"))
Acl;
    // [ default ] interface IADsAcl
    // interface IDispatch

struct __declspec(uuid("b2f5a901-4080-11d1-a3ac-00c04fb950dc"))
IADsTimestamp : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWholeSeconds,put=PutWholeSeconds))
    long WholeSeconds;
    __declspec(property(get=GetEventID,put=PutEventID))
    long EventID;

    //
    // Wrapper methods for error-handling
    //

    long GetWholeSeconds ( );
    void PutWholeSeconds (
        long retval );
    long GetEventID ( );
    void PutEventID (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_WholeSeconds (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_WholeSeconds (
        long retval ) = 0;
    virtual HRESULT __stdcall get_EventID (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_EventID (
        long retval ) = 0;
};

struct __declspec(uuid("b2bed2eb-4080-11d1-a3ac-00c04fb950dc"))
Timestamp;
    // [ default ] interface IADsTimestamp
    // interface IDispatch

struct __declspec(uuid("7adecf29-4680-11d1-a3b4-00c04fb950dc"))
IADsPostalAddress : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPostalAddress,put=PutPostalAddress))
    _variant_t PostalAddress;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetPostalAddress ( );
    void PutPostalAddress (
        const _variant_t & retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PostalAddress (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PostalAddress (
        VARIANT retval ) = 0;
};

struct __declspec(uuid("0a75afcd-4680-11d1-a3b4-00c04fb950dc"))
PostalAddress;
    // [ default ] interface IADsPostalAddress
    // interface IDispatch

struct __declspec(uuid("fd1302bd-4080-11d1-a3ac-00c04fb950dc"))
IADsBackLink : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRemoteID,put=PutRemoteID))
    long RemoteID;
    __declspec(property(get=GetObjectName,put=PutObjectName))
    _bstr_t ObjectName;

    //
    // Wrapper methods for error-handling
    //

    long GetRemoteID ( );
    void PutRemoteID (
        long retval );
    _bstr_t GetObjectName ( );
    void PutObjectName (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RemoteID (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_RemoteID (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ObjectName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ObjectName (
        BSTR retval ) = 0;
};

struct __declspec(uuid("fcbf906f-4080-11d1-a3ac-00c04fb950dc"))
BackLink;
    // [ default ] interface IADsBackLink
    // interface IDispatch

struct __declspec(uuid("b371a349-4080-11d1-a3ac-00c04fb950dc"))
IADsTypedName : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetObjectName,put=PutObjectName))
    _bstr_t ObjectName;
    __declspec(property(get=GetLevel,put=PutLevel))
    long Level;
    __declspec(property(get=GetInterval,put=PutInterval))
    long Interval;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetObjectName ( );
    void PutObjectName (
        _bstr_t retval );
    long GetLevel ( );
    void PutLevel (
        long retval );
    long GetInterval ( );
    void PutInterval (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ObjectName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ObjectName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Level (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Level (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Interval (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Interval (
        long retval ) = 0;
};

struct __declspec(uuid("b33143cb-4080-11d1-a3ac-00c04fb950dc"))
TypedName;
    // [ default ] interface IADsTypedName
    // interface IDispatch

struct __declspec(uuid("b3eb3b37-4080-11d1-a3ac-00c04fb950dc"))
IADsHold : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetObjectName,put=PutObjectName))
    _bstr_t ObjectName;
    __declspec(property(get=GetAmount,put=PutAmount))
    long Amount;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetObjectName ( );
    void PutObjectName (
        _bstr_t retval );
    long GetAmount ( );
    void PutAmount (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ObjectName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ObjectName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Amount (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Amount (
        long retval ) = 0;
};

struct __declspec(uuid("b3ad3e13-4080-11d1-a3ac-00c04fb950dc"))
Hold;
    // [ default ] interface IADsHold
    // interface IDispatch

enum __MIDL___MIDL_itf_ads_0163_0001
{
    ADS_OPTION_SERVERNAME = 0,
    ADS_OPTION_REFERRALS = 1,
    ADS_OPTION_PAGE_SIZE = 2,
    ADS_OPTION_SECURITY_MASK = 3,
    ADS_OPTION_MUTUAL_AUTH_STATUS = 4
};

enum __MIDL___MIDL_itf_ads_0163_0002
{
    ADS_SECURITY_INFO_OWNER = 1,
    ADS_SECURITY_INFO_GROUP = 2,
    ADS_SECURITY_INFO_DACL = 4,
    ADS_SECURITY_INFO_SACL = 8
};

struct __declspec(uuid("46f14fda-232b-11d1-a808-00c04fd8d5a8"))
IADsObjectOptions : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    _variant_t GetOption (
        long lnOption );
    HRESULT SetOption (
        long lnOption,
        const _variant_t & vValue );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetOption (
        long lnOption,
        VARIANT * pvValue ) = 0;
    virtual HRESULT __stdcall raw_SetOption (
        long lnOption,
        VARIANT vValue ) = 0;
};

enum __MIDL___MIDL_itf_ads_0164_0001
{
    ADS_SETTYPE_FULL = 1,
    ADS_SETTYPE_PROVIDER = 2,
    ADS_SETTYPE_SERVER = 3,
    ADS_SETTYPE_DN = 4
};

enum __MIDL___MIDL_itf_ads_0164_0002
{
    ADS_FORMAT_WINDOWS = 1,
    ADS_FORMAT_WINDOWS_NO_SERVER = 2,
    ADS_FORMAT_WINDOWS_DN = 3,
    ADS_FORMAT_WINDOWS_PARENT = 4,
    ADS_FORMAT_X500 = 5,
    ADS_FORMAT_X500_NO_SERVER = 6,
    ADS_FORMAT_X500_DN = 7,
    ADS_FORMAT_X500_PARENT = 8,
    ADS_FORMAT_SERVER = 9,
    ADS_FORMAT_PROVIDER = 10,
    ADS_FORMAT_LEAF = 11
};

enum __MIDL___MIDL_itf_ads_0164_0003
{
    ADS_DISPLAY_FULL = 1,
    ADS_DISPLAY_VALUE_ONLY = 2
};

enum __MIDL___MIDL_itf_ads_0164_0004
{
    ADS_ESCAPEDMODE_DEFAULT = 1,
    ADS_ESCAPEDMODE_ON = 2,
    ADS_ESCAPEDMODE_OFF = 3,
    ADS_ESCAPEDMODE_OFF_EX = 4
};

struct __declspec(uuid("d592aed4-f420-11d0-a36e-00c04fb950dc"))
IADsPathname : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEscapedMode,put=PutEscapedMode))
    long EscapedMode;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Set (
        _bstr_t bstrADsPath,
        long lnSetType );
    HRESULT SetDisplayType (
        long lnDisplayType );
    _bstr_t Retrieve (
        long lnFormatType );
    long GetNumElements ( );
    _bstr_t GetElement (
        long lnElementIndex );
    HRESULT AddLeafElement (
        _bstr_t bstrLeafElement );
    HRESULT RemoveLeafElement ( );
    IDispatchPtr CopyPath ( );
    _bstr_t GetEscapedElement (
        long lnReserved,
        _bstr_t bstrInStr );
    long GetEscapedMode ( );
    void PutEscapedMode (
        long retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Set (
        BSTR bstrADsPath,
        long lnSetType ) = 0;
    virtual HRESULT __stdcall raw_SetDisplayType (
        long lnDisplayType ) = 0;
    virtual HRESULT __stdcall raw_Retrieve (
        long lnFormatType,
        BSTR * pbstrADsPath ) = 0;
    virtual HRESULT __stdcall raw_GetNumElements (
        long * plnNumPathElements ) = 0;
    virtual HRESULT __stdcall raw_GetElement (
        long lnElementIndex,
        BSTR * pbstrElement ) = 0;
    virtual HRESULT __stdcall raw_AddLeafElement (
        BSTR bstrLeafElement ) = 0;
    virtual HRESULT __stdcall raw_RemoveLeafElement ( ) = 0;
    virtual HRESULT __stdcall raw_CopyPath (
        IDispatch * * ppAdsPath ) = 0;
    virtual HRESULT __stdcall raw_GetEscapedElement (
        long lnReserved,
        BSTR bstrInStr,
        BSTR * pbstrOutStr ) = 0;
    virtual HRESULT __stdcall get_EscapedMode (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_EscapedMode (
        long retval ) = 0;
};

struct __declspec(uuid("080d0d78-f421-11d0-a36e-00c04fb950dc"))
Pathname;
    // [ default ] interface IADsPathname
    // interface IDispatch

struct __declspec(uuid("5bb11929-afd1-11d2-9cb9-0000f87a369e"))
IADsADSystemInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUserName))
    _bstr_t UserName;
    __declspec(property(get=GetComputerName))
    _bstr_t ComputerName;
    __declspec(property(get=GetSiteName))
    _bstr_t SiteName;
    __declspec(property(get=GetDomainShortName))
    _bstr_t DomainShortName;
    __declspec(property(get=GetDomainDNSName))
    _bstr_t DomainDNSName;
    __declspec(property(get=GetForestDNSName))
    _bstr_t ForestDNSName;
    __declspec(property(get=GetPDCRoleOwner))
    _bstr_t PDCRoleOwner;
    __declspec(property(get=GetSchemaRoleOwner))
    _bstr_t SchemaRoleOwner;
    __declspec(property(get=GetIsNativeMode))
    VARIANT_BOOL IsNativeMode;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUserName ( );
    _bstr_t GetComputerName ( );
    _bstr_t GetSiteName ( );
    _bstr_t GetDomainShortName ( );
    _bstr_t GetDomainDNSName ( );
    _bstr_t GetForestDNSName ( );
    _bstr_t GetPDCRoleOwner ( );
    _bstr_t GetSchemaRoleOwner ( );
    VARIANT_BOOL GetIsNativeMode ( );
    _bstr_t GetAnyDCName ( );
    _bstr_t GetDCSiteName (
        _bstr_t szServer );
    HRESULT RefreshSchemaCache ( );
    _variant_t GetTrees ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ComputerName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_SiteName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_DomainShortName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_DomainDNSName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ForestDNSName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_PDCRoleOwner (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_SchemaRoleOwner (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_IsNativeMode (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall raw_GetAnyDCName (
        BSTR * pszDCName ) = 0;
    virtual HRESULT __stdcall raw_GetDCSiteName (
        BSTR szServer,
        BSTR * pszSiteName ) = 0;
    virtual HRESULT __stdcall raw_RefreshSchemaCache ( ) = 0;
    virtual HRESULT __stdcall raw_GetTrees (
        VARIANT * pvTrees ) = 0;
};

struct __declspec(uuid("50b6327f-afd1-11d2-9cb9-0000f87a369e"))
ADSystemInfo;
    // [ default ] interface IADsADSystemInfo
    // interface IDispatch

struct __declspec(uuid("6c6d65dc-afd1-11d2-9cb9-0000f87a369e"))
IADsWinNTSystemInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUserName))
    _bstr_t UserName;
    __declspec(property(get=GetComputerName))
    _bstr_t ComputerName;
    __declspec(property(get=GetDomainName))
    _bstr_t DomainName;
    __declspec(property(get=GetPDC))
    _bstr_t PDC;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetUserName ( );
    _bstr_t GetComputerName ( );
    _bstr_t GetDomainName ( );
    _bstr_t GetPDC ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ComputerName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_DomainName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_PDC (
        BSTR * retval ) = 0;
};

struct __declspec(uuid("66182ec4-afd1-11d2-9cb9-0000f87a369e"))
WinNTSystemInfo;
    // [ default ] interface IADsWinNTSystemInfo
    // interface IDispatch

struct __declspec(uuid("7e99c0a2-f935-11d2-ba96-00c04fb6d0d1"))
IADsDNWithBinary : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBinaryValue,put=PutBinaryValue))
    _variant_t BinaryValue;
    __declspec(property(get=GetDNString,put=PutDNString))
    _bstr_t DNString;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetBinaryValue ( );
    void PutBinaryValue (
        const _variant_t & retval );
    _bstr_t GetDNString ( );
    void PutDNString (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BinaryValue (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BinaryValue (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_DNString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_DNString (
        BSTR retval ) = 0;
};

struct __declspec(uuid("7e99c0a3-f935-11d2-ba96-00c04fb6d0d1"))
DNWithBinary;
    // [ default ] interface IADsDNWithBinary
    // interface IDispatch

struct __declspec(uuid("370df02e-f934-11d2-ba96-00c04fb6d0d1"))
IADsDNWithString : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetStringValue,put=PutStringValue))
    _bstr_t StringValue;
    __declspec(property(get=GetDNString,put=PutDNString))
    _bstr_t DNString;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetStringValue ( );
    void PutStringValue (
        _bstr_t retval );
    _bstr_t GetDNString ( );
    void PutDNString (
        _bstr_t retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_StringValue (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_StringValue (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_DNString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_DNString (
        BSTR retval ) = 0;
};

struct __declspec(uuid("334857cc-f934-11d2-ba96-00c04fb6d0d1"))
DNWithString;
    // [ default ] interface IADsDNWithString
    // interface IDispatch

//
// Function implementation mapping
//

#pragma start_map_region("d:\my files\projects\personal\domains\debug\activeds.tli")
__declspec(implementation_key(1)) _bstr_t IADs::GetName ( );
__declspec(implementation_key(2)) _bstr_t IADs::GetClass ( );
__declspec(implementation_key(3)) _bstr_t IADs::GetGUID ( );
__declspec(implementation_key(4)) _bstr_t IADs::GetADsPath ( );
__declspec(implementation_key(5)) _bstr_t IADs::GetParent ( );
__declspec(implementation_key(6)) _bstr_t IADs::GetSchema ( );
__declspec(implementation_key(7)) HRESULT IADs::GetInfo ( );
__declspec(implementation_key(8)) HRESULT IADs::SetInfo ( );
__declspec(implementation_key(9)) _variant_t IADs::Get ( _bstr_t bstrName );
__declspec(implementation_key(10)) HRESULT IADs::Put ( _bstr_t bstrName, const _variant_t & vProp );
__declspec(implementation_key(11)) _variant_t IADs::GetEx ( _bstr_t bstrName );
__declspec(implementation_key(12)) HRESULT IADs::PutEx ( long lnControlCode, _bstr_t bstrName, const _variant_t & vProp );
__declspec(implementation_key(13)) HRESULT IADs::GetInfoEx ( const _variant_t & vProperties, long lnReserved );
__declspec(implementation_key(14)) long IADsContainer::GetCount ( );
__declspec(implementation_key(15)) IUnknownPtr IADsContainer::Get_NewEnum ( );
__declspec(implementation_key(16)) _variant_t IADsContainer::GetFilter ( );
__declspec(implementation_key(17)) void IADsContainer::PutFilter ( const _variant_t & pVar );
__declspec(implementation_key(18)) _variant_t IADsContainer::GetHints ( );
__declspec(implementation_key(19)) void IADsContainer::PutHints ( const _variant_t & pvFilter );
__declspec(implementation_key(20)) IDispatchPtr IADsContainer::GetObject ( _bstr_t ClassName, _bstr_t RelativeName );
__declspec(implementation_key(21)) IDispatchPtr IADsContainer::Create ( _bstr_t ClassName, _bstr_t RelativeName );
__declspec(implementation_key(22)) HRESULT IADsContainer::Delete ( _bstr_t bstrClassName, _bstr_t bstrRelativeName );
__declspec(implementation_key(23)) IDispatchPtr IADsContainer::CopyHere ( _bstr_t SourceName, _bstr_t NewName );
__declspec(implementation_key(24)) IDispatchPtr IADsContainer::MoveHere ( _bstr_t SourceName, _bstr_t NewName );
__declspec(implementation_key(25)) IUnknownPtr IADsCollection::Get_NewEnum ( );
__declspec(implementation_key(26)) HRESULT IADsCollection::Add ( _bstr_t bstrName, const _variant_t & vItem );
__declspec(implementation_key(27)) HRESULT IADsCollection::Remove ( _bstr_t bstrItemToBeRemoved );
__declspec(implementation_key(28)) _variant_t IADsCollection::GetObject ( _bstr_t bstrName );
__declspec(implementation_key(29)) long IADsMembers::GetCount ( );
__declspec(implementation_key(30)) IUnknownPtr IADsMembers::Get_NewEnum ( );
__declspec(implementation_key(31)) _variant_t IADsMembers::GetFilter ( );
__declspec(implementation_key(32)) void IADsMembers::PutFilter ( const _variant_t & pvFilter );
__declspec(implementation_key(33)) long IADsPropertyList::GetPropertyCount ( );
__declspec(implementation_key(34)) _variant_t IADsPropertyList::Next ( );
__declspec(implementation_key(35)) HRESULT IADsPropertyList::Skip ( long cElements );
__declspec(implementation_key(36)) HRESULT IADsPropertyList::Reset ( );
__declspec(implementation_key(37)) _variant_t IADsPropertyList::Item ( const _variant_t & varIndex );
__declspec(implementation_key(38)) _variant_t IADsPropertyList::GetPropertyItem ( _bstr_t bstrName, long lnADsType );
__declspec(implementation_key(39)) HRESULT IADsPropertyList::PutPropertyItem ( const _variant_t & varData );
__declspec(implementation_key(40)) HRESULT IADsPropertyList::ResetPropertyItem ( const _variant_t & varEntry );
__declspec(implementation_key(41)) HRESULT IADsPropertyList::PurgePropertyList ( );
__declspec(implementation_key(42)) HRESULT IADsPropertyEntry::Clear ( );
__declspec(implementation_key(43)) _bstr_t IADsPropertyEntry::GetName ( );
__declspec(implementation_key(44)) void IADsPropertyEntry::PutName ( _bstr_t retval );
__declspec(implementation_key(45)) long IADsPropertyEntry::GetADsType ( );
__declspec(implementation_key(46)) void IADsPropertyEntry::PutADsType ( long retval );
__declspec(implementation_key(47)) long IADsPropertyEntry::GetControlCode ( );
__declspec(implementation_key(48)) void IADsPropertyEntry::PutControlCode ( long retval );
__declspec(implementation_key(49)) _variant_t IADsPropertyEntry::GetValues ( );
__declspec(implementation_key(50)) void IADsPropertyEntry::PutValues ( const _variant_t & retval );
__declspec(implementation_key(51)) HRESULT IADsPropertyValue::Clear ( );
__declspec(implementation_key(52)) long IADsPropertyValue::GetADsType ( );
__declspec(implementation_key(53)) void IADsPropertyValue::PutADsType ( long retval );
__declspec(implementation_key(54)) _bstr_t IADsPropertyValue::GetDNString ( );
__declspec(implementation_key(55)) void IADsPropertyValue::PutDNString ( _bstr_t retval );
__declspec(implementation_key(56)) _bstr_t IADsPropertyValue::GetCaseExactString ( );
__declspec(implementation_key(57)) void IADsPropertyValue::PutCaseExactString ( _bstr_t retval );
__declspec(implementation_key(58)) _bstr_t IADsPropertyValue::GetCaseIgnoreString ( );
__declspec(implementation_key(59)) void IADsPropertyValue::PutCaseIgnoreString ( _bstr_t retval );
__declspec(implementation_key(60)) _bstr_t IADsPropertyValue::GetPrintableString ( );
__declspec(implementation_key(61)) void IADsPropertyValue::PutPrintableString ( _bstr_t retval );
__declspec(implementation_key(62)) _bstr_t IADsPropertyValue::GetNumericString ( );
__declspec(implementation_key(63)) void IADsPropertyValue::PutNumericString ( _bstr_t retval );
__declspec(implementation_key(64)) long IADsPropertyValue::GetBoolean ( );
__declspec(implementation_key(65)) void IADsPropertyValue::PutBoolean ( long retval );
__declspec(implementation_key(66)) long IADsPropertyValue::GetInteger ( );
__declspec(implementation_key(67)) void IADsPropertyValue::PutInteger ( long retval );
__declspec(implementation_key(68)) _variant_t IADsPropertyValue::GetOctetString ( );
__declspec(implementation_key(69)) void IADsPropertyValue::PutOctetString ( const _variant_t & retval );
__declspec(implementation_key(70)) IDispatchPtr IADsPropertyValue::GetSecurityDescriptor ( );
__declspec(implementation_key(71)) void IADsPropertyValue::PutSecurityDescriptor ( IDispatch * retval );
__declspec(implementation_key(72)) IDispatchPtr IADsPropertyValue::GetLargeInteger ( );
__declspec(implementation_key(73)) void IADsPropertyValue::PutLargeInteger ( IDispatch * retval );
__declspec(implementation_key(74)) DATE IADsPropertyValue::GetUTCTime ( );
__declspec(implementation_key(75)) void IADsPropertyValue::PutUTCTime ( DATE retval );
__declspec(implementation_key(76)) _variant_t IADsPropertyValue2::GetObjectProperty ( long * lnADsType );
__declspec(implementation_key(77)) HRESULT IADsPropertyValue2::PutObjectProperty ( long lnADsType, const _variant_t & vProp );
__declspec(implementation_key(78)) HRESULT IPrivateDispatch::ADSIInitializeDispatchManager ( long dwExtensionId );
__declspec(implementation_key(79)) HRESULT IPrivateDispatch::ADSIGetTypeInfoCount ( unsigned int * pctinfo );
__declspec(implementation_key(80)) HRESULT IPrivateDispatch::ADSIGetTypeInfo ( unsigned int itinfo, unsigned long lcid, struct ITypeInfo * * ppTInfo );
__declspec(implementation_key(81)) HRESULT IPrivateDispatch::ADSIGetIDsOfNames ( GUID * riid, unsigned short * * rgszNames, unsigned int cNames, unsigned long lcid, long * rgdispid );
__declspec(implementation_key(82)) HRESULT IPrivateDispatch::ADSIInvoke ( long dispidMember, GUID * riid, unsigned long lcid, unsigned short wFlags, struct DISPPARAMS * pdispparams, VARIANT * pvarResult, struct EXCEPINFO * pexcepinfo, unsigned int * puArgErr );
__declspec(implementation_key(83)) HRESULT IPrivateUnknown::ADSIInitializeObject ( _bstr_t lpszUserName, _bstr_t lpszPassword, long lnReserved );
__declspec(implementation_key(84)) HRESULT IPrivateUnknown::ADSIReleaseObject ( );
__declspec(implementation_key(85)) HRESULT IADsExtension::Operate ( unsigned long dwCode, const _variant_t & varData1, const _variant_t & varData2, const _variant_t & varData3 );
__declspec(implementation_key(86)) HRESULT IADsExtension::PrivateGetIDsOfNames ( GUID * riid, unsigned short * * rgszNames, unsigned int cNames, unsigned long lcid, long * rgdispid );
__declspec(implementation_key(87)) HRESULT IADsExtension::PrivateInvoke ( long dispidMember, GUID * riid, unsigned long lcid, unsigned short wFlags, struct DISPPARAMS * pdispparams, VARIANT * pvarResult, struct EXCEPINFO * pexcepinfo, unsigned int * puArgErr );
__declspec(implementation_key(88)) HRESULT IADsDeleteOps::DeleteObject ( long lnFlags );
__declspec(implementation_key(89)) _bstr_t IADsNamespaces::GetDefaultContainer ( );
__declspec(implementation_key(90)) void IADsNamespaces::PutDefaultContainer ( _bstr_t retval );
__declspec(implementation_key(91)) _bstr_t IADsClass::GetPrimaryInterface ( );
__declspec(implementation_key(92)) _bstr_t IADsClass::GetCLSID ( );
__declspec(implementation_key(93)) void IADsClass::PutCLSID ( _bstr_t retval );
__declspec(implementation_key(94)) _bstr_t IADsClass::GetOID ( );
__declspec(implementation_key(95)) void IADsClass::PutOID ( _bstr_t retval );
__declspec(implementation_key(96)) VARIANT_BOOL IADsClass::GetAbstract ( );
__declspec(implementation_key(97)) void IADsClass::PutAbstract ( VARIANT_BOOL retval );
__declspec(implementation_key(98)) VARIANT_BOOL IADsClass::GetAuxiliary ( );
__declspec(implementation_key(99)) void IADsClass::PutAuxiliary ( VARIANT_BOOL retval );
__declspec(implementation_key(100)) _variant_t IADsClass::GetMandatoryProperties ( );
__declspec(implementation_key(101)) void IADsClass::PutMandatoryProperties ( const _variant_t & retval );
__declspec(implementation_key(102)) _variant_t IADsClass::GetOptionalProperties ( );
__declspec(implementation_key(103)) void IADsClass::PutOptionalProperties ( const _variant_t & retval );
__declspec(implementation_key(104)) _variant_t IADsClass::GetNamingProperties ( );
__declspec(implementation_key(105)) void IADsClass::PutNamingProperties ( const _variant_t & retval );
__declspec(implementation_key(106)) _variant_t IADsClass::GetDerivedFrom ( );
__declspec(implementation_key(107)) void IADsClass::PutDerivedFrom ( const _variant_t & retval );
__declspec(implementation_key(108)) _variant_t IADsClass::GetAuxDerivedFrom ( );
__declspec(implementation_key(109)) void IADsClass::PutAuxDerivedFrom ( const _variant_t & retval );
__declspec(implementation_key(110)) _variant_t IADsClass::GetPossibleSuperiors ( );
__declspec(implementation_key(111)) void IADsClass::PutPossibleSuperiors ( const _variant_t & retval );
__declspec(implementation_key(112)) _variant_t IADsClass::GetContainment ( );
__declspec(implementation_key(113)) void IADsClass::PutContainment ( const _variant_t & retval );
__declspec(implementation_key(114)) VARIANT_BOOL IADsClass::GetContainer ( );
__declspec(implementation_key(115)) void IADsClass::PutContainer ( VARIANT_BOOL retval );
__declspec(implementation_key(116)) _bstr_t IADsClass::GetHelpFileName ( );
__declspec(implementation_key(117)) void IADsClass::PutHelpFileName ( _bstr_t retval );
__declspec(implementation_key(118)) long IADsClass::GetHelpFileContext ( );
__declspec(implementation_key(119)) void IADsClass::PutHelpFileContext ( long retval );
__declspec(implementation_key(120)) IADsCollectionPtr IADsClass::Qualifiers ( );
__declspec(implementation_key(121)) _bstr_t IADsProperty::GetOID ( );
__declspec(implementation_key(122)) void IADsProperty::PutOID ( _bstr_t retval );
__declspec(implementation_key(123)) _bstr_t IADsProperty::GetSyntax ( );
__declspec(implementation_key(124)) void IADsProperty::PutSyntax ( _bstr_t retval );
__declspec(implementation_key(125)) long IADsProperty::GetMaxRange ( );
__declspec(implementation_key(126)) void IADsProperty::PutMaxRange ( long retval );
__declspec(implementation_key(127)) long IADsProperty::GetMinRange ( );
__declspec(implementation_key(128)) void IADsProperty::PutMinRange ( long retval );
__declspec(implementation_key(129)) VARIANT_BOOL IADsProperty::GetMultiValued ( );
__declspec(implementation_key(130)) void IADsProperty::PutMultiValued ( VARIANT_BOOL retval );
__declspec(implementation_key(131)) IADsCollectionPtr IADsProperty::Qualifiers ( );
__declspec(implementation_key(132)) long IADsSyntax::GetOleAutoDataType ( );
__declspec(implementation_key(133)) void IADsSyntax::PutOleAutoDataType ( long retval );
__declspec(implementation_key(134)) _bstr_t IADsLocality::GetDescription ( );
__declspec(implementation_key(135)) void IADsLocality::PutDescription ( _bstr_t retval );
__declspec(implementation_key(136)) _bstr_t IADsLocality::GetLocalityName ( );
__declspec(implementation_key(137)) void IADsLocality::PutLocalityName ( _bstr_t retval );
__declspec(implementation_key(138)) _bstr_t IADsLocality::GetPostalAddress ( );
__declspec(implementation_key(139)) void IADsLocality::PutPostalAddress ( _bstr_t retval );
__declspec(implementation_key(140)) _variant_t IADsLocality::GetSeeAlso ( );
__declspec(implementation_key(141)) void IADsLocality::PutSeeAlso ( const _variant_t & retval );
__declspec(implementation_key(142)) _bstr_t IADsO::GetDescription ( );
__declspec(implementation_key(143)) void IADsO::PutDescription ( _bstr_t retval );
__declspec(implementation_key(144)) _bstr_t IADsO::GetLocalityName ( );
__declspec(implementation_key(145)) void IADsO::PutLocalityName ( _bstr_t retval );
__declspec(implementation_key(146)) _bstr_t IADsO::GetPostalAddress ( );
__declspec(implementation_key(147)) void IADsO::PutPostalAddress ( _bstr_t retval );
__declspec(implementation_key(148)) _bstr_t IADsO::GetTelephoneNumber ( );
__declspec(implementation_key(149)) void IADsO::PutTelephoneNumber ( _bstr_t retval );
__declspec(implementation_key(150)) _bstr_t IADsO::GetFaxNumber ( );
__declspec(implementation_key(151)) void IADsO::PutFaxNumber ( _bstr_t retval );
__declspec(implementation_key(152)) _variant_t IADsO::GetSeeAlso ( );
__declspec(implementation_key(153)) void IADsO::PutSeeAlso ( const _variant_t & retval );
__declspec(implementation_key(154)) _bstr_t IADsOU::GetDescription ( );
__declspec(implementation_key(155)) void IADsOU::PutDescription ( _bstr_t retval );
__declspec(implementation_key(156)) _bstr_t IADsOU::GetLocalityName ( );
__declspec(implementation_key(157)) void IADsOU::PutLocalityName ( _bstr_t retval );
__declspec(implementation_key(158)) _bstr_t IADsOU::GetPostalAddress ( );
__declspec(implementation_key(159)) void IADsOU::PutPostalAddress ( _bstr_t retval );
__declspec(implementation_key(160)) _bstr_t IADsOU::GetTelephoneNumber ( );
__declspec(implementation_key(161)) void IADsOU::PutTelephoneNumber ( _bstr_t retval );
__declspec(implementation_key(162)) _bstr_t IADsOU::GetFaxNumber ( );
__declspec(implementation_key(163)) void IADsOU::PutFaxNumber ( _bstr_t retval );
__declspec(implementation_key(164)) _variant_t IADsOU::GetSeeAlso ( );
__declspec(implementation_key(165)) void IADsOU::PutSeeAlso ( const _variant_t & retval );
__declspec(implementation_key(166)) _bstr_t IADsOU::GetBusinessCategory ( );
__declspec(implementation_key(167)) void IADsOU::PutBusinessCategory ( _bstr_t retval );
__declspec(implementation_key(168)) VARIANT_BOOL IADsDomain::GetIsWorkgroup ( );
__declspec(implementation_key(169)) long IADsDomain::GetMinPasswordLength ( );
__declspec(implementation_key(170)) void IADsDomain::PutMinPasswordLength ( long retval );
__declspec(implementation_key(171)) long IADsDomain::GetMinPasswordAge ( );
__declspec(implementation_key(172)) void IADsDomain::PutMinPasswordAge ( long retval );
__declspec(implementation_key(173)) long IADsDomain::GetMaxPasswordAge ( );
__declspec(implementation_key(174)) void IADsDomain::PutMaxPasswordAge ( long retval );
__declspec(implementation_key(175)) long IADsDomain::GetMaxBadPasswordsAllowed ( );
__declspec(implementation_key(176)) void IADsDomain::PutMaxBadPasswordsAllowed ( long retval );
__declspec(implementation_key(177)) long IADsDomain::GetPasswordHistoryLength ( );
__declspec(implementation_key(178)) void IADsDomain::PutPasswordHistoryLength ( long retval );
__declspec(implementation_key(179)) long IADsDomain::GetPasswordAttributes ( );
__declspec(implementation_key(180)) void IADsDomain::PutPasswordAttributes ( long retval );
__declspec(implementation_key(181)) long IADsDomain::GetAutoUnlockInterval ( );
__declspec(implementation_key(182)) void IADsDomain::PutAutoUnlockInterval ( long retval );
__declspec(implementation_key(183)) long IADsDomain::GetLockoutObservationInterval ( );
__declspec(implementation_key(184)) void IADsDomain::PutLockoutObservationInterval ( long retval );
__declspec(implementation_key(185)) _bstr_t IADsComputer::GetComputerID ( );
__declspec(implementation_key(186)) _bstr_t IADsComputer::GetSite ( );
__declspec(implementation_key(187)) _bstr_t IADsComputer::GetDescription ( );
__declspec(implementation_key(188)) void IADsComputer::PutDescription ( _bstr_t retval );
__declspec(implementation_key(189)) _bstr_t IADsComputer::GetLocation ( );
__declspec(implementation_key(190)) void IADsComputer::PutLocation ( _bstr_t retval );
__declspec(implementation_key(191)) _bstr_t IADsComputer::GetPrimaryUser ( );
__declspec(implementation_key(192)) void IADsComputer::PutPrimaryUser ( _bstr_t retval );
__declspec(implementation_key(193)) _bstr_t IADsComputer::GetOwner ( );
__declspec(implementation_key(194)) void IADsComputer::PutOwner ( _bstr_t retval );
__declspec(implementation_key(195)) _bstr_t IADsComputer::GetDivision ( );
__declspec(implementation_key(196)) void IADsComputer::PutDivision ( _bstr_t retval );
__declspec(implementation_key(197)) _bstr_t IADsComputer::GetDepartment ( );
__declspec(implementation_key(198)) void IADsComputer::PutDepartment ( _bstr_t retval );
__declspec(implementation_key(199)) _bstr_t IADsComputer::GetRole ( );
__declspec(implementation_key(200)) void IADsComputer::PutRole ( _bstr_t retval );
__declspec(implementation_key(201)) _bstr_t IADsComputer::GetOperatingSystem ( );
__declspec(implementation_key(202)) void IADsComputer::PutOperatingSystem ( _bstr_t retval );
__declspec(implementation_key(203)) _bstr_t IADsComputer::GetOperatingSystemVersion ( );
__declspec(implementation_key(204)) void IADsComputer::PutOperatingSystemVersion ( _bstr_t retval );
__declspec(implementation_key(205)) _bstr_t IADsComputer::GetModel ( );
__declspec(implementation_key(206)) void IADsComputer::PutModel ( _bstr_t retval );
__declspec(implementation_key(207)) _bstr_t IADsComputer::GetProcessor ( );
__declspec(implementation_key(208)) void IADsComputer::PutProcessor ( _bstr_t retval );
__declspec(implementation_key(209)) _bstr_t IADsComputer::GetProcessorCount ( );
__declspec(implementation_key(210)) void IADsComputer::PutProcessorCount ( _bstr_t retval );
__declspec(implementation_key(211)) _bstr_t IADsComputer::GetMemorySize ( );
__declspec(implementation_key(212)) void IADsComputer::PutMemorySize ( _bstr_t retval );
__declspec(implementation_key(213)) _bstr_t IADsComputer::GetStorageCapacity ( );
__declspec(implementation_key(214)) void IADsComputer::PutStorageCapacity ( _bstr_t retval );
__declspec(implementation_key(215)) _variant_t IADsComputer::GetNetAddresses ( );
__declspec(implementation_key(216)) void IADsComputer::PutNetAddresses ( const _variant_t & retval );
__declspec(implementation_key(217)) IDispatchPtr IADsComputerOperations::Status ( );
__declspec(implementation_key(218)) HRESULT IADsComputerOperations::Shutdown ( VARIANT_BOOL bReboot );
__declspec(implementation_key(219)) _bstr_t IADsGroup::GetDescription ( );
__declspec(implementation_key(220)) void IADsGroup::PutDescription ( _bstr_t retval );
__declspec(implementation_key(221)) IADsMembersPtr IADsGroup::Members ( );
__declspec(implementation_key(222)) VARIANT_BOOL IADsGroup::IsMember ( _bstr_t bstrMember );
__declspec(implementation_key(223)) HRESULT IADsGroup::Add ( _bstr_t bstrNewItem );
__declspec(implementation_key(224)) HRESULT IADsGroup::Remove ( _bstr_t bstrItemToBeRemoved );
__declspec(implementation_key(225)) _bstr_t IADsUser::GetBadLoginAddress ( );
__declspec(implementation_key(226)) long IADsUser::GetBadLoginCount ( );
__declspec(implementation_key(227)) DATE IADsUser::GetLastLogin ( );
__declspec(implementation_key(228)) DATE IADsUser::GetLastLogoff ( );
__declspec(implementation_key(229)) DATE IADsUser::GetLastFailedLogin ( );
__declspec(implementation_key(230)) DATE IADsUser::GetPasswordLastChanged ( );
__declspec(implementation_key(231)) _bstr_t IADsUser::GetDescription ( );
__declspec(implementation_key(232)) void IADsUser::PutDescription ( _bstr_t retval );
__declspec(implementation_key(233)) _bstr_t IADsUser::GetDivision ( );
__declspec(implementation_key(234)) void IADsUser::PutDivision ( _bstr_t retval );
__declspec(implementation_key(235)) _bstr_t IADsUser::GetDepartment ( );
__declspec(implementation_key(236)) void IADsUser::PutDepartment ( _bstr_t retval );
__declspec(implementation_key(237)) _bstr_t IADsUser::GetEmployeeID ( );
__declspec(implementation_key(238)) void IADsUser::PutEmployeeID ( _bstr_t retval );
__declspec(implementation_key(239)) _bstr_t IADsUser::GetFullName ( );
__declspec(implementation_key(240)) void IADsUser::PutFullName ( _bstr_t retval );
__declspec(implementation_key(241)) _bstr_t IADsUser::GetFirstName ( );
__declspec(implementation_key(242)) void IADsUser::PutFirstName ( _bstr_t retval );
__declspec(implementation_key(243)) _bstr_t IADsUser::GetLastName ( );
__declspec(implementation_key(244)) void IADsUser::PutLastName ( _bstr_t retval );
__declspec(implementation_key(245)) _bstr_t IADsUser::GetOtherName ( );
__declspec(implementation_key(246)) void IADsUser::PutOtherName ( _bstr_t retval );
__declspec(implementation_key(247)) _bstr_t IADsUser::GetNamePrefix ( );
__declspec(implementation_key(248)) void IADsUser::PutNamePrefix ( _bstr_t retval );
__declspec(implementation_key(249)) _bstr_t IADsUser::GetNameSuffix ( );
__declspec(implementation_key(250)) void IADsUser::PutNameSuffix ( _bstr_t retval );
__declspec(implementation_key(251)) _bstr_t IADsUser::GetTitle ( );
__declspec(implementation_key(252)) void IADsUser::PutTitle ( _bstr_t retval );
__declspec(implementation_key(253)) _bstr_t IADsUser::GetManager ( );
__declspec(implementation_key(254)) void IADsUser::PutManager ( _bstr_t retval );
__declspec(implementation_key(255)) _variant_t IADsUser::GetTelephoneHome ( );
__declspec(implementation_key(256)) void IADsUser::PutTelephoneHome ( const _variant_t & retval );
__declspec(implementation_key(257)) _variant_t IADsUser::GetTelephoneMobile ( );
__declspec(implementation_key(258)) void IADsUser::PutTelephoneMobile ( const _variant_t & retval );
__declspec(implementation_key(259)) _variant_t IADsUser::GetTelephoneNumber ( );
__declspec(implementation_key(260)) void IADsUser::PutTelephoneNumber ( const _variant_t & retval );
__declspec(implementation_key(261)) _variant_t IADsUser::GetTelephonePager ( );
__declspec(implementation_key(262)) void IADsUser::PutTelephonePager ( const _variant_t & retval );
__declspec(implementation_key(263)) _variant_t IADsUser::GetFaxNumber ( );
__declspec(implementation_key(264)) void IADsUser::PutFaxNumber ( const _variant_t & retval );
__declspec(implementation_key(265)) _variant_t IADsUser::GetOfficeLocations ( );
__declspec(implementation_key(266)) void IADsUser::PutOfficeLocations ( const _variant_t & retval );
__declspec(implementation_key(267)) _variant_t IADsUser::GetPostalAddresses ( );
__declspec(implementation_key(268)) void IADsUser::PutPostalAddresses ( const _variant_t & retval );
__declspec(implementation_key(269)) _variant_t IADsUser::GetPostalCodes ( );
__declspec(implementation_key(270)) void IADsUser::PutPostalCodes ( const _variant_t & retval );
__declspec(implementation_key(271)) _variant_t IADsUser::GetSeeAlso ( );
__declspec(implementation_key(272)) void IADsUser::PutSeeAlso ( const _variant_t & retval );
__declspec(implementation_key(273)) VARIANT_BOOL IADsUser::GetAccountDisabled ( );
__declspec(implementation_key(274)) void IADsUser::PutAccountDisabled ( VARIANT_BOOL retval );
__declspec(implementation_key(275)) DATE IADsUser::GetAccountExpirationDate ( );
__declspec(implementation_key(276)) void IADsUser::PutAccountExpirationDate ( DATE retval );
__declspec(implementation_key(277)) long IADsUser::GetGraceLoginsAllowed ( );
__declspec(implementation_key(278)) void IADsUser::PutGraceLoginsAllowed ( long retval );
__declspec(implementation_key(279)) long IADsUser::GetGraceLoginsRemaining ( );
__declspec(implementation_key(280)) void IADsUser::PutGraceLoginsRemaining ( long retval );
__declspec(implementation_key(281)) VARIANT_BOOL IADsUser::GetIsAccountLocked ( );
__declspec(implementation_key(282)) void IADsUser::PutIsAccountLocked ( VARIANT_BOOL retval );
__declspec(implementation_key(283)) _variant_t IADsUser::GetLoginHours ( );
__declspec(implementation_key(284)) void IADsUser::PutLoginHours ( const _variant_t & retval );
__declspec(implementation_key(285)) _variant_t IADsUser::GetLoginWorkstations ( );
__declspec(implementation_key(286)) void IADsUser::PutLoginWorkstations ( const _variant_t & retval );
__declspec(implementation_key(287)) long IADsUser::GetMaxLogins ( );
__declspec(implementation_key(288)) void IADsUser::PutMaxLogins ( long retval );
__declspec(implementation_key(289)) long IADsUser::GetMaxStorage ( );
__declspec(implementation_key(290)) void IADsUser::PutMaxStorage ( long retval );
__declspec(implementation_key(291)) DATE IADsUser::GetPasswordExpirationDate ( );
__declspec(implementation_key(292)) void IADsUser::PutPasswordExpirationDate ( DATE retval );
__declspec(implementation_key(293)) long IADsUser::GetPasswordMinimumLength ( );
__declspec(implementation_key(294)) void IADsUser::PutPasswordMinimumLength ( long retval );
__declspec(implementation_key(295)) VARIANT_BOOL IADsUser::GetPasswordRequired ( );
__declspec(implementation_key(296)) void IADsUser::PutPasswordRequired ( VARIANT_BOOL retval );
__declspec(implementation_key(297)) VARIANT_BOOL IADsUser::GetRequireUniquePassword ( );
__declspec(implementation_key(298)) void IADsUser::PutRequireUniquePassword ( VARIANT_BOOL retval );
__declspec(implementation_key(299)) _bstr_t IADsUser::GetEmailAddress ( );
__declspec(implementation_key(300)) void IADsUser::PutEmailAddress ( _bstr_t retval );
__declspec(implementation_key(301)) _bstr_t IADsUser::GetHomeDirectory ( );
__declspec(implementation_key(302)) void IADsUser::PutHomeDirectory ( _bstr_t retval );
__declspec(implementation_key(303)) _variant_t IADsUser::GetLanguages ( );
__declspec(implementation_key(304)) void IADsUser::PutLanguages ( const _variant_t & retval );
__declspec(implementation_key(305)) _bstr_t IADsUser::GetProfile ( );
__declspec(implementation_key(306)) void IADsUser::PutProfile ( _bstr_t retval );
__declspec(implementation_key(307)) _bstr_t IADsUser::GetLoginScript ( );
__declspec(implementation_key(308)) void IADsUser::PutLoginScript ( _bstr_t retval );
__declspec(implementation_key(309)) _variant_t IADsUser::GetPicture ( );
__declspec(implementation_key(310)) void IADsUser::PutPicture ( const _variant_t & retval );
__declspec(implementation_key(311)) _bstr_t IADsUser::GetHomePage ( );
__declspec(implementation_key(312)) void IADsUser::PutHomePage ( _bstr_t retval );
__declspec(implementation_key(313)) IADsMembersPtr IADsUser::Groups ( );
__declspec(implementation_key(314)) HRESULT IADsUser::SetPassword ( _bstr_t NewPassword );
__declspec(implementation_key(315)) HRESULT IADsUser::ChangePassword ( _bstr_t bstrOldPassword, _bstr_t bstrNewPassword );
__declspec(implementation_key(316)) _bstr_t IADsPrintQueue::GetPrinterPath ( );
__declspec(implementation_key(317)) void IADsPrintQueue::PutPrinterPath ( _bstr_t retval );
__declspec(implementation_key(318)) _bstr_t IADsPrintQueue::GetModel ( );
__declspec(implementation_key(319)) void IADsPrintQueue::PutModel ( _bstr_t retval );
__declspec(implementation_key(320)) _bstr_t IADsPrintQueue::GetDatatype ( );
__declspec(implementation_key(321)) void IADsPrintQueue::PutDatatype ( _bstr_t retval );
__declspec(implementation_key(322)) _bstr_t IADsPrintQueue::GetPrintProcessor ( );
__declspec(implementation_key(323)) void IADsPrintQueue::PutPrintProcessor ( _bstr_t retval );
__declspec(implementation_key(324)) _bstr_t IADsPrintQueue::GetDescription ( );
__declspec(implementation_key(325)) void IADsPrintQueue::PutDescription ( _bstr_t retval );
__declspec(implementation_key(326)) _bstr_t IADsPrintQueue::GetLocation ( );
__declspec(implementation_key(327)) void IADsPrintQueue::PutLocation ( _bstr_t retval );
__declspec(implementation_key(328)) DATE IADsPrintQueue::GetStartTime ( );
__declspec(implementation_key(329)) void IADsPrintQueue::PutStartTime ( DATE retval );
__declspec(implementation_key(330)) DATE IADsPrintQueue::GetUntilTime ( );
__declspec(implementation_key(331)) void IADsPrintQueue::PutUntilTime ( DATE retval );
__declspec(implementation_key(332)) long IADsPrintQueue::GetDefaultJobPriority ( );
__declspec(implementation_key(333)) void IADsPrintQueue::PutDefaultJobPriority ( long retval );
__declspec(implementation_key(334)) long IADsPrintQueue::GetPriority ( );
__declspec(implementation_key(335)) void IADsPrintQueue::PutPriority ( long retval );
__declspec(implementation_key(336)) _bstr_t IADsPrintQueue::GetBannerPage ( );
__declspec(implementation_key(337)) void IADsPrintQueue::PutBannerPage ( _bstr_t retval );
__declspec(implementation_key(338)) _variant_t IADsPrintQueue::GetPrintDevices ( );
__declspec(implementation_key(339)) void IADsPrintQueue::PutPrintDevices ( const _variant_t & retval );
__declspec(implementation_key(340)) _variant_t IADsPrintQueue::GetNetAddresses ( );
__declspec(implementation_key(341)) void IADsPrintQueue::PutNetAddresses ( const _variant_t & retval );
__declspec(implementation_key(342)) long IADsPrintQueueOperations::GetStatus ( );
__declspec(implementation_key(343)) IADsCollectionPtr IADsPrintQueueOperations::PrintJobs ( );
__declspec(implementation_key(344)) HRESULT IADsPrintQueueOperations::Pause ( );
__declspec(implementation_key(345)) HRESULT IADsPrintQueueOperations::Resume ( );
__declspec(implementation_key(346)) HRESULT IADsPrintQueueOperations::Purge ( );
__declspec(implementation_key(347)) _bstr_t IADsPrintJob::GetHostPrintQueue ( );
__declspec(implementation_key(348)) _bstr_t IADsPrintJob::GetUser ( );
__declspec(implementation_key(349)) _bstr_t IADsPrintJob::GetUserPath ( );
__declspec(implementation_key(350)) DATE IADsPrintJob::GetTimeSubmitted ( );
__declspec(implementation_key(351)) long IADsPrintJob::GetTotalPages ( );
__declspec(implementation_key(352)) long IADsPrintJob::GetSize ( );
__declspec(implementation_key(353)) _bstr_t IADsPrintJob::GetDescription ( );
__declspec(implementation_key(354)) void IADsPrintJob::PutDescription ( _bstr_t retval );
__declspec(implementation_key(355)) long IADsPrintJob::GetPriority ( );
__declspec(implementation_key(356)) void IADsPrintJob::PutPriority ( long retval );
__declspec(implementation_key(357)) DATE IADsPrintJob::GetStartTime ( );
__declspec(implementation_key(358)) void IADsPrintJob::PutStartTime ( DATE retval );
__declspec(implementation_key(359)) DATE IADsPrintJob::GetUntilTime ( );
__declspec(implementation_key(360)) void IADsPrintJob::PutUntilTime ( DATE retval );
__declspec(implementation_key(361)) _bstr_t IADsPrintJob::GetNotify ( );
__declspec(implementation_key(362)) void IADsPrintJob::PutNotify ( _bstr_t retval );
__declspec(implementation_key(363)) _bstr_t IADsPrintJob::GetNotifyPath ( );
__declspec(implementation_key(364)) void IADsPrintJob::PutNotifyPath ( _bstr_t retval );
__declspec(implementation_key(365)) long IADsPrintJobOperations::GetStatus ( );
__declspec(implementation_key(366)) long IADsPrintJobOperations::GetTimeElapsed ( );
__declspec(implementation_key(367)) long IADsPrintJobOperations::GetPagesPrinted ( );
__declspec(implementation_key(368)) long IADsPrintJobOperations::GetPosition ( );
__declspec(implementation_key(369)) void IADsPrintJobOperations::PutPosition ( long retval );
__declspec(implementation_key(370)) HRESULT IADsPrintJobOperations::Pause ( );
__declspec(implementation_key(371)) HRESULT IADsPrintJobOperations::Resume ( );
__declspec(implementation_key(372)) _bstr_t IADsService::GetHostComputer ( );
__declspec(implementation_key(373)) void IADsService::PutHostComputer ( _bstr_t retval );
__declspec(implementation_key(374)) _bstr_t IADsService::GetDisplayName ( );
__declspec(implementation_key(375)) void IADsService::PutDisplayName ( _bstr_t retval );
__declspec(implementation_key(376)) _bstr_t IADsService::GetVersion ( );
__declspec(implementation_key(377)) void IADsService::PutVersion ( _bstr_t retval );
__declspec(implementation_key(378)) long IADsService::GetServiceType ( );
__declspec(implementation_key(379)) void IADsService::PutServiceType ( long retval );
__declspec(implementation_key(380)) long IADsService::GetStartType ( );
__declspec(implementation_key(381)) void IADsService::PutStartType ( long retval );
__declspec(implementation_key(382)) _bstr_t IADsService::GetPath ( );
__declspec(implementation_key(383)) void IADsService::PutPath ( _bstr_t retval );
__declspec(implementation_key(384)) _bstr_t IADsService::GetStartupParameters ( );
__declspec(implementation_key(385)) void IADsService::PutStartupParameters ( _bstr_t retval );
__declspec(implementation_key(386)) long IADsService::GetErrorControl ( );
__declspec(implementation_key(387)) void IADsService::PutErrorControl ( long retval );
__declspec(implementation_key(388)) _bstr_t IADsService::GetLoadOrderGroup ( );
__declspec(implementation_key(389)) void IADsService::PutLoadOrderGroup ( _bstr_t retval );
__declspec(implementation_key(390)) _bstr_t IADsService::GetServiceAccountName ( );
__declspec(implementation_key(391)) void IADsService::PutServiceAccountName ( _bstr_t retval );
__declspec(implementation_key(392)) _bstr_t IADsService::GetServiceAccountPath ( );
__declspec(implementation_key(393)) void IADsService::PutServiceAccountPath ( _bstr_t retval );
__declspec(implementation_key(394)) _variant_t IADsService::GetDependencies ( );
__declspec(implementation_key(395)) void IADsService::PutDependencies ( const _variant_t & retval );
__declspec(implementation_key(396)) long IADsServiceOperations::GetStatus ( );
__declspec(implementation_key(397)) HRESULT IADsServiceOperations::Start ( );
__declspec(implementation_key(398)) HRESULT IADsServiceOperations::Stop ( );
__declspec(implementation_key(399)) HRESULT IADsServiceOperations::Pause ( );
__declspec(implementation_key(400)) HRESULT IADsServiceOperations::Continue ( );
__declspec(implementation_key(401)) HRESULT IADsServiceOperations::SetPassword ( _bstr_t bstrNewPassword );
__declspec(implementation_key(402)) _bstr_t IADsFileService::GetDescription ( );
__declspec(implementation_key(403)) void IADsFileService::PutDescription ( _bstr_t retval );
__declspec(implementation_key(404)) long IADsFileService::GetMaxUserCount ( );
__declspec(implementation_key(405)) void IADsFileService::PutMaxUserCount ( long retval );
__declspec(implementation_key(406)) IADsCollectionPtr IADsFileServiceOperations::Sessions ( );
__declspec(implementation_key(407)) IADsCollectionPtr IADsFileServiceOperations::Resources ( );
__declspec(implementation_key(408)) long IADsFileShare::GetCurrentUserCount ( );
__declspec(implementation_key(409)) _bstr_t IADsFileShare::GetDescription ( );
__declspec(implementation_key(410)) void IADsFileShare::PutDescription ( _bstr_t retval );
__declspec(implementation_key(411)) _bstr_t IADsFileShare::GetHostComputer ( );
__declspec(implementation_key(412)) void IADsFileShare::PutHostComputer ( _bstr_t retval );
__declspec(implementation_key(413)) _bstr_t IADsFileShare::GetPath ( );
__declspec(implementation_key(414)) void IADsFileShare::PutPath ( _bstr_t retval );
__declspec(implementation_key(415)) long IADsFileShare::GetMaxUserCount ( );
__declspec(implementation_key(416)) void IADsFileShare::PutMaxUserCount ( long retval );
__declspec(implementation_key(417)) _bstr_t IADsSession::GetUser ( );
__declspec(implementation_key(418)) _bstr_t IADsSession::GetUserPath ( );
__declspec(implementation_key(419)) _bstr_t IADsSession::GetComputer ( );
__declspec(implementation_key(420)) _bstr_t IADsSession::GetComputerPath ( );
__declspec(implementation_key(421)) long IADsSession::GetConnectTime ( );
__declspec(implementation_key(422)) long IADsSession::GetIdleTime ( );
__declspec(implementation_key(423)) _bstr_t IADsResource::GetUser ( );
__declspec(implementation_key(424)) _bstr_t IADsResource::GetUserPath ( );
__declspec(implementation_key(425)) _bstr_t IADsResource::GetPath ( );
__declspec(implementation_key(426)) long IADsResource::GetLockCount ( );
__declspec(implementation_key(427)) IDispatchPtr IADsOpenDSObject::OpenDSObject ( _bstr_t lpszDNName, _bstr_t lpszUserName, _bstr_t lpszPassword, long lnReserved );
__declspec(implementation_key(428)) HRESULT IDirectoryObject::GetObjectInformation ( struct _ads_object_info * * ppObjInfo );
__declspec(implementation_key(429)) HRESULT IDirectoryObject::GetObjectAttributes ( LPWSTR * pAttributeNames, unsigned long dwNumberAttributes, struct _ads_attr_info * * ppAttributeEntries, unsigned long * pdwNumAttributesReturned );
__declspec(implementation_key(430)) HRESULT IDirectoryObject::SetObjectAttributes ( struct _ads_attr_info * pAttributeEntries, unsigned long dwNumAttributes, unsigned long * pdwNumAttributesModified );
__declspec(implementation_key(431)) HRESULT IDirectoryObject::CreateDSObject ( LPWSTR pszRDNName, struct _ads_attr_info * pAttributeEntries, unsigned long dwNumAttributes, IDispatch * * ppObject );
__declspec(implementation_key(432)) HRESULT IDirectoryObject::DeleteDSObject ( LPWSTR pszRDNName );
__declspec(implementation_key(433)) HRESULT IDirectorySearch::SetSearchPreference ( struct ads_searchpref_info * pSearchPrefs, unsigned long dwNumPrefs );
__declspec(implementation_key(434)) HRESULT IDirectorySearch::ExecuteSearch ( LPWSTR pszSearchFilter, LPWSTR * pAttributeNames, unsigned long dwNumberAttributes, void * * phSearchResult );
__declspec(implementation_key(435)) HRESULT IDirectorySearch::AbandonSearch ( void * phSearchResult );
__declspec(implementation_key(436)) HRESULT IDirectorySearch::GetFirstRow ( void * hSearchResult );
__declspec(implementation_key(437)) HRESULT IDirectorySearch::GetNextRow ( void * hSearchResult );
__declspec(implementation_key(438)) HRESULT IDirectorySearch::GetPreviousRow ( void * hSearchResult );
__declspec(implementation_key(439)) HRESULT IDirectorySearch::GetNextColumnName ( void * hSearchHandle, LPWSTR * ppszColumnName );
__declspec(implementation_key(440)) HRESULT IDirectorySearch::GetColumn ( void * hSearchResult, LPWSTR szColumnName, struct ads_search_column * pSearchColumn );
__declspec(implementation_key(441)) HRESULT IDirectorySearch::FreeColumn ( struct ads_search_column * pSearchColumn );
__declspec(implementation_key(442)) HRESULT IDirectorySearch::CloseSearchHandle ( void * hSearchResult );
__declspec(implementation_key(443)) HRESULT IDirectorySchemaMgmt::EnumAttributes ( LPWSTR * ppszAttrNames, unsigned long dwNumAttributes, struct _ads_attr_def * * ppAttrDefinition, unsigned long * pdwNumAttributes );
__declspec(implementation_key(444)) HRESULT IDirectorySchemaMgmt::CreateAttributeDefinition ( LPWSTR pszAttributeName, struct _ads_attr_def * pAttributeDefinition );
__declspec(implementation_key(445)) HRESULT IDirectorySchemaMgmt::WriteAttributeDefinition ( LPWSTR pszAttributeName, struct _ads_attr_def * pAttributeDefinition );
__declspec(implementation_key(446)) HRESULT IDirectorySchemaMgmt::DeleteAttributeDefinition ( LPWSTR pszAttributeName );
__declspec(implementation_key(447)) HRESULT IDirectorySchemaMgmt::EnumClasses ( LPWSTR * ppszClassNames, unsigned long dwNumClasses, struct _ads_class_def * * ppClassDefinition, unsigned long * pdwNumClasses );
__declspec(implementation_key(448)) HRESULT IDirectorySchemaMgmt::WriteClassDefinition ( LPWSTR pszClassName, struct _ads_class_def * pClassDefinition );
__declspec(implementation_key(449)) HRESULT IDirectorySchemaMgmt::CreateClassDefinition ( LPWSTR pszClassName, struct _ads_class_def * pClassDefinition );
__declspec(implementation_key(450)) HRESULT IDirectorySchemaMgmt::DeleteClassDefinition ( LPWSTR pszClassName );
__declspec(implementation_key(451)) HRESULT IADsAggregatee::ConnectAsAggregatee ( IUnknown * pOuterUnknown );
__declspec(implementation_key(452)) HRESULT IADsAggregatee::DisconnectAsAggregatee ( );
__declspec(implementation_key(453)) HRESULT IADsAggregatee::RelinquishInterface ( GUID * riid );
__declspec(implementation_key(454)) HRESULT IADsAggregatee::RestoreInterface ( GUID * riid );
__declspec(implementation_key(455)) HRESULT IADsAggregator::ConnectAsAggregator ( IUnknown * pAggregatee );
__declspec(implementation_key(456)) HRESULT IADsAggregator::DisconnectAsAggregator ( );
__declspec(implementation_key(457)) long IADsAccessControlEntry::GetAccessMask ( );
__declspec(implementation_key(458)) void IADsAccessControlEntry::PutAccessMask ( long retval );
__declspec(implementation_key(459)) long IADsAccessControlEntry::GetAceType ( );
__declspec(implementation_key(460)) void IADsAccessControlEntry::PutAceType ( long retval );
__declspec(implementation_key(461)) long IADsAccessControlEntry::GetAceFlags ( );
__declspec(implementation_key(462)) void IADsAccessControlEntry::PutAceFlags ( long retval );
__declspec(implementation_key(463)) long IADsAccessControlEntry::GetFlags ( );
__declspec(implementation_key(464)) void IADsAccessControlEntry::PutFlags ( long retval );
__declspec(implementation_key(465)) _bstr_t IADsAccessControlEntry::GetObjectType ( );
__declspec(implementation_key(466)) void IADsAccessControlEntry::PutObjectType ( _bstr_t retval );
__declspec(implementation_key(467)) _bstr_t IADsAccessControlEntry::GetInheritedObjectType ( );
__declspec(implementation_key(468)) void IADsAccessControlEntry::PutInheritedObjectType ( _bstr_t retval );
__declspec(implementation_key(469)) _bstr_t IADsAccessControlEntry::GetTrustee ( );
__declspec(implementation_key(470)) void IADsAccessControlEntry::PutTrustee ( _bstr_t retval );
__declspec(implementation_key(471)) long IADsAccessControlList::GetAclRevision ( );
__declspec(implementation_key(472)) void IADsAccessControlList::PutAclRevision ( long retval );
__declspec(implementation_key(473)) long IADsAccessControlList::GetAceCount ( );
__declspec(implementation_key(474)) void IADsAccessControlList::PutAceCount ( long retval );
__declspec(implementation_key(475)) HRESULT IADsAccessControlList::AddAce ( IDispatch * pAccessControlEntry );
__declspec(implementation_key(476)) HRESULT IADsAccessControlList::RemoveAce ( IDispatch * pAccessControlEntry );
__declspec(implementation_key(477)) IDispatchPtr IADsAccessControlList::CopyAccessList ( );
__declspec(implementation_key(478)) IUnknownPtr IADsAccessControlList::Get_NewEnum ( );
__declspec(implementation_key(479)) long IADsSecurityDescriptor::GetRevision ( );
__declspec(implementation_key(480)) void IADsSecurityDescriptor::PutRevision ( long retval );
__declspec(implementation_key(481)) long IADsSecurityDescriptor::GetControl ( );
__declspec(implementation_key(482)) void IADsSecurityDescriptor::PutControl ( long retval );
__declspec(implementation_key(483)) _bstr_t IADsSecurityDescriptor::GetOwner ( );
__declspec(implementation_key(484)) void IADsSecurityDescriptor::PutOwner ( _bstr_t retval );
__declspec(implementation_key(485)) VARIANT_BOOL IADsSecurityDescriptor::GetOwnerDefaulted ( );
__declspec(implementation_key(486)) void IADsSecurityDescriptor::PutOwnerDefaulted ( VARIANT_BOOL retval );
__declspec(implementation_key(487)) _bstr_t IADsSecurityDescriptor::GetGroup ( );
__declspec(implementation_key(488)) void IADsSecurityDescriptor::PutGroup ( _bstr_t retval );
__declspec(implementation_key(489)) VARIANT_BOOL IADsSecurityDescriptor::GetGroupDefaulted ( );
__declspec(implementation_key(490)) void IADsSecurityDescriptor::PutGroupDefaulted ( VARIANT_BOOL retval );
__declspec(implementation_key(491)) IDispatchPtr IADsSecurityDescriptor::GetDiscretionaryAcl ( );
__declspec(implementation_key(492)) void IADsSecurityDescriptor::PutDiscretionaryAcl ( IDispatch * retval );
__declspec(implementation_key(493)) VARIANT_BOOL IADsSecurityDescriptor::GetDaclDefaulted ( );
__declspec(implementation_key(494)) void IADsSecurityDescriptor::PutDaclDefaulted ( VARIANT_BOOL retval );
__declspec(implementation_key(495)) IDispatchPtr IADsSecurityDescriptor::GetSystemAcl ( );
__declspec(implementation_key(496)) void IADsSecurityDescriptor::PutSystemAcl ( IDispatch * retval );
__declspec(implementation_key(497)) VARIANT_BOOL IADsSecurityDescriptor::GetSaclDefaulted ( );
__declspec(implementation_key(498)) void IADsSecurityDescriptor::PutSaclDefaulted ( VARIANT_BOOL retval );
__declspec(implementation_key(499)) IDispatchPtr IADsSecurityDescriptor::CopySecurityDescriptor ( );
__declspec(implementation_key(500)) long IADsLargeInteger::GetHighPart ( );
__declspec(implementation_key(501)) void IADsLargeInteger::PutHighPart ( long retval );
__declspec(implementation_key(502)) long IADsLargeInteger::GetLowPart ( );
__declspec(implementation_key(503)) void IADsLargeInteger::PutLowPart ( long retval );
__declspec(implementation_key(504)) void IADsNameTranslate::PutChaseReferral ( long _arg1 );
__declspec(implementation_key(505)) HRESULT IADsNameTranslate::Init ( long lnSetType, _bstr_t bstrADsPath );
__declspec(implementation_key(506)) HRESULT IADsNameTranslate::InitEx ( long lnSetType, _bstr_t bstrADsPath, _bstr_t bstrUserID, _bstr_t bstrDomain, _bstr_t bstrPassword );
__declspec(implementation_key(507)) HRESULT IADsNameTranslate::Set ( long lnSetType, _bstr_t bstrADsPath );
__declspec(implementation_key(508)) _bstr_t IADsNameTranslate::Get ( long lnFormatType );
__declspec(implementation_key(509)) HRESULT IADsNameTranslate::SetEx ( long lnFormatType, const _variant_t & pVar );
__declspec(implementation_key(510)) _variant_t IADsNameTranslate::GetEx ( long lnFormatType );
__declspec(implementation_key(511)) _variant_t IADsCaseIgnoreList::GetCaseIgnoreList ( );
__declspec(implementation_key(512)) void IADsCaseIgnoreList::PutCaseIgnoreList ( const _variant_t & retval );
__declspec(implementation_key(513)) _bstr_t IADsFaxNumber::GetTelephoneNumber ( );
__declspec(implementation_key(514)) void IADsFaxNumber::PutTelephoneNumber ( _bstr_t retval );
__declspec(implementation_key(515)) _variant_t IADsFaxNumber::GetParameters ( );
__declspec(implementation_key(516)) void IADsFaxNumber::PutParameters ( const _variant_t & retval );
__declspec(implementation_key(517)) long IADsNetAddress::GetAddressType ( );
__declspec(implementation_key(518)) void IADsNetAddress::PutAddressType ( long retval );
__declspec(implementation_key(519)) _variant_t IADsNetAddress::GetAddress ( );
__declspec(implementation_key(520)) void IADsNetAddress::PutAddress ( const _variant_t & retval );
__declspec(implementation_key(521)) _variant_t IADsOctetList::GetOctetList ( );
__declspec(implementation_key(522)) void IADsOctetList::PutOctetList ( const _variant_t & retval );
__declspec(implementation_key(523)) long IADsEmail::GetType ( );
__declspec(implementation_key(524)) void IADsEmail::PutType ( long retval );
__declspec(implementation_key(525)) _bstr_t IADsEmail::GetAddress ( );
__declspec(implementation_key(526)) void IADsEmail::PutAddress ( _bstr_t retval );
__declspec(implementation_key(527)) long IADsPath::GetType ( );
__declspec(implementation_key(528)) void IADsPath::PutType ( long retval );
__declspec(implementation_key(529)) _bstr_t IADsPath::GetVolumeName ( );
__declspec(implementation_key(530)) void IADsPath::PutVolumeName ( _bstr_t retval );
__declspec(implementation_key(531)) _bstr_t IADsPath::GetPath ( );
__declspec(implementation_key(532)) void IADsPath::PutPath ( _bstr_t retval );
__declspec(implementation_key(533)) _bstr_t IADsReplicaPointer::GetServerName ( );
__declspec(implementation_key(534)) void IADsReplicaPointer::PutServerName ( _bstr_t retval );
__declspec(implementation_key(535)) long IADsReplicaPointer::GetReplicaType ( );
__declspec(implementation_key(536)) void IADsReplicaPointer::PutReplicaType ( long retval );
__declspec(implementation_key(537)) long IADsReplicaPointer::GetReplicaNumber ( );
__declspec(implementation_key(538)) void IADsReplicaPointer::PutReplicaNumber ( long retval );
__declspec(implementation_key(539)) long IADsReplicaPointer::GetCount ( );
__declspec(implementation_key(540)) void IADsReplicaPointer::PutCount ( long retval );
__declspec(implementation_key(541)) _variant_t IADsReplicaPointer::GetReplicaAddressHints ( );
__declspec(implementation_key(542)) void IADsReplicaPointer::PutReplicaAddressHints ( const _variant_t & retval );
__declspec(implementation_key(543)) _bstr_t IADsAcl::GetProtectedAttrName ( );
__declspec(implementation_key(544)) void IADsAcl::PutProtectedAttrName ( _bstr_t retval );
__declspec(implementation_key(545)) _bstr_t IADsAcl::GetSubjectName ( );
__declspec(implementation_key(546)) void IADsAcl::PutSubjectName ( _bstr_t retval );
__declspec(implementation_key(547)) long IADsAcl::GetPrivileges ( );
__declspec(implementation_key(548)) void IADsAcl::PutPrivileges ( long retval );
__declspec(implementation_key(549)) IDispatchPtr IADsAcl::CopyAcl ( );
__declspec(implementation_key(550)) long IADsTimestamp::GetWholeSeconds ( );
__declspec(implementation_key(551)) void IADsTimestamp::PutWholeSeconds ( long retval );
__declspec(implementation_key(552)) long IADsTimestamp::GetEventID ( );
__declspec(implementation_key(553)) void IADsTimestamp::PutEventID ( long retval );
__declspec(implementation_key(554)) _variant_t IADsPostalAddress::GetPostalAddress ( );
__declspec(implementation_key(555)) void IADsPostalAddress::PutPostalAddress ( const _variant_t & retval );
__declspec(implementation_key(556)) long IADsBackLink::GetRemoteID ( );
__declspec(implementation_key(557)) void IADsBackLink::PutRemoteID ( long retval );
__declspec(implementation_key(558)) _bstr_t IADsBackLink::GetObjectName ( );
__declspec(implementation_key(559)) void IADsBackLink::PutObjectName ( _bstr_t retval );
__declspec(implementation_key(560)) _bstr_t IADsTypedName::GetObjectName ( );
__declspec(implementation_key(561)) void IADsTypedName::PutObjectName ( _bstr_t retval );
__declspec(implementation_key(562)) long IADsTypedName::GetLevel ( );
__declspec(implementation_key(563)) void IADsTypedName::PutLevel ( long retval );
__declspec(implementation_key(564)) long IADsTypedName::GetInterval ( );
__declspec(implementation_key(565)) void IADsTypedName::PutInterval ( long retval );
__declspec(implementation_key(566)) _bstr_t IADsHold::GetObjectName ( );
__declspec(implementation_key(567)) void IADsHold::PutObjectName ( _bstr_t retval );
__declspec(implementation_key(568)) long IADsHold::GetAmount ( );
__declspec(implementation_key(569)) void IADsHold::PutAmount ( long retval );
__declspec(implementation_key(570)) _variant_t IADsObjectOptions::GetOption ( long lnOption );
__declspec(implementation_key(571)) HRESULT IADsObjectOptions::SetOption ( long lnOption, const _variant_t & vValue );
__declspec(implementation_key(572)) HRESULT IADsPathname::Set ( _bstr_t bstrADsPath, long lnSetType );
__declspec(implementation_key(573)) HRESULT IADsPathname::SetDisplayType ( long lnDisplayType );
__declspec(implementation_key(574)) _bstr_t IADsPathname::Retrieve ( long lnFormatType );
__declspec(implementation_key(575)) long IADsPathname::GetNumElements ( );
__declspec(implementation_key(576)) _bstr_t IADsPathname::GetElement ( long lnElementIndex );
__declspec(implementation_key(577)) HRESULT IADsPathname::AddLeafElement ( _bstr_t bstrLeafElement );
__declspec(implementation_key(578)) HRESULT IADsPathname::RemoveLeafElement ( );
__declspec(implementation_key(579)) IDispatchPtr IADsPathname::CopyPath ( );
__declspec(implementation_key(580)) _bstr_t IADsPathname::GetEscapedElement ( long lnReserved, _bstr_t bstrInStr );
__declspec(implementation_key(581)) long IADsPathname::GetEscapedMode ( );
__declspec(implementation_key(582)) void IADsPathname::PutEscapedMode ( long retval );
__declspec(implementation_key(583)) _bstr_t IADsADSystemInfo::GetUserName ( );
__declspec(implementation_key(584)) _bstr_t IADsADSystemInfo::GetComputerName ( );
__declspec(implementation_key(585)) _bstr_t IADsADSystemInfo::GetSiteName ( );
__declspec(implementation_key(586)) _bstr_t IADsADSystemInfo::GetDomainShortName ( );
__declspec(implementation_key(587)) _bstr_t IADsADSystemInfo::GetDomainDNSName ( );
__declspec(implementation_key(588)) _bstr_t IADsADSystemInfo::GetForestDNSName ( );
__declspec(implementation_key(589)) _bstr_t IADsADSystemInfo::GetPDCRoleOwner ( );
__declspec(implementation_key(590)) _bstr_t IADsADSystemInfo::GetSchemaRoleOwner ( );
__declspec(implementation_key(591)) VARIANT_BOOL IADsADSystemInfo::GetIsNativeMode ( );
__declspec(implementation_key(592)) _bstr_t IADsADSystemInfo::GetAnyDCName ( );
__declspec(implementation_key(593)) _bstr_t IADsADSystemInfo::GetDCSiteName ( _bstr_t szServer );
__declspec(implementation_key(594)) HRESULT IADsADSystemInfo::RefreshSchemaCache ( );
__declspec(implementation_key(595)) _variant_t IADsADSystemInfo::GetTrees ( );
__declspec(implementation_key(596)) _bstr_t IADsWinNTSystemInfo::GetUserName ( );
__declspec(implementation_key(597)) _bstr_t IADsWinNTSystemInfo::GetComputerName ( );
__declspec(implementation_key(598)) _bstr_t IADsWinNTSystemInfo::GetDomainName ( );
__declspec(implementation_key(599)) _bstr_t IADsWinNTSystemInfo::GetPDC ( );
__declspec(implementation_key(600)) _variant_t IADsDNWithBinary::GetBinaryValue ( );
__declspec(implementation_key(601)) void IADsDNWithBinary::PutBinaryValue ( const _variant_t & retval );
__declspec(implementation_key(602)) _bstr_t IADsDNWithBinary::GetDNString ( );
__declspec(implementation_key(603)) void IADsDNWithBinary::PutDNString ( _bstr_t retval );
__declspec(implementation_key(604)) _bstr_t IADsDNWithString::GetStringValue ( );
__declspec(implementation_key(605)) void IADsDNWithString::PutStringValue ( _bstr_t retval );
__declspec(implementation_key(606)) _bstr_t IADsDNWithString::GetDNString ( );
__declspec(implementation_key(607)) void IADsDNWithString::PutDNString ( _bstr_t retval );
#pragma stop_map_region

#pragma pack(pop)
